% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SPACox.R
\name{GRAB.SPACox}
\alias{GRAB.SPACox}
\title{SPACox method in GRAB package}
\usage{
GRAB.SPACox()
}
\description{
SPACox method is to analysis time-to-event phenotype for unrelated samples in a large-scale biobank.
}
\details{
Please check \code{?GRAB.control} for the generic list of \code{control} in \code{GRAB.NullModel()} and \code{GRAB.Marker()}.

Additional list of \code{control} in \code{GRAB.NullModel()} function
\itemize{
\item{\code{range}: a two-element numeric vector [default=c(-100,100)] to specify the domain of the empirical CGF.}
\item{\code{length.out}: a positive integer [default=10000] for empirical CGF. Larger length.out corresponds to longer calculation time and more accurate estimated empirical CGF.}
}
Additional list of \code{control} in \code{GRAB.Marker()} function
\itemize{
\item{\code{pVal_covaAdj_Cutoff}: a numeric value [default=5e-5]. If the p-value is less than this cutoff, then we would use an additional technic to adjust for covariates.}
\item{\code{SPA_cutoff}: a numeric value [default=2] to specify the standard deviation cutoff to be used. If the test statistic lies within the standard deviation cutoff, its p value is calculated based on a normal distribution approximation, otherwise, its p value is calculated based on a saddlepoint approximation.}
}
}
\examples{
# Step 1: fit a null model
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
obj.SPACox = GRAB.NullModel(survival::Surv(time,event) ~ Cova1 + Cova2, 
                            data = PhenoData, subjData = PhenoData$IID, 
                            method = "SPACox", traitType = "time-to-event")

# Step 2: perform score test
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/SPACoxMarkers.txt")
GRAB.Marker(obj.SPACox, GenoFile = GenoFile,
            OutputFile = OutputFile)
head(read.table(OutputFile, header=T))
}
