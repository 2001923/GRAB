% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Geno.R
\name{GRAB.ReadGeno}
\alias{GRAB.ReadGeno}
\title{Read genotype data into R as a matrix}
\usage{
GRAB.ReadGeno(
  GenoFile,
  GenoFileIndex = NULL,
  SampleIDs = NULL,
  MarkerIDs = NULL
)
}
\arguments{
\item{GenoFile}{a character of genotype file. See \code{Details} section for more information.}

\item{GenoFileIndex}{additional index file(s) corresponding to the \code{GenoFile}. See \code{Details} section for more information.}

\item{SampleIDs}{a character vector of sample IDs to extract. The default is NULL, that is, to use all samples in GenoFile.}

\item{MarkerIDs}{a character vector of marker IDs to extract. The default is NULL, the first 10 markers will be extracted.}
}
\value{
An R list include an R genotype matrix (each row is for one sample and each column is for one marker) and an R SNP information matrix.
}
\description{
GRAB package provides functions to read in genotype data from multiple format (including Plink, BGEN) into R
}
\details{
We support three genotype format including Plink, BGEN, and VCF.
The program will check the format based on the filename extension.  
If \code{GenoFileIndex} is NULL (default), then it uses the same prefix as \code{GenoFile}.
\describe{
  \item{Plink}{\code{GenoFile}: "prefix.bed"; \code{GenoFileIndex}: c("prefix.bim", "prefix.fam")}
  \item{BGEN}{\code{GenoFile}: "prefix.bgen"; \code{GenoFileIndex}: "prefix.bgen.bgi"}
  \item{VCF}{Not available now. \code{GenoFile}: "prefix.vcf"; \code{GenoFileIndex}: "prefix.vcf.tbi"}
}
}
\examples{

## The below is raw data 
RawFile = system.file("extdata", "example.raw", package = "GRAB")
GenoMat = data.table::fread(RawFile)
head(GenoMat[,1:15])

## The below is for Plink format
PlinkFile = system.file("extdata", "example.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PlinkFile)
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
head(GenoMat)
markerInfo

## The below is for BGEN format
BGENFile = system.file("extdata", "example_bgen_1.2_8bits.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile)
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
head(GenoMat)
markerInfo

}
