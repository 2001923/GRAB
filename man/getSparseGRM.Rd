% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SparseGRM.R
\name{getSparseGRM}
\alias{getSparseGRM}
\title{Make a \code{SparseGRMFile} for \code{\link{GRAB_Null_Model}}.}
\usage{
getSparseGRM(
  PlinkFile,
  nPartsGRM,
  SparseGRMFile,
  tempDir = NULL,
  relatednessCutoff = 0.05,
  minMafGRM = 0.01,
  maxMissingGRM = 0.1,
  rm.tempFiles = FALSE
)
}
\arguments{
\item{PlinkFile}{a path to PLINK files (without file extensions of bed/bim/fam). Note that the current version (gcta_1.93.1beta) of gcta software does not support different prefix names for bim, bed, and fam files.}

\item{nPartsGRM}{a numeric value (e.g. 250): GCTA software can split subjects to multiple parts. For UK Biobank analysis, it is recommended to set \code{nPartsGRM=250}.}

\item{SparseGRMFile}{a path to file of output to be passed to \code{\link{GRAB.NullModel}}.}

\item{tempDir}{a path to store temp files from \code{\link{getTempFilesFullGRM}}. This should be consistent to the input of \code{\link{getTempFilesFullGRM}}. Default is system.file("SparseGRM", "temp", package = "GRAB").}

\item{relatednessCutoff}{a cutoff for sparse GRM, only kinship coefficient greater than this cutoff will be retained in sparse GRM. [default=0.05].}

\item{minMafGRM}{Minimal value of MAF cutoff to select markers (from PLINK files) to make sparse GRM. [default=0.01]}

\item{maxMissingGRM}{Maximal value of missing rate to select markers (from PLINK files) to make sparse GRM. [default=0.1]}

\item{rm.tempFiles}{a logical value indicating if the temp files generated in \code{\link{getTempFilesFullGRM}} will be deleted. [default=FALSE].}
}
\description{
If the sample size in analysis is greater than 100,000, we recommend using sparse GRM (instead of dense GRM) to adjust for sample relatedness. 
This function is to use \code{GCTA} software (gcta_1.93.1beta, \link{https://cnsgenomics.com/software/gcta/#Overview}) to make a \code{SparseGRMFile} to be passed to function \code{\link{GRAB_Null_Model}}.
This function can only support \code{Linux} and \code{PLINK} files as required by \code{GCTA} software. To make a \code{SparseGRMFile}, two steps are needed. Please check \code{Details} section for more details.
}
\details{
\describe{
\itemize{
  \item \code{Step 1}: Run \code{\link{getTempFilesFullGRM}} to get temporary files.
  \item \code{Step 2}: Run \code{getSparseGRM} to combine the temporary files to make a \code{SparseGRMFile} to be passed to \code{\link{GRAB.NullModel}}.
  }
}
}
\examples{
## Input data:
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
PlinkFile = tools::file_path_sans_ext(GenoFile)   # fam/bim/bed files should have the same prefix
nPartsGRM = 2;   # nPartsGRM = 250 for UK Biobank data analysis with 500K samples.

## Step 1:
## We strongly suggest parallel computing in high performance clusters (HPC) for different pairs of (chrParallel, partParallel). 
for(partParallel in 1:nPartsGRM){
  getTempFilesFullGRM(PlinkFile, nPartsGRM, partParallel)
}

## After step 1, the results are stored in "tempDir (default: system.file("SparseGRM", "temp", package = "GRAB"))", which might needs large amount of space.

## Step 2:
## Combine results in step 1 to calculate an object with class of SparseGRM for GRAB_Null_Model(),
tempDir = system.file("SparseGRM", "temp", package = "GRAB")
SparseGRMFile = gsub("temp", "SparseGRM.txt", tempDir)
SparseGRM = getSparseGRM(PlinkFile, nPartsGRM, SparseGRMFile)

## NOTE: You can change some options such as (minMafGRM, maxMissingGRM, nPartsGRM), but keep in mind that functions getSparseGRMParallel() and getSparseGRM() should use the same options.
}
