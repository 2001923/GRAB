
setMarker.POLMM = function(objNull, control, chrom)
{
  if(objNull$controlList$LOCO){
    if(!chrom %in% names(objNull$LOCOList))
      stop("'chrom' should be in names(objNull$LOCOList).")
    objCHR = objNull$LOCOList[[chrom]]
  }else{
    # to be continued
  }
  
  # single marker analysis does not require sparse GRM any more 
  # Note: it might be not so accurate if min_mac_marker is very low
  SPmatR.CHR = list(locations = c(0,0), values = 1)
  
  setPOLMMobjInCPP(objCHR$muMat,
                   objCHR$iRMat,
                   objNull$Cova,
                   objNull$yVec,          # 1 to J
                   SPmatR.CHR,
                   objNull$tau,
                   control$printPCGInfo,
                   control$tolPCG,
                   control$maxiterPCG)
  
  print(paste0("The current POLMM.control$nMarkers_output is ", nMarkers_output,"."))
}

mainMarker.POLMM = function(objNull, control, markers, genoType)
{
  OutList = mainMarkerInCPP("POLMM",
                            genoType,
                            markers,
                            control$SPA_cutoff,
                            control$missing_cutoff,
                            control$min_maf_region,
                            control$min_mac_region)  
  
  markerVec = OutList$markerVec   # marker IDs
  infoVec = OutList$infoVec       # marker infomation: CHR:POS:REF:ALT
  flipVec = OutList$flipVec       # 
  freqVec = OutList$freqVec       # minor allele frequencies (freq of ALT if flip=F, freq of REF if flip=T)
  BetaVec = OutList$BetaVec       # beta for ALT if flip=F, beta for REF if flip=T
  seBetaVec = OutList$seBetaVec   # sebeta
  PvalVec = OutList$pvalVec;      # marker-level p-values
  
  obj.mainMarker = data.frame(Marker = markerVec,
                              Info = infoVec,
                              Flip = flipVec,
                              Freq = freqVec,
                              Beta = BetaVec,
                              seBeta = seBetaVec,
                              Pval = PvalVec)
  return(obj.mainMarker)
}
