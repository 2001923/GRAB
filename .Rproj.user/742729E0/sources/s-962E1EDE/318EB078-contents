
### load in codes
library(survival)
library(SPAtest)

source("/net/snowwhite/home/wenjianb/SGWAS/Package/coxphf/coxphf.R")
source("/net/snowwhite/home/wenjianb/SGWAS/Package/coxphf/decomposeSurv.r")
dyn.load("/net/snowwhite/home/wenjianb/SGWAS/Package/coxphf/coxphf_v3.so")
## Score test
source('/net/snowwhite/home/wenjianb/SGWAS/Package/SGWAS_0.1.3/Library.r')
Rcpp::sourceCpp('/net/snowwhite/home/wenjianb/SGWAS/Package/SGWAS_0.1.3/Rcpp.cpp')

makePvalue = function(GaP, pvals.in, MAF, pos.tot){
  
  ### fastSPA
  #SA_NULL_surv = ScoreTest_wSaddleApprox_NULL_Model(event~X1+X2+surv.time, data=GaP)
  #SA_NULL_cens = ScoreTest_wSaddleApprox_NULL_Model(event~X1+X2+cens, data=GaP)
  #SA_NULL_none = ScoreTest_wSaddleApprox_NULL_Model(event~X1+X2, data=GaP)
  
  ### Score test from observed information matrix
  NULL_Score = Get_Null_Model(Surv(GaP$surv.time,GaP$event)~GaP$X1+GaP$X2,length.out = 100)
                           
  ############
  
  Pvalue = c()
  # pos.tot = which(pvals.in$V2<5e-3)
  
  for(pos in pos.tot){
    ### fastSPA
    set.seed(pos)
    G = rbinom(nrow(GaP), 2, MAF)
    #obj.surv = ScoreTest_SPA(t(G),obj.null = SA_NULL_surv);
    #obj.cens = ScoreTest_SPA(t(G),obj.null = SA_NULL_cens);
    #obj.none = ScoreTest_SPA(t(G),obj.null = SA_NULL_none);
    #pvals.surv = obj.surv$p.value
    #pvals.cens = obj.cens$p.value
    #pvals.none = obj.none$p.value
    
    GaP$G = G
    ### Wald
    res.cox = coxph(Surv(surv.time,event)~X1+X2+G, data = GaP)
    pval.cox = summary(res.cox)$coefficients["G","Pr(>|z|)"]
    
    ### Firth
    #res.firth = coxphf(Surv(surv.time,event)~X1+X2+G, data = GaP)
    #pval.firth = res.firth$prob["G"];
    
    ### Score test from observed information matrix
    S = sum(GaP$G * NULL_Score$resid)
    S.var = Get_VarQ(NULL_Score$objV, GaP$G)
    pval.score = pnorm(abs(S/sqrt(S.var)), lower.tail = FALSE)*2
    
    ############
    
    Pvalue = rbind(Pvalue,
                   #c(pos,pvals.surv,pvals.cens,pvals.none,pval.cox,pval.firth,pval.score))
                   c(pos,pval.cox,pval.score))
  }
  
  #colnames(Pvalue) = c("pos","pvals.surv","pvals.cens","pvals.none","pval.cox","pval.firth","pval.score")
  colnames(Pvalue) = c("pos","pval.cox","pval.score")
  Pvalue = as.data.frame(Pvalue)
  return(Pvalue)
}
