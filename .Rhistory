control = list(showInfo = FALSE, LOCO = FALSE, tolTau = 0.2, tolBeta = 0.1))
names(obj.POLMM)
obj.POLMM$tau    # 1.379501
# Step 2: perform score test
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/POLMMMarkers.txt")
GRAB.Marker(obj.POLMM, GenoFile = GenoFile,
OutputFile = OutputFile)
table(obj.POLMM$yVec)
a=obj.POLMM$LOCOList$`LOCO=F`
names(a)
a$VarRatio
obj.POLMM$control
library(SPAtest)
a=function(x,y){x+y}
a=function(x,y,z){x+y+z}
a
objNull = obj.POLMM
names(objNull)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
objGeno = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData, control)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
control = NULL
control = checkControl.Marker(control, "POLMM")
control = NULL
objGeno = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData, control)
GenoFIleIndex = NULL
objGeno = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData, control)
GenoFileIndex = NULL
objGeno = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData, control)
subjData = obj.POLMM$subjData
length(subjData)
head(subjData)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
GenoFileIndex = NULL
control = NULL
subjData = obj.POLMM$subjData
objGeno = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData, control)
objGeno$markerInfo
head(objGeno$markerInfo)
markerInfo = objGeno$markerInfo
CHROM = markerInfo$CHROM
genoIndex = markerInfo$genoIndex
nMarkersEachChunk = 10000
M = length(genoIndex)
M
table(CHROM)
class(CHROM)
uCHROM = unique(CHROM)
uCHROM
genoIndexMat = c()
uCHROM = unique(CHROM)
for(chrom in uCHROM){
pos = which(CHROM == chrom)
gIdx = genoIndex[pos]
M = length(gIdx)
idxStart = seq(1, M, nMarkersEachChunk)
idxEnd = idxStart + nMarkersEachChunk - 1
nChunks = length(idxStart)
idxEnd[nChunks] = M
for(i in 1:nChunks){
idxMarker = idxStart[i]:idxEnd[i]
genoIndexMat = rbind(genoIndexMat,
c(chrom, gIdx[idxMarker]))
}
}
warnings()
genoIndexMat = c()
uCHROM = unique(CHROM)
for(chrom in uCHROM){
pos = which(CHROM == chrom)
gIdx = genoIndex[pos]
M = length(gIdx)
idxStart = seq(1, M, nMarkersEachChunk)
idxEnd = idxStart + nMarkersEachChunk - 1
nChunks = length(idxStart)
idxEnd[nChunks] = M
for(i in 1:nChunks){
idxMarker = idxStart[i]:idxEnd[i]
genoIndexMat = rbind(genoIndexMat,
cbind(chrom, gIdx[idxMarker]))
}
}
dim(genoIndexMat)
head(genoIndexMat)
aList=list()
aList[[1]]=a
aList[[1]]="a"
aList[[2]]="b"
aList
genoIndexList = list()
iTot = 1;
uCHROM = unique(CHROM)
for(chrom in uCHROM){
pos = which(CHROM == chrom)
gIdx = genoIndex[pos]
M = length(gIdx)
idxStart = seq(1, M, nMarkersEachChunk)
idxEnd = idxStart + nMarkersEachChunk - 1
nChunks = length(idxStart)
idxEnd[nChunks] = M
for(i in 1:nChunks){
idxMarker = idxStart[i]:idxEnd[i]
genoIndexList[[iTot]] = list(chrom = chrom,
genoIndex = gIdx[idxMarker])
iTot = iTot + 1;
}
}
length(genoIndexList)
genoIndexList[[1]]
genoIndexList[[2]]
2579*6.5
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
?GRAB.SPACox
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
obj.SPACox = GRAB.NullModel(survival::Surv(time,event) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID,
method = "SPACox", traitType = "time-to-event")
# Step 2: perform score test
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/SPACoxMarkers.txt")
GRAB.Marker(obj.SPACox, GenoFile = GenoFile,
OutputFile = OutputFile)
?GRAB.POLMM
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile,
control = list(showInfo = FALSE, LOCO = FALSE, tolTau = 0.2, tolBeta = 0.1))
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/POLMMMarkers.txt")
GRAB.Marker(obj.POLMM, GenoFile = GenoFile,
OutputFile = OutputFile)
objNull = obj.POLMM
objNull$Cova
objNull$yVec
objNull$tau
control$printPCGInfo
control = NULL
NullModelClass = "POLMM_NULL_Model"
GRAB:::checkControl.ReadGeno(control)
control = GRAB:::checkControl.Marker(control, NullModelClass)
control
objNull$control
remove.packages("GRAB", lib="~/R/win-library/4.0")
c(0,0)
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
setwd("C:/Users/wenji/OneDrive/Documents/Github")
load("obj.POLMM.RData")
names(obj.POLMM)
obj.POLMM$tau    # 1.379501
objNull = obj.POLMM
if(objNull$control$LOCO){
if(!chrom %in% names(objNull$LOCOList))
stop("'chrom' should be in names(objNull$LOCOList).")
objCHR = objNull$LOCOList[[chrom]]
}else{
objCHR = objNull$LOCOList[["LOCO=F"]]
}
# marker-level analysis does not require the following parameters
# Note: it might be not so accurate if min_mac_marker is very low
SPmatR.CHR = list(locations = matrix(c(0,0),2,1), values = 1)
printPCGInfo = FALSE
tolPCG = 0.001
maxiterPCG = 100;
control = list(SPA_Cutoff = 2)
# The following function is in 'Main.cpp'
GRAB:::setPOLMMobjInCPP(objCHR$muMat,
objCHR$iRMat,
objNull$Cova,
objNull$yVec,          # 0 to J-1
SPmatR.CHR,
objNull$tau,
printPCGInfo,
tolPCG,
maxiterPCG,
objCHR$VarRatio,
control$SPA_Cutoff)
GRAB:::setPOLMMobjInCPP(objCHR$muMat,
objCHR$iRMat,
objNull$Cova,
objNull$yVec,          # 0 to J-1
SPmatR.CHR,
objNull$tau,
printPCGInfo,
tolPCG,
maxiterPCG,
objCHR$VarRatio,
control$SPA_Cutoff,
flagSparseGRM)
# marker-level analysis does not require the following parameters
# Note: it might be not so accurate if min_mac_marker is very low
flagSparseGRM = FALSE
GRAB:::setPOLMMobjInCPP(objCHR$muMat,
objCHR$iRMat,
objNull$Cova,
objNull$yVec,          # 0 to J-1
SPmatR.CHR,
objNull$tau,
printPCGInfo,
tolPCG,
maxiterPCG,
objCHR$VarRatio,
control$SPA_Cutoff,
flagSparseGRM)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
setwd("C:/Users/wenji/OneDrive/Documents/Github")
load("obj.POLMM.RData")
names(obj.POLMM)
obj.POLMM$tau    # 1.379501
objNull = obj.POLMM
if(objNull$control$LOCO){
if(!chrom %in% names(objNull$LOCOList))
stop("'chrom' should be in names(objNull$LOCOList).")
objCHR = objNull$LOCOList[[chrom]]
}else{
objCHR = objNull$LOCOList[["LOCO=F"]]
}
# marker-level analysis does not require the following parameters
# Note: it might be not so accurate if min_mac_marker is very low
flagSparseGRM = FALSE
SPmatR.CHR = list(locations = matrix(c(0,0),2,1), values = 1)
printPCGInfo = FALSE
tolPCG = 0.001
maxiterPCG = 100;
control = list(SPA_Cutoff = 2)
# The following function is in 'Main.cpp'
GRAB:::setPOLMMobjInCPP(objCHR$muMat,
objCHR$iRMat,
objNull$Cova,
objNull$yVec,          # 0 to J-1
SPmatR.CHR,
objNull$tau,
printPCGInfo,
tolPCG,
maxiterPCG,
objCHR$VarRatio,
control$SPA_Cutoff,
flagSparseGRM)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
setwd("C:/Users/wenji/OneDrive/Documents/Github")
load("obj.POLMM.RData")
# Step 2: perform score test
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/POLMMMarkers.txt")
GRAB.Marker(obj.POLMM, GenoFile = GenoFile,
OutputFile = OutputFile)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
setwd("C:/Users/wenji/OneDrive/Documents/Github")
load("obj.POLMM.RData")
# Step 2: perform score test
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/POLMMMarkers.txt")
GRAB.Marker(obj.POLMM, GenoFile = GenoFile,
OutputFile = OutputFile)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
?GRAB.control
setwd("C:/Users/wenji/OneDrive/Documents/Github")
load("obj.POLMM.RData")
IDsToIncludeFile = system.file("extdata", "IDsToInclude.txt", package = "GRAB")
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/POLMMMarkers.txt")
GRAB.Marker(obj.POLMM, GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
read.table("C:/Users/wenji/OneDrive/Documents/R/win-library/4.0/GRAB/results/POLMMMarkers.txt")
read.table("C:/Users/wenji/OneDrive/Documents/R/win-library/4.0/GRAB/results/POLMMMarkers.txt", header = T)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
setwd("C:/Users/wenji/OneDrive/Documents/Github")
load("obj.POLMM.RData")
IDsToIncludeFile = system.file("extdata", "IDsToInclude.txt", package = "GRAB")
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/POLMMMarkers.txt")
GRAB.Marker(obj.POLMM, GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
setwd("C:/Users/wenji/OneDrive/Documents/Github")
load("obj.POLMM.RData")
IDsToIncludeFile = system.file("extdata", "IDsToInclude.txt", package = "GRAB")
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/POLMMMarkers.txt")
GRAB.Marker(obj.POLMM, GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
setwd("C:/Users/wenji/OneDrive/Documents/Github")
load("obj.POLMM.RData")
IDsToIncludeFile = system.file("extdata", "IDsToInclude.txt", package = "GRAB")
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/POLMMMarkers.txt")
GRAB.Marker(obj.POLMM, GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
read.table("C:/Users/wenji/OneDrive/Documents/R/win-library/4.0/GRAB/results/POLMMMarkers.txt", header = T)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(POLMM)
?POLMM.plink
setwd("C:/Users/wenji/OneDrive/Documents/Github")
load("obj.POLMM.RData")
IDsToIncludeFile = system.file("extdata", "IDsToInclude.txt", package = "GRAB")
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/POLMMMarkers.txt")
GRAB.Marker(obj.POLMM, GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
read.table("C:/Users/wenji/OneDrive/Documents/R/win-library/4.0/GRAB/results/POLMMMarkers.txt", header = T)
library(GRAB)
setwd("C:/Users/wenji/OneDrive/Documents/Github")
load("obj.POLMM.RData")
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoFile
PlinkFile = gsub(".bed$","",GenoFile)
PlinkFile
library(POLMM)
PlinkFile = gsub(".bed$","",GenoFile)
output.file = "C:/Users/wenji/OneDrive/Documents/Github/POLMM.txt"
POLMM.plink(
obj.POLMM,
PlinkFile,
output.file,
"1",
memory.chunk = 4,
SPAcutoff = 2,
minMAF = 1e-04,
maxMissing = 0.15,
impute.method = "fixed",
G.model = "Add"
)
POLMM.plink(
obj.POLMM,
PlinkFile,
output.file,
rep("1",10000),
memory.chunk = 4,
SPAcutoff = 2,
minMAF = 1e-04,
maxMissing = 0.15,
impute.method = "fixed",
G.model = "Add"
)
obj.POLMM$subjIDs = obj.POLMM$subjData
POLMM.plink(
obj.POLMM,
PlinkFile,
output.file,
"1",
memory.chunk = 4,
SPAcutoff = 2,
minMAF = 1e-04,
maxMissing = 0.15,
impute.method = "fixed",
G.model = "Add"
)
?POLMM_Null_Model
obj.POLMM = POLMM_Null_Model(factor(Ordinal) ~ Cova1 + Cova2, PhenoData, PhenoData$IID,
"C:/Users/wenji/OneDrive/Documents/R/win-library/4.0/GRAB/extdata/example",
control = list(showInfo = FALSE, LOCO = FALSE, tolTau = 0.2, tolBeta = 0.1))
obj.POLMM$tau
PlinkFile = gsub(".bed$","",GenoFile)
output.file = "C:/Users/wenji/OneDrive/Documents/Github/POLMM.txt"
POLMM.plink(
obj.POLMM,
PlinkFile,
output.file,
"1",
memory.chunk = 4,
SPAcutoff = 2,
minMAF = 1e-04,
maxMissing = 0.15,
impute.method = "fixed",
G.model = "Add"
)
head(read.table("C:/Users/wenji/OneDrive/Documents/R/win-library/4.0/GRAB/results/POLMM.txt", header = T))
head(read.table("C:/Users/wenji/OneDrive/Documents/Github/POLMM.txt", header = T))
setwd("C:/Users/wenji/OneDrive/Documents/Github")
load("obj.POLMM.RData")
IDsToIncludeFile = system.file("extdata", "IDsToInclude.txt", package = "GRAB")
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/POLMMMarkers.txt")
GRAB.Marker(obj.POLMM, GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
read.table("C:/Users/wenji/OneDrive/Documents/R/win-library/4.0/GRAB/results/POLMMMarkers.txt", header = T)
head(read.table("C:/Users/wenji/OneDrive/Documents/Github/POLMM.txt", header = T))
setwd("C:/Users/wenji/OneDrive/Documents/Github")
load("obj.POLMM.RData")
obj.POLMM$tau
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
setwd("C:/Users/wenji/OneDrive/Documents/Github")
load("obj.POLMM.RData")
IDsToIncludeFile = system.file("extdata", "IDsToInclude.txt", package = "GRAB")
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/POLMMMarkers.txt")
GRAB.Marker(obj.POLMM, GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
read.table("C:/Users/wenji/OneDrive/Documents/R/win-library/4.0/GRAB/results/POLMMMarkers.txt", header = T)
head(read.table("C:/Users/wenji/OneDrive/Documents/Github/POLMM.txt", header = T))
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
setwd("C:/Users/wenji/OneDrive/Documents/Github")
load("obj.POLMM.RData")
IDsToIncludeFile = system.file("extdata", "IDsToInclude.txt", package = "GRAB")
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/POLMMMarkers.txt")
GRAB.Marker(obj.POLMM, GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
read.table("C:/Users/wenji/OneDrive/Documents/R/win-library/4.0/GRAB/results/POLMMMarkers.txt", header = T)
head(read.table("C:/Users/wenji/OneDrive/Documents/Github/POLMM.txt", header = T))
aaaInGRAB = obj.POLMM$LOCOList$`LOCO=F`
aaaInGRAB$VarRatio
aaaInGRAB$VarRatio
library(POLMM)
obj.POLMM = POLMM_Null_Model(factor(Ordinal) ~ Cova1 + Cova2, PhenoData, PhenoData$IID,
"C:/Users/wenji/OneDrive/Documents/R/win-library/4.0/GRAB/extdata/example",
control = list(showInfo = FALSE, LOCO = FALSE, tolTau = 0.2, tolBeta = 0.1))
aaaInPOLMM=obj.POLMM$LOCOList$`LOCO=F`
aaaInGRAB$VarRatio
aaaInPOLMM$VarRatio
head(aaaInGRAB$VarRatioMat)
head(aaaInPOLMM$VarRatioMat)
obj.POLMM = POLMM_Null_Model(factor(Ordinal) ~ Cova1 + Cova2, PhenoData, PhenoData$IID,
"C:/Users/wenji/OneDrive/Documents/R/win-library/4.0/GRAB/extdata/example",
control = list(showInfo = FALSE, LOCO = FALSE, tolTau = 0.2, tolBeta = 0.1))
bbbInPOLMM=obj.POLMM$LOCOList$`LOCO=F`
bbbInPOLMM$VarRatioMat
bbbInPOLMM$VarRatioMat
aaaInGRAB$VarRatioMat
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile,
control = list(showInfo = FALSE, LOCO = FALSE, tolTau = 0.2, tolBeta = 0.1
))
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile,
control = list(showInfo = FALSE, LOCO = FALSE, tolTau = 0.2, tolBeta = 0.1))
library(GRAB)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile,
control = list(showInfo = FALSE, LOCO = FALSE, tolTau = 0.2, tolBeta = 0.1))
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile,
control = list(showInfo = FALSE, LOCO = FALSE, tolTau = 0.2, tolBeta = 0.1))
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile,
control = list(showInfo = FALSE, LOCO = FALSE, tolTau = 0.2, tolBeta = 0.1))
setwd("C:/Users/wenji/OneDrive/Documents/Github")
save(obj.POLMM, file = "obj.POLMM.RData")
aaaInGRAB = obj.POLMM$LOCOList$`LOCO=F`
aaaInGRAB$VarRatio
aaaInGRAB$VarRatioMat
library(POLMM)
obj.POLMM = POLMM_Null_Model(factor(Ordinal) ~ Cova1 + Cova2, PhenoData, PhenoData$IID,
"C:/Users/wenji/OneDrive/Documents/R/win-library/4.0/GRAB/extdata/example",
control = list(showInfo = FALSE, LOCO = FALSE, tolTau = 0.2, tolBeta = 0.1))
bbbInPOLMM=obj.POLMM$LOCOList$`LOCO=F`
bbbInPOLMM$VarRatioMat
aaaInGRAB$VarRatioMat
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
