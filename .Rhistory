library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoFileIndex = NULL
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
genoList = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
memoryChunk = 2 # (GB)
minMafGRM = 0.01
maxMissingGRM = 0.1
print("test0")
Sys.sleep(1)
if(genoList$genoType != "PLINK")
stop("Only PLINK format is supported")
GRAB:::setDenseGRMInCPP(memoryChunk, minMafGRM, maxMissingGRM,
gsub("bed","bim", GenoFile), gsub("bed","fam", GenoFile), GenoFile,
genoList$SampleIDs,
genoList$AlleleOrder)
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoFileIndex = NULL
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
genoList = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
memoryChunk = 2 # (GB)
minMafGRM = 0.01
maxMissingGRM = 0.1
print("test0")
Sys.sleep(1)
if(genoList$genoType != "PLINK")
stop("Only PLINK format is supported")
GRAB:::setDenseGRMInCPP(memoryChunk, minMafGRM, maxMissingGRM,
gsub("bed","bim", GenoFile), gsub("bed","fam", GenoFile), GenoFile,
genoList$SampleIDs,
genoList$AlleleOrder)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoFileIndex = NULL
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
genoList = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
memoryChunk = 2 # (GB)
minMafGRM = 0.01
maxMissingGRM = 0.1
print("test0")
Sys.sleep(1)
if(genoList$genoType != "PLINK")
stop("Only PLINK format is supported")
GRAB:::setDenseGRMInCPP(memoryChunk, minMafGRM, maxMissingGRM,
gsub("bed","bim", GenoFile), gsub("bed","fam", GenoFile), GenoFile,
genoList$SampleIDs,
genoList$AlleleOrder)
set.seed(1)
bVec = rnorm(1000)
excludeChr = "none"
grainSize = 1
GRAB:::getDenseGRMInCPP(bVec, excludeChr, grainSize)
KinbVec = GRAB:::getDenseGRMInCPP(bVec, excludeChr, grainSize)
length(KinbVec)
head(KinbVec)
GMat = GRAB.ReadGeno(GenoFile, SampleIDs = subjData)
GMat = GMat$GenoMat
dim(GMat)
?GRAB.ReadGeno
RawFile = system.file("extdata", "example.raw", package = "GRAB")
GenoMat = data.table::fread(RawFile)
head(GenoMat[,1:15])
dim(GenoMat)
class(GenoMat)
GMat = as.matrix(GMat[,7:10006])
GMat = GMat$GenoMat
GMat = as.matrix(GMat[,7:10006])
GenoMat = as.matrix(GenoMat[,7:10006])
dim(GenoMat)
GenoMat[1:10,1:10]
MAF = apply(GenoMat, 2, mean)/2
stdGenoMat = (t(GenoMat) - 2*MAF) / sqrt(2*MAF*(1-MAF))
dim(stdGenoMat)
KinMat = t(stdGenoMat) %*% stdGenoMat
dim(KinMat)
KinMat[1:10,1:10]
dim(GenoMat)
stdGenoMat = (t(GenoMat) - 2*MAF) / sqrt(2*MAF*(1-MAF) / sqrt(ncol(GenoMat)))
KinMat = t(stdGenoMat) %*% stdGenoMat
KinMat[1:10,1:10]
stdGenoMat = (t(GenoMat) - 2*MAF) / sqrt(2*MAF*(1-MAF)) / sqrt(ncol(GenoMat))
KinMat = t(stdGenoMat) %*% stdGenoMat
KinMat[1:10,1:10]
KinbVec1 = KinMat %*% bVec
plot(KinbVec, KinbVec1)
head(cbind(KinbVec, KinbVec1))
excludeChr = "none1"
KinbVec = GRAB:::getDenseGRMInCPP(bVec, excludeChr, grainSize)
excludeChr = "1"
KinbVec = GRAB:::getDenseGRMInCPP(bVec, excludeChr, grainSize)
head(KinbVec)
GenoMat = data.table::fread(RawFile)
GenoMat[1:10,1:5]
GenoMat[1:10,1:10]
?GRAB.ReadGeno
PlinkFile = system.file("extdata", "example.bed", package = "GRAB")
IDsToIncludeFile = system.file("extdata", "example.IDsToIncludeFile.txt", package = "GRAB")
GenoList = GRAB.ReadGeno(PlinkFile,
control = list(IDsToExcludeFile = IDsToIncludeFile))
GenoMat = GenoList$GenoMat
dim(GenoMat)
markerInfo = GenoList$markerInfo
dim(markerInfo)
head(markerInfo)
pos = which(markerInfo$CHROM != 1)
GenoMat = GenoMat[pos,]
GenoMat = GenoMat[,pos]
dim(GenoMat)
MAF = apply(GenoMat, 2, mean)/2
stdGenoMat = (t(GenoMat) - 2*MAF) / sqrt(2*MAF*(1-MAF)) / sqrt(ncol(GenoMat))
KinMat = t(stdGenoMat) %*% stdGenoMat
KinbVec1 = KinMat %*% bVec
plot(KinbVec, KinbVec1)
head(cbind(KinbVec, KinbVec1))
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoFileIndex = NULL
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
genoList = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
memoryChunk = 2 # (GB)
minMafGRM = 0.01
maxMissingGRM = 0.1
print("test0")
Sys.sleep(1)
if(genoList$genoType != "PLINK")
stop("Only PLINK format is supported")
GRAB:::setDenseGRMInCPP(memoryChunk, minMafGRM, maxMissingGRM,
gsub("bed","bim", GenoFile), gsub("bed","fam", GenoFile), GenoFile,
genoList$SampleIDs,
genoList$AlleleOrder)
set.seed(1)
bVec = rnorm(1000)
excludeChr = "1"
grainSize = 1
KinbVec = GRAB:::getDenseGRMInCPP(bVec, excludeChr, grainSize)
# GMat = GRAB.ReadGeno(GenoFile, SampleIDs = subjData)
# GMat = GMat$GenoMat
# GMat = as.matrix(GMat[,7:10006])
PlinkFile = system.file("extdata", "example.bed", package = "GRAB")
IDsToIncludeFile = system.file("extdata", "example.IDsToIncludeFile.txt", package = "GRAB")
GenoList = GRAB.ReadGeno(PlinkFile,
control = list(IDsToExcludeFile = IDsToIncludeFile))
GenoMat = GenoList$GenoMat
dim(GenoMat)
markerInfo = GenoList$markerInfo
pos = which(markerInfo$CHROM != 1)
GenoMat = GenoMat[,pos]
# RawFile = system.file("extdata", "example.raw", package = "GRAB")
# GenoMat = data.table::fread(RawFile)
# GenoMat[1:10,1:10]
MAF = apply(GenoMat, 2, mean)/2
stdGenoMat = (t(GenoMat) - 2*MAF) / sqrt(2*MAF*(1-MAF)) / sqrt(ncol(GenoMat))
KinMat = t(stdGenoMat) %*% stdGenoMat
KinbVec1 = KinMat %*% bVec
plot(KinbVec, KinbVec1)
head(cbind(KinbVec, KinbVec1))
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoFileIndex = NULL
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
genoList = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
memoryChunk = 2 # (GB)
minMafGRM = 0.01
maxMissingGRM = 0.1
print("test0")
Sys.sleep(1)
if(genoList$genoType != "PLINK")
stop("Only PLINK format is supported")
GRAB:::setDenseGRMInCPP(memoryChunk, minMafGRM, maxMissingGRM)
set.seed(1)
bVec = rnorm(1000)
excludeChr = "1"
grainSize = 1
KinbVec = GRAB:::getDenseGRMInCPP(bVec, excludeChr, grainSize)
PlinkFile = system.file("extdata", "example.bed", package = "GRAB")
IDsToIncludeFile = system.file("extdata", "example.IDsToIncludeFile.txt", package = "GRAB")
GenoList = GRAB.ReadGeno(PlinkFile,
control = list(IDsToExcludeFile = IDsToIncludeFile))
GenoMat = GenoList$GenoMat
dim(GenoMat)
markerInfo = GenoList$markerInfo
pos = which(markerInfo$CHROM != 1)
GenoMat = GenoMat[,pos]
# RawFile = system.file("extdata", "example.raw", package = "GRAB")
# GenoMat = data.table::fread(RawFile)
# GenoMat[1:10,1:10]
MAF = apply(GenoMat, 2, mean)/2
stdGenoMat = (t(GenoMat) - 2*MAF) / sqrt(2*MAF*(1-MAF)) / sqrt(ncol(GenoMat))
KinMat = t(stdGenoMat) %*% stdGenoMat
KinbVec1 = KinMat %*% bVec
plot(KinbVec, KinbVec1)
head(cbind(KinbVec, KinbVec1))
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoFileIndex = NULL
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
genoList = GRAB:::setGenoInput(GenoFile, GenoFileIndex)
dim(genoList$markerInfo)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
?getDenseGRM
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
genoList = setDenseGRM(GenoFile, subjData = subjData)
set.seed(1)
bVec = rnorm(1000)
KinbVec = getDenseGRM(bVec)
head(KinbVec)
PlinkFile = system.file("extdata", "example.bed", package = "GRAB")
IDsToIncludeFile = system.file("extdata", "example.IDsToIncludeFile.txt", package = "GRAB")
GenoList = GRAB.ReadGeno(PlinkFile, control = list(IDsToExcludeFile = IDsToIncludeFile))
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
pos = which(markerInfo$CHROM != 1)
GenoMat = GenoMat[,pos]
MAF = apply(GenoMat, 2, mean)/2
stdGenoMat = (t(GenoMat) - 2*MAF) / sqrt(2*MAF*(1-MAF)) / sqrt(ncol(GenoMat))
KinMat = t(stdGenoMat) %*% stdGenoMat
KinbVec1 = KinMat %*% bVec
plot(KinbVec, KinbVec1)
head(cbind(KinbVec, KinbVec1))
library(POLMM)
?POLMM_Null_Model
library(GRAB)
?GRAB.NullModel
GRAB::check_input1
?GRAB::check_input1
library(GRAB)
Rcpp::sourceCpp('C:/Users/wenji/OneDrive/Desktop/test.cpp')
getMax(c(1,2,3.2))
Rcpp::sourceCpp('C:/Users/wenji/OneDrive/Desktop/test.cpp')
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
remove.packages("GRAB", lib="~/R/win-library/4.0")
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/UTIL.cpp')
Rcpp::sourceCpp('src/DenseGRM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('~/Github/POLMM/src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/DenseGRM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
library(GRAB)
remove.packages("GRAB", lib="~/R/win-library/4.0")
Rcpp::sourceCpp('src/Main.cpp')
library(GRAB)
class(factor(c(1,2,3)))
matrix(0,1,1)
rep(0,1)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
PhenoFile = system.file("extdata", "example.pheno", package = "GRAB")
head(PhenoFile)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"))
head(PhenoData)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
PhenoData
head(PhenoData)
?GRAB.NullModel
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cov1 + Cov2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile)
head(PhenoData)
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile)
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile)
matrix(0,1,1)
matrix(c(0,0),2,1)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
?GRAB.POLMM
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile)
obj.POLMM$sessionInfo
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('C:/Users/wenji/OneDrive/Desktop/test.cpp')
xMat = matrix(rnorm(4),2,2)
yMat = matrix(rbinom(4,2,0.2),2,2)
Main1(42)
Main1(xMat, yMat)
xMat
yMat
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/PLINK.cpp')
Rcpp::sourceCpp('src/PLINK.cpp')
Rcpp::sourceCpp('~/Github/POLMM/src/Plink.cpp')
Rcpp::sourceCpp('src/PLINK.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
Rcpp::sourceCpp('src/POLMM.cpp')
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile)
table(Phenodata$Ordinal)
table(PhenoData$Ordinal)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile)
names(obj.POLMM)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile)
names(obj.POLMM)
obj.POLMM$tau
obj.POLMM$bVec
obj.POLMM$beta
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile)
names(obj.POLMM)
load("Y:/OLR/Stacked/check/fam.kin.RData")
dim(fam.kin)
fam.kin
class(fam.kin)
fam.kin = as.matrix(fam.kin)
fam.kin
write.table(fam.kin, "C:/Users/wenji/OneDrive/Documents/Github/GRAB/inst/extdata/10members.kin.txt", row.names=F, col.names=F, quote=F)
fam.kin = read.table(system.file("extdata", "example_10members.kin.txt", package = "GRAB"))
system.file("extdata", "example_10members.kin.txt", package = "GRAB")
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
?GRAB.SimubVec
fam.kin = read.table(system.file("extdata", "example_10members.kin.txt", package = "GRAB"))
fam.kin = as.matrix(fam.kin)
n.fam = 100
tau = 2
bVec = GRAB.SimubVec(n.fam, fam.kin, tau)
library(GRAB)
fam.kin = read.table(system.file("extdata", "example_10members.kin.txt", package = "GRAB"))
fam.kin = as.matrix(fam.kin)
n.fam = 100
tau = 2
bVec = GRAB.SimubVec(n.fam, fam.kin, tau)
length(bVec)
head(bVec)
fam.kin = read.table(system.file("extdata", "example_10members.kin.txt", package = "GRAB"))
fam.kin = as.matrix(fam.kin)
n.fam = 100
tau = 2
bVec = GRAB.SimubVec(n.fam, fam.kin, tau)
setwd("C:/Users/wenji/OneDrive/Documents/Github/GRAB/inst/extdata")
PhenoData = read.table("example.pheno")
PhenoData = read.table("example.pheno", header = T)
dim(PhenoData)
head(PhenoData)
sample(1:5, 1000, replace = T)
bVec
eta = PhenoData$Cova1 * 0.5 + PhenoData$Cova2 * 0.5 + bVec
eta
summary(eta)
PhenoData$Ordinal = 1
PhenoData$Ordinal[eta > (-2)] = 2
PhenoData$Ordinal[eta > 0] = 3
PhenoData$Ordinal[eta > 2] = 4
PhenoData$Ordinal[eta > 4] = 5
table(PhenoData$Ordinal)
write.table(PhenoData, "example.pheno", col.names = T, row.names = F, quote = F)
library(GRAB)
library(GRAB)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile)
names(obj.POLMM)
obj.POLMM$tau
library(GRAB)
PhenoData = read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
GenoFile = system.file("extdata", "example.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(Ordinal) ~ Cova1 + Cova2,
data = PhenoData, subjData = PhenoData$IID, method = "POLMM", traitType = "ordinal",
GenoFile = GenoFile)
names(obj.POLMM)
obj.POLMM$tau
remove.packages("GRAB", lib="~/R/win-library/4.0")
