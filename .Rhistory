, AF_ref = ifelse(REF<ALT, AF_ref, 1-AF_ref)) %>%
merge(.,GenoInfo,by=c("CHROM", "POS", "RA"),all.y=T) %>%
rename(REF = REF.y, ALT= ALT.y, ID = ID.y)%>%
select(-REF.x,-ALT.x, ID.x, -RA)
head(mergeGenoInfo)
mergeGenoInfo = refGenoInfo %>% mutate(RA = ifelse(REF<ALT, paste0(REF, ALT), paste0(ALT,REF))
, AF_ref = ifelse(REF<ALT, AF_ref, 1-AF_ref)) %>%
merge(.,GenoInfo,by=c("CHROM", "POS", "RA"),all.y=T) %>%
rename(REF = REF.y, ALT= ALT.y, ID = ID.y)%>%
select(-REF.x,-ALT.x, -ID.x, -RA)
head(mergeGenoInfo)
test = function(n0,n1,n2,w0,w1, p1,p2){
p = sum(p1 *(n1* w1+n0* w0) + p2*n2)/sum(n1* w1+n0* w0+ n2)
v=((n1*w1^2+n0*w0^2)/(2*(n1*w1+n0*w0)^2) + 1/(2*n2))*p*(1-p)
z = (p1 - p2) / sqrt(v)
p= 2*pnorm(-abs(z), lower.tail=TRUE)
chisq = z^2
return(p)
}
n1=sum(PhenoData$Indicator)*(1-mergeGenoInfo$mr1)
n0=sum(1-PhenoData$Indicator)*(1-mergeGenoInfo$mr0)
w1=1; w0=(1-RefPrevalence)/RefPrevalence*n1/n0
pvalue_bat = lapply(1: nrow(mergeGenoInfo), function(ind){
w.maf = with(mergeGenoInfo, sum(mu0[ind]*w0[ind]*n0[ind] +mu1[ind]*w1*n1[ind] )/(n0[ind]*w0[ind]+n1[ind]*w1))
p.test = test(n0=n0[ind],n1=n1[ind],n2 =mergeGenoInfo$AN_ref[ind]/2, w0=w0[ind], w1=w1, p1= w.maf, p2=mergeGenoInfo$AF_ref[ind])
})%>%unlist()
mergeGenoInfo = mergeGenoInfo %>%mutate(pvalue_bat)
count = table(cut(na.omit(pvalue_bat), breaks = seq(0,1,0.01)))%>%
as.data.frame() %>% setNames(c("interval", "Freq")) %>%
mutate(breaks =  head(seq(0,1,0.01), -1))
getCutoff = function(count){
right_mean= lapply(2:nrow(count)-1,function(i){
m = count[(i+1):nrow(count), "Freq"]%>%mean()
return(m)
}) %>% unlist()
for(i in 2:nrow(count)-1){
diff = (count$Freq[i]-right_mean[i])/right_mean[i]
cat("The diff between ",i,"th interval with the rest intervals:"
, diff,"\n")
if(abs(diff)<0.1){
cutoff = count$breaks[i]
cat("cutoff=", cutoff,"\n")
break
}
}
return(cutoff)
}
if(nrow(mergeGenoInfo)<SNPnum){
warning(paste0("Please input at least ", SNPnum, " SNPs"))
cutoff = NA
}else{
cutoff = getCutoff(count)
}
library(GRAB)
setwd(system.file("wSPAg", package = "GRAB"))
load("Example.RData")
qcResult1 = QCforBatchEffect(GenoFile = c("simuBGEN1.bgen")
,GenoFileIndex = c("simuBGEN1.bgen.bgi",
"simuBGEN1.sample")
,control=list(AlleleOrder = "ref-first", AllMarkers=T)
,PhenoData=PhenoData
,RefAfFile = "RefMAFs.txt"
,RefPrevalence = RefPrevalence
,SNPnum=1e4
)
qcResult2 = QCforBatchEffect(GenoFile = c("simuBGEN2.bgen")
,GenoFileIndex = c("simuBGEN2.bgen.bgi",
"simuBGEN2.sample")
,control=list(AlleleOrder = "ref-first", AllMarkers=T)
,PhenoData=PhenoData
,RefAfFile = "RefMAFs.txt"
,RefPrevalence = RefPrevalence
,SNPnum=1e4
)
qcResult1 = QCforBatchEffect(GenoFile = c("GenoMat1.bed")
,control=list(AlleleOrder = "ref-first", AllMarkers=T)
,PhenoData=PhenoData
,RefAfFile = "RefMAFs.txt"
,RefPrevalence = RefPrevalence
,SNPnum=1e4
)
GRAB.Marker()
GRAB.Marker
?GRAB.Marker
checkObjNull
checkControl.ReadGeno
setwd(system.file("wSPAg", package = "GRAB"))
ref = fread("RefMAFs.txt")
library(data.table);ref = fread("RefMAFs.txt")
head(ref)
ref$AF_ref[1:10]=ref$AN_ref[1:10]=NA
head(ref)
fwrite(ref, "RefMAFs.txt")
library(data.table);ref = fread("RefMAFs.txt")
head(ref)
fwrite(ref, "C:/Users/dell/Dropbox/Liying/Github/GRAB/inst/wSPAg/RefMAFs.txt")
load("Example.RData")
load("Example.RData")
setwd(system.file("wSPAg", package = "GRAB"))
qcResult1 = QCforBatchEffect(GenoFile = c("simuBGEN1.bgen")
,GenoFileIndex = c("simuBGEN1.bgen.bgi",
"simuBGEN1.sample")
,control=list(AlleleOrder = "ref-first", AllMarkers=T)
,PhenoData=PhenoData
,RefAfFile = "RefMAFs.txt"
,RefPrevalence = RefPrevalence
,SNPnum=1e4
)
library(GRAB)
qcResult1 = QCforBatchEffect(GenoFile = c("simuBGEN1.bgen")
,GenoFileIndex = c("simuBGEN1.bgen.bgi",
"simuBGEN1.sample")
,control=list(AlleleOrder = "ref-first", AllMarkers=T)
,PhenoData=PhenoData
,RefAfFile = "RefMAFs.txt"
,RefPrevalence = RefPrevalence
,SNPnum=1e4)
head(qcResult1$mergeGenoInfo)
data.frame(a =1:5,b=1:5)
c = data.frame(a =1:5,b=1:5)
c$a[1] = 1:2
c$a[1] = list(1:2)
c
interset(c$a[1],1)
intersect(c$a[1],1)
intersect(c$a[[1]],1)
intersect(1:2,2:1)
setdiff(1:2,2:1)
!setdiff(1:2,2:1)
GenoFile = c("GenoMat1.bed")
control=list(AlleleOrder = "ref-first", AllMarkers=T)
PhenoData=PhenoData
RefAfFile = "RefMAFs.txt"
RefPrevalence = RefPrevalence
SNPnum=1e4
refGenoInfo = fread(RefAfFile)%>%as_tibble()
GenoInfo.ctrl = GRAB.getGenoInfo(GenoFile = GenoFile
,GenoFileIndex = GenoFileIndex
,SampleIDs = with(PhenoData,SampleID[Indicator==0])
,control = control)%>%
rename(mu0 = altFreq, mr0 = missingRate ) %>% select(mu0, mr0)
GenoInfo = GRAB.getGenoInfo(GenoFile = GenoFile
,GenoFileIndex = GenoFileIndex
,SampleIDs = with(PhenoData,SampleID[Indicator==1])
,control = control) %>%
rename(mu1 = altFreq , mr1 = missingRate) %>%
cbind(., GenoInfo.ctrl)%>%as_tibble()%>%
mutate(RA = ifelse(REF<ALT, paste0(REF, ALT), paste0(ALT,REF)))
GenoFileIndex=NULL
GenoInfo = GRAB.getGenoInfo(GenoFile = GenoFile
,GenoFileIndex = GenoFileIndex
,SampleIDs = with(PhenoData,SampleID[Indicator==1])
,control = control) %>%
rename(mu1 = altFreq , mr1 = missingRate) %>%
cbind(., GenoInfo.ctrl)%>%as_tibble()%>%
mutate(RA = ifelse(REF<ALT, paste0(REF, ALT), paste0(ALT,REF)))
control=list(AlleleOrder = "ref-first", AllMarkers=T)
GenoInfo.ctrl = GRAB.getGenoInfo(GenoFile = GenoFile
,GenoFileIndex = GenoFileIndex
,SampleIDs = with(PhenoData,SampleID[Indicator==0])
,control = control)%>%
rename(mu0 = altFreq, mr0 = missingRate ) %>% select(mu0, mr0)
GenoInfo = GRAB.getGenoInfo(GenoFile = GenoFile
,GenoFileIndex = GenoFileIndex
,SampleIDs = with(PhenoData,SampleID[Indicator==1])
,control = control) %>%
rename(mu1 = altFreq , mr1 = missingRate) %>%
cbind(., GenoInfo.ctrl)%>%as_tibble()%>%
mutate(RA = ifelse(REF<ALT, paste0(REF, ALT), paste0(ALT,REF)))
head(GenoInfo)
mergeGenoInfo = refGenoInfo %>% mutate(RA = ifelse(REF<ALT, paste0(REF, ALT), paste0(ALT,REF))) %>%
merge(.,GenoInfo,by=c("CHROM", "POS", "RA"),all.y=T) %>%
rename(REF = REF.y, ALT= ALT.y, ID = ID.y)
head(mergeGenoInfo)
mergeGenoInfo = refGenoInfo %>% mutate(RA = ifelse(REF<ALT, paste0(REF, ALT), paste0(ALT,REF))) %>%
merge(.,GenoInfo,by=c("CHROM", "POS", "RA"),all.y=T) %>%
rename(REF = REF.y, ALT= ALT.y, ID = ID.y)%>%
mutate(AF_ref = ifelse(REF == REF.x, AF_ref , 1-AF_ref  ))
head(mergeGenoInfo)
mergeGenoInfo = refGenoInfo %>% mutate(RA = ifelse(REF<ALT, paste0(REF, ALT), paste0(ALT,REF))) %>%
merge(.,GenoInfo,by=c("CHROM", "POS", "RA"),all.y=T) %>%
rename(REF = REF.y, ALT= ALT.y, ID = ID.y)%>%
mutate(AF_ref = ifelse(REF == REF.x, AF_ref , 1-AF_ref  ))%>%
select(-REF.x,-ALT.x, -ID.x, -RA)
head(mergeGenoInfo)
library(GRAB)
setwd(system.file("wSPAg", package = "GRAB"))
load("Example.RData")
qcResult1 = QCforBatchEffect(GenoFile = c("simuBGEN1.bgen")
,GenoFileIndex = c("simuBGEN1.bgen.bgi",
"simuBGEN1.sample")
,control=list(AlleleOrder = "ref-first", AllMarkers=T)
,PhenoData=PhenoData
,RefAfFile = "RefMAFs.txt"
,RefPrevalence = RefPrevalence
,SNPnum=1e4)
setseed(1e10)
set.seed(1e10)
set.seed(100000000)
setwd(system.file("wSPAg", package = "GRAB"))
REF = fread("RefMAFs.txt")
dim(REF)
ID = sample(1:100000, 1e4, rep=F)
length(ID)
REF$AF_ref[ID]=REF$AN_ref[ID]=NA
head(REF)
tail(REF)
sum(is.na(REF$AF_ref))
GenoFile = c("simuBGEN1.bgen")
GenoFileIndex = c("simuBGEN1.bgen.bgi",
"simuBGEN1.sample")
control=list(AlleleOrder = "ref-first", AllMarkers=T)
PhenoData=PhenoData
RefAfFile = "RefMAFs.txt"
RefPrevalence = RefPrevalence
refGenoInfo =REF
GenoInfo.ctrl = GRAB.getGenoInfo(GenoFile = GenoFile
,GenoFileIndex = GenoFileIndex
,SampleIDs = with(PhenoData,SampleID[Indicator==0])
,control = control)%>%
rename(mu0 = altFreq, mr0 = missingRate ) %>% select(mu0, mr0)
GenoInfo = GRAB.getGenoInfo(GenoFile = GenoFile
,GenoFileIndex = GenoFileIndex
,SampleIDs = with(PhenoData,SampleID[Indicator==1])
,control = control) %>%
rename(mu1 = altFreq , mr1 = missingRate) %>%
cbind(., GenoInfo.ctrl)%>%as_tibble()%>%
mutate(RA = ifelse(REF<ALT, paste0(REF, ALT), paste0(ALT,REF)))
mergeGenoInfo = refGenoInfo %>%
mutate(RA = ifelse(REF<ALT, paste0(REF, ALT), paste0(ALT,REF))) %>%
merge(.,GenoInfo,by=c("CHROM", "POS", "RA"),all.y=T) %>%
rename(REF = REF.y, ALT= ALT.y, ID = ID.y)%>%
mutate(AF_ref = ifelse(REF == REF.x, AF_ref , 1-AF_ref  ))%>%
select(-REF.x,-ALT.x, -ID.x, -RA)
mergeGenoInfo = refGenoInfo %>%
mutate(RA = ifelse(REF<ALT, paste0(REF, ALT), paste0(ALT,REF))) %>%
merge(.,GenoInfo,by=c("CHROM", "POS", "RA"),all.y=T) %>%
rename(REF = REF.y, ALT= ALT.y, ID = ID.y)%>%
mutate(AF_ref = ifelse(REF == REF.x, AF_ref , 1-AF_ref  ))%>%
select(-REF.x,-ALT.x, -ID.x, -RA)
head(refGenoInfo)
head(GenoInfo)
mergeGenoInfo = refGenoInfo %>%
mutate(RA = ifelse(REF<ALT, paste0(REF, ALT), paste0(ALT,REF)))
head(mergeGenoInfo )
mergeGenoInfo = refGenoInfo %>%
mutate(RA = ifelse(REF<ALT, paste0(REF, ALT), paste0(ALT,REF))) %>%
merge(.,GenoInfo,by=c("CHROM", "POS", "RA"),all.y=T)
fwrite(REF, RefMAFs)
fwrite(REF, "RefMAFs.txt")
fwrite(REF, "C:/Users/dell/Dropbox/Liying/Github/GRAB/inst/wSPAg/RefMAFs.txt")
qcResult1 = QCforBatchEffect(GenoFile = c("GenoMat1.bed")
,control=list(AlleleOrder = "ref-first", AllMarkers=T)
,PhenoData=PhenoData
,RefAfFile = "RefMAFs.txt"
,RefPrevalence = RefPrevalence
,SNPnum=1e4
)
library(GRAB)
setwd(system.file("wSPAg", package = "GRAB"))
load("Example.RData")
qcResult1 = QCforBatchEffect(GenoFile = c("simuBGEN1.bgen")
,GenoFileIndex = c("simuBGEN1.bgen.bgi",
"simuBGEN1.sample")
,control=list(AlleleOrder = "ref-first", AllMarkers=T)
,PhenoData=PhenoData
,RefAfFile = "RefMAFs.txt"
,RefPrevalence = RefPrevalence
,SNPnum=1e4
)
head(qcResult1$mergeGenoInfo)
which(qcResult1$mergeGenoInfo$POS==2)
which(qcResult1$mergeGenoInfo$POS==3)
Rcpp::sourceCpp("src/WtSPAG.cpp")
Rcpp::sourceCpp("C:/Users/dell/Desktop/test/MG0.cpp")
Rcpp::sourceCpp("C:/Users/dell/Desktop/test/MG0.cpp")
Rcpp::sourceCpp("C:/Users/dell/Desktop/test/MG0.cpp")
Rcpp::sourceCpp("C:/Users/dell/Desktop/test/MG0.cpp")
Rcpp::sourceCpp("C:/Users/dell/Desktop/test/MG0.cpp")
Rcpp::sourceCpp("~/WeChat Files/wxid_cxd4kzbhxn3u22/FileStorage/File/2023-08/logistic_regression_parameter_estimation_2022-02-14.cpp")
Rcpp::sourceCpp("~/WeChat Files/wxid_cxd4kzbhxn3u22/FileStorage/File/2023-08/logistic_regression_parameter_estimation_2022-02-14.cpp")
library(GRAB)
library(GRAB)
?GRAB.WtSPAG
setwd(system.file("WtSPAG", package = "GRAB"))
PhenoData = read.table(system.file("WtSPAG", "simuPHENO_WtSPAG.txt", package = "GRAB"), header = T)
RefPrevalence = 0.1
qcResult1 = QCforBatchEffect(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi",
"simuBGEN1.sample"),
OutputFile = "qcBGEN1.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID"),
PhenoData=PhenoData,
RefAfFile = "RefMAFs.txt",
RefPrevalence = RefPrevalence,
SNPnum=1e4)
qcResult2 = QCforBatchEffect(GenoFile = "simuBGEN2.bgen",
GenoFileIndex = c("simuBGEN2.bgen.bgi",
"simuBGEN2.sample"),
OutputFile = "qcBGEN2.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID"),
PhenoData=PhenoData,
RefAfFile = "RefMAFs.txt",
RefPrevalence = RefPrevalence,
SNPnum=1e4)
?GRAB.WtSPAG
?GRAB.WtSPAG
29199.6/2
29199.6/2
1/0.13
1/0.137297
library(GRAB)
?GRAB.WtSPAG
setwd(system.file("WtSPAG", package = "GRAB"))
PhenoData = read.table(system.file("WtSPAG", "simuPHENO_WtSPAG.txt", package = "GRAB"), header = T)
RefPrevalence = 0.1
qcResult1 = QCforBatchEffect(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi",
"simuBGEN1.sample"),
OutputFile = "qcBGEN1.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID"),
PhenoData=PhenoData,
RefAfFile = "RefMAFs.txt",
RefPrevalence = RefPrevalence,
SNPnum=1e4)
qcResult2 = QCforBatchEffect(GenoFile = "GenoMat2.bed",
OutputFile = "qcBGEN2.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID"),
PhenoData=PhenoData,
RefAfFile = "RefMAFs.txt",
RefPrevalence = RefPrevalence,
SNPnum=1e4)
allQC = mergeQCresults(qcResult1, qcResult2)
obj.WtSPAG = GRAB.NullModel(Surv(SurvTime, SurvEvent) ~ Cov1 + Cov2,
data = PhenoData,
subjData = IID,
method = "WtSPAG",
traitType = "time-to-event",
control = list(RefPrevalence = RefPrevalence))
names(obj.WtSPAG)
GRAB.Marker(obj.WtSPAG,
GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi", "simuBGEN1.sample"),
OutputFile = "simuBGEN1.txt",
OutputFileIndex = NULL,
control = list(QCFile = "qcBGEN1.txt",
QCCutoff = qcResult1$cutoff,
AlleleOrder = "ref-first",
AllMarkers = T))
data.table::fread("simuBGEN1.txt")
library(GRAB)
?GRAB.WtSPAG
setwd(system.file("WtSPAG", package = "GRAB"))
PhenoData = read.table(system.file("WtSPAG", "simuPHENO_WtSPAG.txt", package = "GRAB"), header = T)
RefPrevalence = 0.1
qcResult1 = QCforBatchEffect(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi",
"simuBGEN1.sample"),
OutputFile = "qcBGEN1.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID"),
PhenoData=PhenoData,
RefAfFile = "RefMAFs.txt",
RefPrevalence = RefPrevalence,
SNPnum=1e4)
qcResult2 = QCforBatchEffect(GenoFile = "GenoMat2.bed",
OutputFile = "qcBGEN2.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID"),
PhenoData=PhenoData,
RefAfFile = "RefMAFs.txt",
RefPrevalence = RefPrevalence,
SNPnum=1e4)
allQC = mergeQCresults(qcResult1, qcResult2)
obj.WtSPAG = GRAB.NullModel(Surv(SurvTime, SurvEvent) ~ Cov1 + Cov2,
data = PhenoData,
subjData = IID,
method = "WtSPAG",
traitType = "time-to-event",
control = list(RefPrevalence = RefPrevalence))
names(obj.WtSPAG)
GRAB.Marker(obj.WtSPAG,
GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi", "simuBGEN1.sample"),
OutputFile = "simuBGEN1.txt",
OutputFileIndex = NULL,
control = list(QCFile = "qcBGEN1.txt",
QCCutoff = qcResult1$cutoff,
AlleleOrder = "ref-first",
AllMarkers = T))
library(GRAB)
?GRAB.WtSPAG
setwd(system.file("WtSPAG", package = "GRAB"))
PhenoData = read.table(system.file("WtSPAG", "simuPHENO_WtSPAG.txt", package = "GRAB"), header = T)
RefPrevalence = 0.1
qcResult1 = QCforBatchEffect(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi",
"simuBGEN1.sample"),
OutputFile = "qcBGEN1.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID"),
PhenoData=PhenoData,
RefAfFile = "RefMAFs.txt",
RefPrevalence = RefPrevalence,
SNPnum=1e4)
qcResult2 = QCforBatchEffect(GenoFile = "GenoMat2.bed",
OutputFile = "qcBGEN2.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID"),
PhenoData=PhenoData,
RefAfFile = "RefMAFs.txt",
RefPrevalence = RefPrevalence,
SNPnum=1e4)
allQC = mergeQCresults(qcResult1, qcResult2)
obj.WtSPAG = GRAB.NullModel(Surv(SurvTime, SurvEvent) ~ Cov1 + Cov2,
data = PhenoData,
subjData = IID,
method = "WtSPAG",
traitType = "time-to-event",
control = list(RefPrevalence = RefPrevalence))
names(obj.WtSPAG)
GRAB.Marker(obj.WtSPAG,
GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi", "simuBGEN1.sample"),
OutputFile = "simuBGEN1.txt",
OutputFileIndex = NULL,
control = list(QCFile = "qcBGEN1.txt",
QCCutoff = qcResult1$cutoff,
AlleleOrder = "ref-first",
AllMarkers = T))
data.table::fread("simuBGEN1.txt")
library(GRAB)
setwd(system.file("WtSPAG", package = "GRAB"))
PhenoData = read.table(system.file("WtSPAG", "simuPHENO_WtSPAG.txt", package = "GRAB"), header = T)
RefPrevalence = 0.1
qcResult1 = QCforBatchEffect(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi",
"simuBGEN1.sample"),
OutputFile = "qcBGEN1.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID"),
PhenoData=PhenoData,
RefAfFile = "RefMAFs.txt",
RefPrevalence = RefPrevalence,
SNPnum=1e4)
qcResult2 = QCforBatchEffect(GenoFile = "GenoMat2.bed",
OutputFile = "qcBGEN2.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID"),
PhenoData=PhenoData,
RefAfFile = "RefMAFs.txt",
RefPrevalence = RefPrevalence,
SNPnum=1e4)
allQC = mergeQCresults(qcResult1, qcResult2)
obj.WtSPAG = GRAB.NullModel(Surv(SurvTime, SurvEvent) ~ Cov1 + Cov2,
data = PhenoData,
subjData = IID,
method = "WtSPAG",
traitType = "time-to-event",
control = list(RefPrevalence = RefPrevalence))
names(obj.WtSPAG)
GRAB.Marker(obj.WtSPAG,
GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi", "simuBGEN1.sample"),
OutputFile = "simuBGEN1.txt",
OutputFileIndex = NULL,
control = list(QCFile = "qcBGEN1.txt",
QCCutoff = qcResult1$cutoff,
AlleleOrder = "ref-first",
AllMarkers = T))
64*64*64
64*64*64*8
64*64*64*8/1024/1024
90/400
90/400*1024
300e3 * 22
27/113
86/264
library(GRAB)
PlinkFile = "C:/Users/XH/Desktop/test/nSub_25000_nFam_2500"
PairwiseIBDFile = "C:/Users/XH/Desktop/test/PairwiseIBD.txt"
SparseGRMFile = "C:/Users/XH/Desktop/test/SparseGRM_0.05.txt"
ResidMatFile = "C:/Users/XH/Desktop/test/ResidMat.txt"
GenoFile = "C:/Users/XH/Desktop/test/nSub_25000_nFam_2500.bed"
OutputFile = "C:/Users/XH/Desktop/test/Output.txt"
getPairwiseIBD(PlinkFile,SparseGRMFile,PairwiseIBDFile,rm.tempFile = T)
SPAGRM = SPAGRM.NullModel(ResidMatFile,SparseGRMFile,PairwiseIBDFile)
PlinkFile = "C:/Users/XH/Desktop/test"
PairwiseIBDFile = "C:/Users/XH/Desktop/Pair.txt"
SparseGRMFile = "C:/Users/XH/Desktop/GRM.txt"
ResidMatFile = "C:/Users/XH/Desktop/Resid.txt"
GenoFile = "C:/Users/XH/Desktop/test.bed"
OutputFile = "C:/Users/XH/Desktop/Output.txt"
getPairwiseIBD(PlinkFile,SparseGRMFile,PairwiseIBDFile,rm.tempFile = T)
SPAGRM = SPAGRM.NullModel(ResidMatFile,SparseGRMFile,PairwiseIBDFile)
GRAB.Marker(objNull = SPAGRM,GenoFile = GenoFile, OutputFile = OutputFile)
GRAB.Marker(objNull = SPAGRM,GenoFile = GenoFile, OutputFile = OutputFile)
data.table::fread(OutputFile)
