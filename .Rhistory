pAll, width = 11, height = 23)
library(tidyr)
library(dplyr)
library(ggplot2)
library(patchwork)
setwd("Y:/gdata01/user/wenjianb/POLMM-GENE/AJHG-R1/Simulation-Power/SAIGE-2022-12-18")
pvaluesCCT.all = data.table::fread("Y:/gdata01/user/wenjianb/POLMM-GENE/Simulation-Power/results_2022-07-08/pvaluesCCT.txt")
pvaluesCCT.SAIGE = data.table::fread("SAIGE.pvaluesCCT-MAC5-noFastTest.txt")
## check if "times two" is the matter
pvaluesCCT.SAIGE$Pvalue = pvaluesCCT.SAIGE$Pvalue * 2
pvaluesCCT.SAIGE$Pvalue_Burden = pvaluesCCT.SAIGE$Pvalue_Burden * 2
pvaluesCCT.SAIGE$Pvalue_SKAT = pvaluesCCT.SAIGE$Pvalue_SKAT * 2
head(pvaluesCCT.SAIGE)
method1 = "SAIGE-GENE+ (INT)"
pvaluesCCT.SAIGE1 = pvaluesCCT.SAIGE %>% filter(method == method1) %>% rename(Method = method) %>%
rename(pval.Burden = Pvalue_Burden, pval.SKAT = Pvalue_SKAT, pval.SKATO = Pvalue) %>%
select(pval.SKATO:pDirection, Method)
pvaluesCCT_1 = pvaluesCCT.all %>% pivot_longer(pval.Burden:pval.SKATO, names_to = "method", values_to = "pvalues")
pvaluesCCT_1 = pvaluesCCT_1 %>% mutate(chisq = qchisq(pvalues, 1, lower.tail = F))
pvaluesCCT_2 = pvaluesCCT_1 %>% mutate(Method = "POLMM-GENE")
pvaluesCCT.SAIGE1 = pvaluesCCT.SAIGE1 %>% pivot_longer(pval.SKATO:pval.SKAT, names_to = "method", values_to = "pvalues")
pvaluesCCT.SAIGE1 = pvaluesCCT.SAIGE1 %>% mutate(chisq = qchisq(pvalues, 1, lower.tail = F))
# pvaluesCCT.SAIGE1 = pvaluesCCT.SAIGE1 %>% mutate(Method = "SAIGE-GENE+")
pvaluesCCT_2 = rbind(pvaluesCCT_2, pvaluesCCT.SAIGE1)
pvaluesCCT_2 = pvaluesCCT_2 %>% mutate(chisq = ifelse(chisq >= 20, 20, chisq))
pvaluesCCT_2 = pvaluesCCT_2 %>% mutate(pDirection = ifelse(pDirection == "0.5", "50% positive, 50% negative",
ifelse(pDirection == "0.8", "80% positive, 20% negative", "100% positive")),
pCausal = ifelse(pCausal == "0.2,0.1", "Low Prop. of Causal Variants",
ifelse(pCausal == "0.5,0.2", "Moderate Prop. of Causal Variants", "High Prop. of Causal Variants")))
pvaluesCCT_2$pDirection = factor(pvaluesCCT_2$pDirection, levels = c("100% positive", "80% positive, 20% negative", "50% positive, 50% negative"))
pvaluesCCT_2$pCausal = factor(pvaluesCCT_2$pCausal, levels = c("High Prop. of Causal Variants", "Moderate Prop. of Causal Variants", "Low Prop. of Causal Variants"))
pvaluesCCT_2 = pvaluesCCT_2 %>% mutate(method = gsub("pval.", "", method),
method = gsub("SKATO", "SKAT-O", method))
pvaluesCCT_2
pvaluesCCT_2 %>% filter(is.na(chisq))
?pmin
library(tidyr)
library(dplyr)
library(ggplot2)
library(patchwork)
setwd("Y:/gdata01/user/wenjianb/POLMM-GENE/AJHG-R1/Simulation-Power/SAIGE-2022-12-18")
pvaluesCCT.all = data.table::fread("Y:/gdata01/user/wenjianb/POLMM-GENE/Simulation-Power/results_2022-07-08/pvaluesCCT.txt")
pvaluesCCT.SAIGE = data.table::fread("SAIGE.pvaluesCCT-MAC5-noFastTest.txt")
## check if "times two" is the matter
pvaluesCCT.SAIGE$Pvalue = pmin(pvaluesCCT.SAIGE$Pvalue * 2, 1)
pvaluesCCT.SAIGE$Pvalue_Burden = pmin(pvaluesCCT.SAIGE$Pvalue_Burden * 2, 1)
pvaluesCCT.SAIGE$Pvalue_SKAT = pmin(pvaluesCCT.SAIGE$Pvalue_SKAT * 2, 1)
##
method1 = "SAIGE-GENE+ (INT)"
pvaluesCCT.SAIGE1 = pvaluesCCT.SAIGE %>% filter(method == method1) %>% rename(Method = method) %>%
rename(pval.Burden = Pvalue_Burden, pval.SKAT = Pvalue_SKAT, pval.SKATO = Pvalue) %>%
select(pval.SKATO:pDirection, Method)
pvaluesCCT_1 = pvaluesCCT.all %>% pivot_longer(pval.Burden:pval.SKATO, names_to = "method", values_to = "pvalues")
pvaluesCCT_1 = pvaluesCCT_1 %>% mutate(chisq = qchisq(pvalues, 1, lower.tail = F))
pvaluesCCT_2 = pvaluesCCT_1 %>% mutate(Method = "POLMM-GENE")
pvaluesCCT.SAIGE1 = pvaluesCCT.SAIGE1 %>% pivot_longer(pval.SKATO:pval.SKAT, names_to = "method", values_to = "pvalues")
pvaluesCCT.SAIGE1 = pvaluesCCT.SAIGE1 %>% mutate(chisq = qchisq(pvalues, 1, lower.tail = F))
# pvaluesCCT.SAIGE1 = pvaluesCCT.SAIGE1 %>% mutate(Method = "SAIGE-GENE+")
pvaluesCCT_2 = rbind(pvaluesCCT_2, pvaluesCCT.SAIGE1)
pvaluesCCT_2 = pvaluesCCT_2 %>% mutate(chisq = ifelse(chisq >= 20, 20, chisq))
pvaluesCCT_2 = pvaluesCCT_2 %>% mutate(pDirection = ifelse(pDirection == "0.5", "50% positive, 50% negative",
ifelse(pDirection == "0.8", "80% positive, 20% negative", "100% positive")),
pCausal = ifelse(pCausal == "0.2,0.1", "Low Prop. of Causal Variants",
ifelse(pCausal == "0.5,0.2", "Moderate Prop. of Causal Variants", "High Prop. of Causal Variants")))
pvaluesCCT_2$pDirection = factor(pvaluesCCT_2$pDirection, levels = c("100% positive", "80% positive, 20% negative", "50% positive, 50% negative"))
pvaluesCCT_2$pCausal = factor(pvaluesCCT_2$pCausal, levels = c("High Prop. of Causal Variants", "Moderate Prop. of Causal Variants", "Low Prop. of Causal Variants"))
pvaluesCCT_2 = pvaluesCCT_2 %>% mutate(method = gsub("pval.", "", method),
method = gsub("SKATO", "SKAT-O", method))
# MedianChiSq = pvaluesCCT_2 %>% group_by(pEachGroup, pCausal, pDirection, method, Method) %>% summarise(MedianChiSq = median(chisq))
#
# MedianChiSq1 = MedianChiSq %>% pivot_wider(names_from = Method, values_from = MedianChiSq)
# MedianChiSq1 = MedianChiSq1 %>% mutate(ratio = `POLMM-GENE`/`SAIGE-GENE+`)
# MedianChiSq2 = MedianChiSq1 %>% filter(pEachGroup == "1,1,1")
# range(MedianChiSq2$ratio)
# MedianChiSq2 = MedianChiSq1 %>% filter(pEachGroup == "10,1,1")
# range(MedianChiSq2$ratio)
# MedianChiSq2 = MedianChiSq1 %>% filter(pEachGroup == "30,1,1")
# range(MedianChiSq2$ratio)
pList = list()
pos = 1
for(pEachGroup1 in c("1,1,1", "10,1,1", "30,1,1"))
{
label = paste0("n1:n2:n3=",gsub(",",":",pEachGroup1))
p = ggplot(pvaluesCCT_2 %>% filter(pEachGroup == pEachGroup1),
aes(x = method, y = chisq, color = Method)) +
introdataviz::geom_split_violin(alpha = .4, trim = FALSE) +
geom_boxplot(width = .2, alpha = .6, fatten = NULL, show.legend = FALSE, outlier.shape = NA) +
stat_summary(fun.data = "mean_se", geom = "pointrange", show.legend = F,
position = position_dodge(.175)) +
facet_grid(pCausal ~ pDirection) +
scale_y_sqrt(breaks = c(0.1, 1, 5, 10, 20), labels=c(0.1, 1, 5, 10, ">20")) +
theme_bw() + theme(legend.position = "bottom") + ggtitle(label) + xlab("")
pList[[pos]] = p
pos = pos + 1
}
pAll = pList[[1]] / pList[[2]] / pList[[3]]
ggsave(paste0("pvaluesCCT-",method1,"-MAC5-noFastTest-test-times-two.jpeg"),
pAll, width = 11, height = 23)
warnings
warnings()
pvaluesCCT.all
library(tidyr)
library(dplyr)
library(ggplot2)
library(patchwork)
setwd("Y:/gdata01/user/wenjianb/POLMM-GENE/AJHG-R1/Simulation-Power/SAIGE-2022-12-18")
pvaluesCCT.all = data.table::fread("Y:/gdata01/user/wenjianb/POLMM-GENE/Simulation-Power/results_2022-07-08/pvaluesCCT.txt")
pvaluesCCT.SAIGE = data.table::fread("SAIGE.pvaluesCCT-MAC5-noFastTest.txt")
## check if "times two" is the matter
pvaluesCCT.all$pval.Burden = pvaluesCCT.all$pval.Burden / 2
pvaluesCCT.all$pval.SKAT = pvaluesCCT.all$pval.SKAT / 2
pvaluesCCT.all$pval.SKATO = pvaluesCCT.all$pval.SKATO / 2
##
method1 = "SAIGE-GENE+ (INT)"
pvaluesCCT.SAIGE1 = pvaluesCCT.SAIGE %>% filter(method == method1) %>% rename(Method = method) %>%
rename(pval.Burden = Pvalue_Burden, pval.SKAT = Pvalue_SKAT, pval.SKATO = Pvalue) %>%
select(pval.SKATO:pDirection, Method)
pvaluesCCT_1 = pvaluesCCT.all %>% pivot_longer(pval.Burden:pval.SKATO, names_to = "method", values_to = "pvalues")
pvaluesCCT_1 = pvaluesCCT_1 %>% mutate(chisq = qchisq(pvalues, 1, lower.tail = F))
pvaluesCCT_2 = pvaluesCCT_1 %>% mutate(Method = "POLMM-GENE")
pvaluesCCT.SAIGE1 = pvaluesCCT.SAIGE1 %>% pivot_longer(pval.SKATO:pval.SKAT, names_to = "method", values_to = "pvalues")
pvaluesCCT.SAIGE1 = pvaluesCCT.SAIGE1 %>% mutate(chisq = qchisq(pvalues, 1, lower.tail = F))
# pvaluesCCT.SAIGE1 = pvaluesCCT.SAIGE1 %>% mutate(Method = "SAIGE-GENE+")
pvaluesCCT_2 = rbind(pvaluesCCT_2, pvaluesCCT.SAIGE1)
pvaluesCCT_2 = pvaluesCCT_2 %>% mutate(chisq = ifelse(chisq >= 20, 20, chisq))
pvaluesCCT_2 = pvaluesCCT_2 %>% mutate(pDirection = ifelse(pDirection == "0.5", "50% positive, 50% negative",
ifelse(pDirection == "0.8", "80% positive, 20% negative", "100% positive")),
pCausal = ifelse(pCausal == "0.2,0.1", "Low Prop. of Causal Variants",
ifelse(pCausal == "0.5,0.2", "Moderate Prop. of Causal Variants", "High Prop. of Causal Variants")))
pvaluesCCT_2$pDirection = factor(pvaluesCCT_2$pDirection, levels = c("100% positive", "80% positive, 20% negative", "50% positive, 50% negative"))
pvaluesCCT_2$pCausal = factor(pvaluesCCT_2$pCausal, levels = c("High Prop. of Causal Variants", "Moderate Prop. of Causal Variants", "Low Prop. of Causal Variants"))
pvaluesCCT_2 = pvaluesCCT_2 %>% mutate(method = gsub("pval.", "", method),
method = gsub("SKATO", "SKAT-O", method))
# MedianChiSq = pvaluesCCT_2 %>% group_by(pEachGroup, pCausal, pDirection, method, Method) %>% summarise(MedianChiSq = median(chisq))
#
# MedianChiSq1 = MedianChiSq %>% pivot_wider(names_from = Method, values_from = MedianChiSq)
# MedianChiSq1 = MedianChiSq1 %>% mutate(ratio = `POLMM-GENE`/`SAIGE-GENE+`)
# MedianChiSq2 = MedianChiSq1 %>% filter(pEachGroup == "1,1,1")
# range(MedianChiSq2$ratio)
# MedianChiSq2 = MedianChiSq1 %>% filter(pEachGroup == "10,1,1")
# range(MedianChiSq2$ratio)
# MedianChiSq2 = MedianChiSq1 %>% filter(pEachGroup == "30,1,1")
# range(MedianChiSq2$ratio)
pList = list()
pos = 1
for(pEachGroup1 in c("1,1,1", "10,1,1", "30,1,1"))
{
label = paste0("n1:n2:n3=",gsub(",",":",pEachGroup1))
p = ggplot(pvaluesCCT_2 %>% filter(pEachGroup == pEachGroup1),
aes(x = method, y = chisq, color = Method)) +
introdataviz::geom_split_violin(alpha = .4, trim = FALSE) +
geom_boxplot(width = .2, alpha = .6, fatten = NULL, show.legend = FALSE, outlier.shape = NA) +
stat_summary(fun.data = "mean_se", geom = "pointrange", show.legend = F,
position = position_dodge(.175)) +
facet_grid(pCausal ~ pDirection) +
scale_y_sqrt(breaks = c(0.1, 1, 5, 10, 20), labels=c(0.1, 1, 5, 10, ">20")) +
theme_bw() + theme(legend.position = "bottom") + ggtitle(label) + xlab("")
pList[[pos]] = p
pos = pos + 1
}
pAll = pList[[1]] / pList[[2]] / pList[[3]]
ggsave(paste0("pvaluesCCT-",method1,"-MAC5-noFastTest-test-times-two.jpeg"),
pAll, width = 11, height = 23)
warnings()
pvaluesCCT_2
pvaluesCCT_2 %>% filter(is.na(chisq))
5785.2/2
log10(0.5)
?data.table::read.table
?read.table
N = 1000000
p = 1000
MAF = 0.2
#mu.G= 2*MAF
#var.G = 2*MAF*(1-MAF)
ER = c(0.01, 0.1, 0.2, 0.5)
event.rate = ER[1]
G = matrix(rbinom(N*p, 2, MAF), N) ###  p SNPs of N samples
rownames(G) = paste0("IID-",1:N)
colnames(G) = paste0("SNP-",1:p)
combG = apply(t(G)-2*MAF, 2, sum)
load("C:/Users/wenjianb/Dropbox/Wenjian-Liying/code/test.RData")
rm(list=ls())
load("C:/Users/wenjianb/Dropbox/Wenjian-Liying/code/test.RData")
power
dim(G.ds)
rm(list=ls())
setwd("C:/Users/wenjianb/Dropbox/Wenjian-Liying/code/debug-2023-01-13")
load("test.RData")
power
head(data.ds)
library(ggplot2)
ggplot(data.ds, aes(event, Resid.glm.w))
ggplot(data.ds, aes(event, Resid.glm.w)) + geom_point()
ggplot(data.ds, aes(event, Resid.glm)) + geom_point()
library(patchwork)
p1 = ggplot(data.ds, aes(event, Resid.glm.w)) + geom_point()
p2 = ggplot(data.ds, aes(event, Resid.glm)) + geom_point()
p1 / p2
p1 | p2
with(data.ds, sum(Resid.glm.w))
with(data.ds, sum(Resid.glm))
dim(G.ds)
head(G.ds)
table(data.ds$event)
sumResid = with(data.ds, sum(Resid.glm.w))
sumResid
library(dplyr)
library(tidyr)
head(data.ds)
tail(data.ds)
sumWeight = with(data.ds, sum(weight1))
data.ds = data.d %>% mutate(Resid.glm.w.diff = weight1 / sumWeight * sumResid,
Resid.glm.w.new = Resid.glm.w - Resid.glm.w.diff)
data.ds = data.ds %>% mutate(Resid.glm.w.diff = weight1 / sumWeight * sumResid,
Resid.glm.w.new = Resid.glm.w - Resid.glm.w.diff)
p1 = ggplot(data.ds, aes(event, Resid.glm)) + geom_point()
p2 = ggplot(data.ds, aes(event, Resid.glm.w)) + geom_point()
p3 = ggplot(data.ds, aes(event, Resid.glm.w.diff)) + geom_point()
p4 = ggplot(data.ds, aes(event, Resid.glm.w.new)) + geom_point()
(p1 | p2) / (p3 | p4)
head(G.ds)
data.G.ds = cbind(data.ds, G.ds)
class(data.G.ds)
head(data.G.ds)
p1 = ggplot(data.G.ds, aes(`SNP-145`, Resid.glm)) + geom_boxplot()
p2 = ggplot(data.G.ds, aes(`SNP-145`, Resid.glm.w)) + geom_boxplot()
p3 = ggplot(data.G.ds, aes(`SNP-145`, Resid.glm.w.diff)) + geom_boxplot()
p4 = ggplot(data.G.ds, aes(`SNP-145`, Resid.glm.w.new)) + geom_boxplot()
(p1 | p2) / (p3 | p4)
p1 = ggplot(data.G.ds, aes(as.factor(`SNP-145`), Resid.glm)) + geom_boxplot()
p1
p1 = ggplot(data.G.ds, aes(as.factor(`SNP-145`), Resid.glm)) + geom_boxplot()
p2 = ggplot(data.G.ds, aes(as.factor(`SNP-145`), Resid.glm.w)) + geom_boxplot()
p3 = ggplot(data.G.ds, aes(as.factor(`SNP-145`), Resid.glm.w.diff)) + geom_boxplot()
p4 = ggplot(data.G.ds, aes(as.factor(`SNP-145`), Resid.glm.w.new)) + geom_boxplot()
(p1 | p2) / (p3 | p4)
p1 = ggplot(data.G.ds, aes(as.factor(`SNP-145`), Resid.glm)) + geom_violin()
p1
p1 = ggplot(data.G.ds, aes(as.factor(`SNP-145`), Resid.glm)) + geom_violin()
p2 = ggplot(data.G.ds, aes(as.factor(`SNP-145`), Resid.glm.w)) + geom_violin()
p3 = ggplot(data.G.ds, aes(as.factor(`SNP-145`), Resid.glm.w.diff)) + geom_violin()
p4 = ggplot(data.G.ds, aes(as.factor(`SNP-145`), Resid.glm.w.new)) + geom_violin()
(p1 | p2) / (p3 | p4)
head(data.G.ds)
data.G.ds %>% filter(event == 1) %>% select(`SNP-145`) %>% table()
data.G.ds %>% filter(event == 0) %>% select(`SNP-145`) %>% table()
data.G.ds %>% filter(event == 1) %>% select(`SNP-145`) %>% mean() / 2
data.G.ds %>% filter(event == 1) %>% select(`SNP-145`) %>% mean()
data.G.ds %>% filter(event == 1) %>% select(`SNP-145`) %>% summary()
data.G.ds %>% filter(event == 0) %>% select(`SNP-145`) %>% summary()
power
data.G.ds %>% filter(event == 1) %>% select(`SNP-145`) %>% as.numeric()
data.G.ds %>% filter(event == 1) %>% select(`SNP-145`) %>% unlist()
data.G.ds %>% filter(event == 1) %>% select(`SNP-145`) %>% unlist() %>% mean()
maf.case = data.G.ds %>% filter(event == 1) %>% select(`SNP-145`) %>% unlist() %>% mean()
maf.ctrl = data.G.ds %>% filter(event == 0) %>% select(`SNP-145`) %>% unlist() %>% mean()
maf.case = ./2
maf.case = data.G.ds %>% filter(event == 1) %>% select(`SNP-145`) %>% unlist() %>% mean() %>% ./2
maf.case = data.G.ds %>% filter(event == 1) %>% select(`SNP-145`) %>% unlist() %>% mean() %>% /2
maf.case = data.G.ds %>% filter(event == 1) %>% select(`SNP-145`) %>% unlist() %>% mean()
maf.ctrl = data.G.ds %>% filter(event == 0) %>% select(`SNP-145`) %>% unlist() %>% mean()
maf.case = maf.case / 2
maf.ctrl = maf.ctrl / 2
power
maf.case
maf.ctrl
head(data.ds)
maf.ctrl * 49.5 * 2 + maf.case * 1
(maf.ctrl * 49.5 * 2 + maf.case * 1) / 100
dev.off()
(maf.ctrl * w.ctrl * 2 + maf.case * w.case * 1) / sum(w.ctrl * 2 + w.case * 1)
w.ctrl = 60
w.case = 1
(maf.ctrl * w.ctrl * 2 + maf.case * w.case * 1) / sum(w.ctrl * 2 + w.case * 1)
w.ctrl = 49.5
w.case = 1
(maf.ctrl * w.ctrl * 2 + maf.case * w.case * 1) / sum(w.ctrl * 2 + w.case * 1)
w.ctrl = 80
w.case = 1
(maf.ctrl * w.ctrl * 2 + maf.case * w.case * 1) / sum(w.ctrl * 2 + w.case * 1)
w.ctrl = 100
w.case = 1
(maf.ctrl * w.ctrl * 2 + maf.case * w.case * 1) / sum(w.ctrl * 2 + w.case * 1)
w.ctrl = 200
w.case = 1
(maf.ctrl * w.ctrl * 2 + maf.case * w.case * 1) / sum(w.ctrl * 2 + w.case * 1)
w.ctrl = 300
w.case = 1
(maf.ctrl * w.ctrl * 2 + maf.case * w.case * 1) / sum(w.ctrl * 2 + w.case * 1)
head(power)
i=1
SNP.ID = rownames(power)[i]
SNP.ID
maf.case = data.G.ds %>% filter(event == 1) %>% select(SNP.ID) %>% unlist() %>% mean()
maf.case = data.G.ds %>% filter(event == 1) %>% select(all_of(SNP.ID)) %>% unlist() %>% mean()
maf.case
power$maf.case = power$maf.ctrl = NA
for(i in 1:nrow(power))
{
SNP.ID = rownames(power)[i]
maf.case = data.G.ds %>% filter(event == 1) %>% select(all_of(SNP.ID)) %>% unlist() %>% mean()
maf.ctrl = data.G.ds %>% filter(event == 0) %>% select(all_of(SNP.ID)) %>% unlist() %>% mean()
power$maf.case[i] = maf.case
power$maf.ctrl[i] = maf.ctrl
}
power
power$maf.case = power$maf.ctrl = NA
for(i in 1:nrow(power))
{
SNP.ID = rownames(power)[i]
maf.case = data.G.ds %>% filter(event == 1) %>% select(all_of(SNP.ID)) %>% unlist() %>% mean()
maf.ctrl = data.G.ds %>% filter(event == 0) %>% select(all_of(SNP.ID)) %>% unlist() %>% mean()
power$maf.case[i] = maf.case / 2
power$maf.ctrl[i] = maf.ctrl / 2
}
power
power = power %>% mutate(ratio = (maf.case - trueMAF) / (trueMAF - maf.ctrl))
power
head(data.G.ds)
head(power)
i=1
SNP.ID = rownames(power)[i]
(data.G.ds[,SNP.ID] - 2*power$trueMAF[i]) * data.G.ds[,"Resid.glm.w"]
## score statistics
sum((data.G.ds[,SNP.ID] - 2*power$trueMAF[i]) * data.G.ds[,"Resid.glm.w"])
head(data.G.ds)
## score statistics
score.glm.w = sum((data.G.ds[,SNP.ID] - 2*power$trueMAF[i]) * data.G.ds[,"Resid.glm.w"])
score.glm.w.new = sum((data.G.ds[,SNP.ID] - 2*power$trueMAF[i]) * data.G.ds[,"Resid.glm.w.new"])
score.glm.w
score.glm.w.new
power$maf.case = power$maf.ctrl = power$score.glm.w = power$score.glm.w.new = NA
for(i in 1:nrow(power))
{
SNP.ID = rownames(power)[i]
maf.case = data.G.ds %>% filter(event == 1) %>% select(all_of(SNP.ID)) %>% unlist() %>% mean()
maf.ctrl = data.G.ds %>% filter(event == 0) %>% select(all_of(SNP.ID)) %>% unlist() %>% mean()
power$maf.case[i] = maf.case / 2
power$maf.ctrl[i] = maf.ctrl / 2
## score statistics
score.glm.w = sum((data.G.ds[,SNP.ID] - 2*power$trueMAF[i]) * data.G.ds[,"Resid.glm.w"])
score.glm.w.new = sum((data.G.ds[,SNP.ID] - 2*power$trueMAF[i]) * data.G.ds[,"Resid.glm.w.new"])
power$score.glm.w[i] = score.glm.w
power$score.glm.w.new[i] = score.glm.w.new
}
power = power %>% mutate(ratio = (maf.case - trueMAF) / (trueMAF - maf.ctrl))
power
power$maf.case = power$maf.ctrl = NA
power$score.glm.w = power$score.glm.w.new = NA
power$var.glm.w = power$var.glm.w.new = NA
for(i in 1:nrow(power))
{
SNP.ID = rownames(power)[i]
maf.case = data.G.ds %>% filter(event == 1) %>% select(all_of(SNP.ID)) %>% unlist() %>% mean()
maf.ctrl = data.G.ds %>% filter(event == 0) %>% select(all_of(SNP.ID)) %>% unlist() %>% mean()
power$maf.case[i] = maf.case / 2
power$maf.ctrl[i] = maf.ctrl / 2
## score statistics
score.glm.w = sum((data.G.ds[,SNP.ID] - 2*power$trueMAF[i]) * data.G.ds[,"Resid.glm.w"])
score.glm.w.new = sum((data.G.ds[,SNP.ID] - 2*power$trueMAF[i]) * data.G.ds[,"Resid.glm.w.new"])
power$score.glm.w[i] = score.glm.w
power$score.glm.w.new[i] = score.glm.w.new
## variance
var.glm.w = sum(data.G.ds[,"Resid.glm.w"]^2);
var.glm.w.new = sum(data.G.ds[,"Resid.glm.w.new"]^2);
power$var.glm.w[i] = var.glm.w;
power$var.glm.w.new[i] = var.glm.w;
}
power = power %>% mutate(ratio = (maf.case - trueMAF) / (trueMAF - maf.ctrl))
power
head(data.G.ds)
power$maf.case = power$maf.ctrl = NA
power$score.glm.w = power$score.glm.w.new = NA
power$var.glm.w = power$var.glm.w.new = NA
for(i in 1:nrow(power))
{
SNP.ID = rownames(power)[i]
maf.case = data.G.ds %>% filter(event == 1) %>% select(all_of(SNP.ID)) %>% unlist() %>% mean()
maf.ctrl = data.G.ds %>% filter(event == 0) %>% select(all_of(SNP.ID)) %>% unlist() %>% mean()
power$maf.case[i] = maf.case / 2
power$maf.ctrl[i] = maf.ctrl / 2
## score statistics
score.glm.w = sum((data.G.ds[,SNP.ID] - 2*power$trueMAF[i]) * data.G.ds[,"Resid.glm.w"])
score.glm.w.new = sum((data.G.ds[,SNP.ID] - 2*power$trueMAF[i]) * data.G.ds[,"Resid.glm.w.new"])
power$score.glm.w[i] = score.glm.w
power$score.glm.w.new[i] = score.glm.w.new
## variance
var.glm.w = sum(data.G.ds[,"Resid.glm.w"]^2);
var.glm.w.new = sum(data.G.ds[,"Resid.glm.w.new"]^2);
power$var.glm.w[i] = var.glm.w;
power$var.glm.w.new[i] = var.glm.w.new;
}
power = power %>% mutate(ratio = (maf.case - trueMAF) / (trueMAF - maf.ctrl))
power
rm(list=ls())
setwd("C:/Users/wenjianb/Dropbox/Wenjian-Liying/code/debug-2023-01-13")
load("test.RData")
power
head(data.ds)
library(ggplot2)
library(patchwork)
library(dplyr)
library(tidyr)
with(data.ds, sum(Resid.glm.w))
with(data.ds, sum(Resid.glm))
sumResid = with(data.ds, sum(Resid.glm.w))
sumWeight = with(data.ds, sum(weight1))
data.ds = data.ds %>% mutate(Resid.glm.w.diff = weight1 / sumWeight * sumResid,
Resid.glm.w.new = Resid.glm.w - Resid.glm.w.diff)
p1 = ggplot(data.ds, aes(event, Resid.glm)) + geom_point()
p2 = ggplot(data.ds, aes(event, Resid.glm.w)) + geom_point()
p3 = ggplot(data.ds, aes(event, Resid.glm.w.diff)) + geom_point()
p4 = ggplot(data.ds, aes(event, Resid.glm.w.new)) + geom_point()
(p1 | p2) / (p3 | p4)
data.ds
head(data.ds)
p1 = ggplot(data.ds, aes(event, Resid.glm, color=as.factor(event))) + geom_point()
p2 = ggplot(data.ds, aes(event, Resid.glm.w, color=as.factor(event))) + geom_point()
p3 = ggplot(data.ds, aes(event, Resid.glm.w.diff, color=as.factor(event))) + geom_point()
p4 = ggplot(data.ds, aes(event, Resid.glm.w.new, color=as.factor(event))) + geom_point()
(p1 | p2) / (p3 | p4)
dim(data.ds)
head(data.ds)
10000 * 1^2
10000 * 1^2 + 20000 * 0.5^2
763+4245
(763+4245) / 2
jobs.table = c()
pos = 1
for(CHR in 1:22)
{
for(phenoName in c("mdd_p_t1", "mdd_c_t1", "mdd_pc_t1", "DS_p_t1","DS_y_t1","DS_t1"))
{
for(envName in c("ctq_binaSum", "ctq_sum", "ctq_sum_norm", "ctq_bina", "phyabu", "emoabu", "sexabu", "phyneg", "emoneg"))
{
jobs.table = rbind(jobs.table,
c(CHR, phenoName, envName, pos))
pos = pos + 1
}
}
}
jobs.table = data.table::data.table(jobs.table)
colnames(jobs.table) = c("CHR", "phenoName", "envName", "pos")
jobs.table$pos = as.numeric(jobs.table$pos)
n.cpu=1
CHR = jobs.table$CHR[jobs.table$pos==n.cpu]
phenoName = jobs.table$phenoName[jobs.table$pos==n.cpu]
envName = jobs.table$envName[jobs.table$pos==n.cpu]
CHR
phenoName
envName
jobs.table
jobs.table[1082,]
jobs.table[1080,]
jobs.table[1081,]
jobs.table[c(1085,1086,1087),]
5317 * 1644288 * 8 / 1024^3
5317 * 1e5 * 8 / 1024^3
5317 * 5e4 * 8 / 1024^3
jobs.table = c()
pos = 1
for(CHR in 1:22)
{
for(phenoName in c("mdd_p_t1", "mdd_c_t1", "mdd_pc_t1", "DS_p_t1","DS_y_t1","DS_t1"))
{
for(envName in c("ctq_binaSum", "ctq_sum", "ctq_sum_norm", "ctq_bina", "phyabu", "emoabu", "sexabu", "phyneg", "emoneg"))
{
jobs.table = rbind(jobs.table,
c(CHR, phenoName, envName, pos))
pos = pos + 1
}
}
}
jobs.table = data.table::data.table(jobs.table)
colnames(jobs.table) = c("CHR", "phenoName", "envName", "pos")
jobs.table$pos = as.numeric(jobs.table$pos)
dim(jobs.table)
head(jobs.table)
25000001 / 5000
25000091 / 5000
5001 / 5000
ceiling(5001 / 5000)
nSNP=5001
nSNPinEachRep = 5000
nReps = ceiling(nSNP / nSNPinEachRep)
nReps
iRep=1
posStart = (iRep-1)*nSNPinEachRep + 1
posEnd = min(iRep*nSNPinEachRep, nSNP)
posTempSNPs = posStart:posEnd
posTempSNPs
posStart
posEnd
iRep=2
posStart = (iRep-1)*nSNPinEachRep + 1
posEnd = min(iRep*nSNPinEachRep, nSNP)
pritn(c(posStart, posEnd))
print(c(posStart, posEnd))
posTempSNPs = unique(posTempSNPs)
posTempSNPs
posTempSNPs = posStart:posEnd
posTempSNPs = unique(posTempSNPs)
posTempSNPs = posStart:posEnd
posTempSNPs
library(SPAGE)
library(GRAB)
?GRAB.makePlink
?CCT
?error
?stop
sessionInfo()
