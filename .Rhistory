SampleIDs = tSampleIDs,
control = list(IDsToIncludeFile = IDsToIncludeFile,
ImputeMethod = "mean"))
tempGRM = SparseGRMData %>%
filter(ID1 %in% tSampleIDs & ID2 %in% tSampleIDs) %>%
filter(ID1 != ID2) %>%
mutate(idxID1 = match(ID1, rownames(GenoList$GenoMat))) %>%
mutate(idxID2 = match(ID2, rownames(GenoList$GenoMat)))
for(j in 1:nrow(tempGRM))
{
tempmetrics = GenoList$GenoMat[tempGRM$idxID1[j],] - GenoList$GenoMat[tempGRM$idxID2[j],]
pc = 0.5 * weighted.mean(((abs(tempmetrics - 1) + abs(tempmetrics + 1)- 2)/pro_var), wi, na.rm = T)
pc = ifelse(pc > (1-tempGRM$Value[j])^2, (1-tempGRM$Value[j])^2-1e-10, ifelse(pc < 1-2*tempGRM$Value[j], 1-2*tempGRM$Value[j], pc))
pb = 2 - 2*pc - 2*tempGRM$Value[j]
pa = 2*tempGRM$Value[j] + pc - 1
PairwiseIBD = rbind(PairwiseIBD,
c(ID1 = tempGRM$ID1[j], ID2 = tempGRM$ID2[j], pa = pa, pb = pb, pc = pc))
}
cat("Completed analyzing the", nParts, "block(s) of Samples.\n")
tSampleNums = 0;
tSampleIDs = c();
nParts = nParts + 1;
}
head(PairwiseIBD)
dim(PairwiseIBD)
graph_length
tail(PairwiseIBD)
for(i in 251:500){}
for(i in 251:500){
tSampleNums = tSampleNums + graph_length[i];
tSampleIDs = c(tSampleIDs, V(graph_list[[i]])$name);}
if(tSampleNums >= maxSampleNums | i == length(graph_list))
{
cat("\nProcessing the", nParts, "block(s) of Samples.\n")
GenoList = GRAB.ReadGeno(bedFile,
SampleIDs = tSampleIDs,
control = list(IDsToIncludeFile = IDsToIncludeFile,
ImputeMethod = "mean"))
tempGRM = SparseGRMData %>%
filter(ID1 %in% tSampleIDs & ID2 %in% tSampleIDs) %>%
filter(ID1 != ID2) %>%
mutate(idxID1 = match(ID1, rownames(GenoList$GenoMat))) %>%
mutate(idxID2 = match(ID2, rownames(GenoList$GenoMat)))
for(j in 1:nrow(tempGRM))
{
tempmetrics = GenoList$GenoMat[tempGRM$idxID1[j],] - GenoList$GenoMat[tempGRM$idxID2[j],]
pc = 0.5 * weighted.mean(((abs(tempmetrics - 1) + abs(tempmetrics + 1)- 2)/pro_var), wi, na.rm = T)
pc = ifelse(pc > (1-tempGRM$Value[j])^2, (1-tempGRM$Value[j])^2-1e-10, ifelse(pc < 1-2*tempGRM$Value[j], 1-2*tempGRM$Value[j], pc))
pb = 2 - 2*pc - 2*tempGRM$Value[j]
pa = 2*tempGRM$Value[j] + pc - 1
PairwiseIBD = rbind(PairwiseIBD,
c(ID1 = tempGRM$ID1[j], ID2 = tempGRM$ID2[j], pa = pa, pb = pb, pc = pc))
}
cat("Completed analyzing the", nParts, "block(s) of Samples.\n")
tSampleNums = 0;
tSampleIDs = c();
nParts = nParts + 1;
}
data.table::fwrite(data.table::data.table(PairwiseIBD), PairwiseIBDFile,
row.names = F, col.names = T, quote = F, sep = "\t")
getPairwiseIBD(PlinkFile,SparseGRMFile,PairwiseIBDFile,rm.tempFile = T)
library(GRAB)
PlinkFile = "C:/Users/XH/Desktop/test/nSub_25000_nFam_2500"
PairwiseIBDFile = "C:/Users/XH/Desktop/test/PairwiseIBD.txt"
SparseGRMFile = "C:/Users/XH/Desktop/test/SparseGRM_0.05.txt"
ResidMatFile = "C:/Users/XH/Desktop/test/ResidMat.txt"
GenoFile = "C:/Users/XH/Desktop/test/nSub_25000_nFam_2500.bed"
OutputFile = "C:/Users/XH/Desktop/test/Output.txt"
SparseGRM = data.table::fread(SparseGRMFile)
head(SparseGRM)
subjid = paste0(rep(paste0("F10-",1:500),each = 10),"-",1:10)
head(subjid)
head(subjid,40)
length(subjid)
SparseGRM=SparseGRM%>%filter(ID1%in%subjid & ID2 %in% subjid)
dim(SparseGRM)
write.table(SparseGRM,SparseGRMFile,col.names = T,row.names = F,quote = F,sep="\t")
getPairwiseIBD(PlinkFile,SparseGRMFile,PairwiseIBDFile,rm.tempFile = T)
data.table::fwrite(data.table::data.table(PairwiseIBD), PairwiseIBDFile,
row.names = F, col.names = T, quote = F, sep = "\t")
PairwiseIBD
getPairwiseIBD(PlinkFile,NULL,SparseGRMFile,PairwiseIBDFile,rm.tempFile = T)
resid = data.table::fread("C:/Users/XH/Desktop/test/ResidB-1.txt")
head(resid)
resid=resid%>%select(SubjID,R_tau)%>%rename(Resid=R_tau)
write.table(resid,ResidMatFile,col.names = T,row.names = F,quote = F,sep="\t")
SPAGRM = SPAGRM.NullModel(ResidMatFile,SparseGRMFile,PairwiseIBDFile)
sum(SPAGRM$ThreeSubj_list[[1]]$CLT[,1]*SPAGRM$ThreeSubj_list[[1]]$stand.S)
sum(SPAGRM$ThreeSubj_list[[1]]$CLT[,11]*SPAGRM$ThreeSubj_list[[1]]$stand.S)
sum(SPAGRM$ThreeSubj_list[[111]]$CLT[,11]*SPAGRM$ThreeSubj_list[[111]]$stand.S)
GRAB.Marker(objNull = SPAGRM,GenoFile = GenoFile, OutputFile = OutputFile)
test1=data.table::fread("C:/Users/XH/Desktop/test/Output.txt")
test2=data.table::fread("C:/Users/XH/Desktop/test/taucommonpvalB-1.txt")
head(test1)
head(test2)
test=full_join(test1,test2,by=c('Marker'='SNPID'))
head(test)
for(i in ncol(test)){
if(test$p.value.spa.G.GRM[i]==test$p.value.norm.GRM[i]){
test$Pvalue[i] = 2*test$Pvalue[i]}}
head(test)
test$p.value.spa.G.GRM[1]==test$p.value.norm.GRM[1])
test$p.value.spa.G.GRM[1]==test$p.value.norm.GRM[1]
for(i in 1:(ncol(test)-1)){
if(test$p.value.spa.G.GRM[i]==test$p.value.norm.GRM[i]){
test$p.value.spa.G.GRM[1]==test$p.value.norm.GRM[1]
if(test$p.value.spa.G.GRM[i]==test$p.value.norm.GRM[i]){
test$Pvalue[i] = 2*test$Pvalue[i]}}
.
>>
for(i in 1:(ncol(test)-1)){
if(test$p.value.spa.G.GRM[i]==test$p.value.norm.GRM[i]){
test$Pvalue[i] = 2*test$Pvalue[i]}}
head(test)
plot(-log10(test$Pvalue), -log10(test$p.value.spa.G.GRM))+abline(0,1)
library(GRAB)
library(GRAB)
PlinkFile = "C:/Users/XH/Desktop/test/nSub_25000_nFam_2500"
PairwiseIBDFile = "C:/Users/XH/Desktop/test/PairwiseIBD.txt"
SparseGRMFile = "C:/Users/XH/Desktop/test/SparseGRM_0.05.txt"
ResidMatFile = "C:/Users/XH/Desktop/test/ResidMat.txt"
GenoFile = "C:/Users/XH/Desktop/test/nSub_25000_nFam_2500.bed"
OutputFile = "C:/Users/XH/Desktop/test/Output.txt"
SPAGRM = SPAGRM.NullModel(ResidMatFile,SparseGRMFile,PairwiseIBDFile)
GRAB.Marker(objNull = SPAGRM,GenoFile = GenoFile, OutputFile = OutputFile)
GRAB.Marker(objNull = SPAGRM,GenoFile = GenoFile, OutputFile = OutputFile)
test1=data.table::fread(OutputFile)
OutputFile
test2=data.table::fread("C:/Users/XH/Desktop/test/taucommonpvalB-1.txt")
head(test1)
head(test2)
test=full_join(test1,test2,by=c('Marker' = 'SNPID'))
head(test)
dim(test)
plot(-log10(test$Pvalue), -log10(test$p.value.spa.G.GRM))+abline(0,1)
test%>%filter(Pvalue<1e-3)
SPAGRM$R_GRM_R
head(test)
2*0.22475876*(1-0.22475876)
5209.0007/sqrt(2*0.22475876*(1-0.22475876)*57521219)
pnorm(5209.0007/sqrt(2*0.22475876*(1-0.22475876)*57521219))
pnorm(5209.0007/sqrt(2*0.22475876*(1-0.22475876)*57521219),lower.tail = T)
pnorm(5209.0007/sqrt(2*0.22475876*(1-0.22475876)*57521219),lower.tail = F)
pnorm(5209.0007/sqrt(2*0.22475876*(1-0.22475876)*57521219),lower.tail = F)*2
Rcpp::sourceCpp("C:/Users/XH/Desktop/test.cpp")
Rcpp::sourceCpp("C:/Users/XH/Desktop/test.cpp")
ResidMatFile = "C:/Users/XH/Desktop/test/ResidMat.txt"
library(GRAB)
resid=data.table::fread(ResidMatFile)
head(resid)
PlinkFile = "C:/Users/XH/Desktop/test/nSub_25000_nFam_2500"
PairwiseIBDFile = "C:/Users/XH/Desktop/test/PairwiseIBD.txt"
SparseGRMFile = "C:/Users/XH/Desktop/test/SparseGRM_0.05.txt"
ResidMatFile = "C:/Users/XH/Desktop/test/ResidMat.txt"
GenoFile = "C:/Users/XH/Desktop/test/nSub_25000_nFam_2500.bed"
OutputFile = "C:/Users/XH/Desktop/test/Output.txt"
SPAGRM = SPAGRM.NullModel(ResidMatFile,SparseGRMFile,PairwiseIBDFile)
GRAB.Marker(objNull = SPAGRM,GenoFile = GenoFile, OutputFile = OutputFile)
test1=data.table::fread(OutputFile)
test2=data.table::fread("C:/Users/XH/Desktop/test/taucommonpvalB-1.txt")
head(test1)
head(test2)
test=full_join(test1,test2,by=c('Marker' = 'SNPID'))
head(test)
whic(test$Pvalue==0)
witch(test$Pvalue==0)
which(test$Pvalue==0)
plot(-log10(test$Pvalue), -log10(test$p.value.spa.G.GRM))+abline
plot(-log10(test$Pvalue), -log10(test$p.value.spa.G.GRM))+abline(0,1)
?GRAB.ReadGeno
test%>%filter(AltFreq>0.5)
0.4999095+0.5000101
1-0.5000101
library(GRAB)
library(GRAB)
PlinkFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK"
PairwiseIBDFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/PairwiseIBD.txt"
SparseGRMFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/SparseGRM.txt"
ResidMatFile = "C:/Users/XH/Desktop/ResidMat.txt"
GenoFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK.bed"
OutputFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/Output.txt"
getPairwiseIBD(PlinkFile,SparseGRMFile,PairwiseIBDFile,rm.tempFile = T)
SPAGRM = SPAGRM.NullModel(ResidMatFile,SparseGRMFile,PairwiseIBDFile)
PlinkFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK"
PairwiseIBDFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/PairwiseIBD.txt"
SparseGRMFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/SparseGRM.txt"
ResidMatFile = "C:/Users/XH/Desktop/ResidMat.txt"
GenoFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK.bed"
OutputFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/Output.txt"
getPairwiseIBD(PlinkFile,SparseGRMFile,PairwiseIBDFile,rm.tempFile = T)
PlinkFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK"
PairwiseIBDFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/PairwiseIBD.txt"
SparseGRMFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/SparseGRM.txt"
ResidMatFile = "C:/Users/XH/Desktop/ResidMat.txt"
GenoFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK.bed"
OutputFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/Output.txt"
getPairwiseIBD(PlinkFile,SparseGRMFile,PairwiseIBDFile,rm.tempFile = T)
SparseGRMFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/SparseGRM.txt"
PlinkFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK"
PairwiseIBDFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/PairwiseIBD.txt"
SparseGRMFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/SparseGRM.txt"
ResidMatFile = "C:/Users/XH/Desktop/ResidMat.txt"
GenoFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK.bed"
OutputFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/Output.txt"
getPairwiseIBD(PlinkFile,NULL,SparseGRMFile,PairwiseIBDFile,rm.tempFile = T)
SPAGRM = SPAGRM.NullModel(ResidMatFile,SparseGRMFile,PairwiseIBDFile)
GRAB.Marker(objNull = SPAGRM,GenoFile = GenoFile, OutputFile = OutputFile)
library(GRAB)
PlinkFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK"
PairwiseIBDFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/PairwiseIBD.txt"
SparseGRMFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/SparseGRM.txt"
ResidMatFile = "C:/Users/XH/Desktop/ResidMat.txt"
GenoFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK.bed"
OutputFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/Output.txt"
getPairwiseIBD(PlinkFile,NULL,SparseGRMFile,PairwiseIBDFile,rm.tempFile = T)
SPAGRM = SPAGRM.NullModel(ResidMatFile,SparseGRMFile,PairwiseIBDFile)
PlinkFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK"
PairwiseIBDFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/PairwiseIBD.txt"
SparseGRMFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/SparseGRM.txt"
ResidMatFile = "C:/Users/XH/Desktop/ResidMat.txt"
GenoFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK.bed"
OutputFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/Output.txt"
getPairwiseIBD(PlinkFile,NULL,SparseGRMFile,PairwiseIBDFile,rm.tempFile = T)
SPAGRM = SPAGRM.NullModel(ResidMatFile,SparseGRMFile,PairwiseIBDFile)
GRAB.Marker(objNull = SPAGRM,GenoFile = GenoFile, OutputFile = OutputFile)
test=data.table::fread(OutputFile)
test
test%>%filter(AltFreq>=0.5)
freq=data.table::fread(paste0(PlinkFile, ".frq"))
head(freq)
freq%>%filter(MAF>=0.5)
sort(test$Pvalue)
PlinkFile = "C:/Users/XH/Desktop/test/nSub_25000_nFam_2500"
PairwiseIBDFile = "C:/Users/XH/Desktop/test/PairwiseIBD.txt"
SparseGRMFile = "C:/Users/XH/Desktop/test/SparseGRM_0.05.txt"
ResidMatFile = "C:/Users/XH/Desktop/test/ResidMat.txt"
GenoFile = "C:/Users/XH/Desktop/test/nSub_25000_nFam_2500.bed"
OutputFile = "C:/Users/XH/Desktop/test/Output.txt"
SPAGRM = SPAGRM.NullModel(ResidMatFile,SparseGRMFile,PairwiseIBDFile)
frqFile = NULL
tempDir = NULL
maxSampleNums = 2500
minMafIBD = 0.01
rm.tempFile = FALSE
bedFile = paste0(PlinkFile, ".bed")
bimFile = paste0(PlinkFile, ".bim")
famFile = paste0(PlinkFile, ".fam")
if(is.null(frqFile)){
frqFile = paste0(PlinkFile, ".frq")
}else if(substr(frqFile, nchar(frqFile)-3, nchar(frqFile)) != ".frq"){
frqFile = paste0(PlinkFile, ".frq")
}
if(!file.exists(frqFile))
stop("Please check frqFile name ", frqFile, " is correct or this file exists.")
if(is.null(tempDir))
tempDir = system.file("SparseGRM", "temp", package = "GRAB")
# read all genotype and pass to QC.
GenoInfoMat = data.table::fread(frqFile)
# read in the Sparse GRM.
SparseGRMData = data.table::fread(SparseGRMFile)
# read in the bim and fam data.
bim = data.table::fread(bimFile)
fam = data.table::fread(famFile)
# check SNPs of frqFile and subjects of SparseGRMFile correspond to PlinkFile.
SubjID = unique(c(SparseGRMData$ID1, SparseGRMData$ID2))
if(any(GenoInfoMat$SNP != bim$V2))
stop("Please check if SNPs in FrqFile match with PlinkFile")
if(!all(SubjID %in% fam$V2))
stop("Please check if subjects in SparseGRMFile but not in PlinkFile")
GenoInfoMat = GenoInfoMat %>% filter(MAF > minMafIBD)
cat("Analyzing Number of Subjects:\t", length(SubjID), "\n")
cat("Remaining Number of Markers:\t", nrow(GenoInfoMat), "\n")
if(nrow(GenoInfoMat) < 1e4)
warning("Number of Markers is a bit small, we recommend nSNPs > 500,000.\n")
if(nrow(GenoInfoMat) > 1e5)
warning("Number of Markers is a bit large, we recommend maxSampleNums < 2,500.\n")
# metrics used in pairwise IBD calculation.
altFreq = GenoInfoMat$MAF
pro_var = 2 * (altFreq * (1 - altFreq))^2 # 2*pi^2*(1-pi)^2, where pi comes from Binom(2, pi).
wi = sqrt(pro_var/(1 - pro_var)) # weights of each SNP
# write the passed SNPIDs into IDsToInclude.
IDsToIncludeFile = paste0(tempDir, "/IDsToInclude.txt")
data.table::fwrite(data.table::data.table(GenoInfoMat$SNP), IDsToIncludeFile,
row.names = F, col.names = F, quote = F, sep = "\t")
edges = t(SparseGRMData[, c("ID1", "ID2")])
graph_GRM = make_graph(edges, directed = F)
graph_list_all = graph_GRM %>% decompose()
graph_length = lapply(graph_list_all, length)
graph_list = graph_list_all[graph_length > 1]
graph_length = lapply(graph_list, length) %>% unlist
# initialize parameters
PairwiseIBD = c();
tSampleNums = 0;
tSampleIDs = c();
nParts = 1;
# cycle for calculating pairwise IBD
for(i in 1:length(graph_list))
}
for(i in 1:250){
tSampleNums = tSampleNums + graph_length[i];
tSampleIDs = c(tSampleIDs, V(graph_list[[i]])$name);}
if(tSampleNums >= maxSampleNums | i == length(graph_list))
{
cat("\nProcessing the", nParts, "block(s) of Samples.\n")
GenoList = GRAB.ReadGeno(bedFile,
SampleIDs = tSampleIDs,
control = list(IDsToIncludeFile = IDsToIncludeFile,
ImputeMethod = "mean"))
tempGRM = SparseGRMData %>%
filter(ID1 %in% tSampleIDs & ID2 %in% tSampleIDs) %>%
filter(ID1 != ID2) %>%
mutate(idxID1 = match(ID1, rownames(GenoList$GenoMat))) %>%
mutate(idxID2 = match(ID2, rownames(GenoList$GenoMat)))
for(j in 1:nrow(tempGRM))
{
tempmetrics = GenoList$GenoMat[tempGRM$idxID1[j],] - GenoList$GenoMat[tempGRM$idxID2[j],]
pc = 0.5 * weighted.mean(((abs(tempmetrics - 1) + abs(tempmetrics + 1)- 2)/pro_var), wi, na.rm = T)
pc = ifelse(pc > (1-tempGRM$Value[j])^2, (1-tempGRM$Value[j])^2-1e-10, ifelse(pc < 1-2*tempGRM$Value[j], 1-2*tempGRM$Value[j], pc))
pb = 2 - 2*pc - 2*tempGRM$Value[j]
pa = 2*tempGRM$Value[j] + pc - 1
PairwiseIBD = rbind(PairwiseIBD,
c(ID1 = tempGRM$ID1[j], ID2 = tempGRM$ID2[j], pa = pa, pb = pb, pc = pc))
}
cat("Completed analyzing the", nParts, "block(s) of Samples.\n")
tSampleNums = 0;
tSampleIDs = c();
nParts = nParts + 1;
}
PairwiseIBD
head(PairwiseIBD)
PairwiseIBD->test1
GenoInfoMat
GenoInfoMat$MAF=1-GenoInfoMat$MAF
# metrics used in pairwise IBD calculation.
altFreq = GenoInfoMat$MAF
pro_var = 2 * (altFreq * (1 - altFreq))^2 # 2*pi^2*(1-pi)^2, where pi comes from Binom(2, pi).
wi = sqrt(pro_var/(1 - pro_var)) # weights of each SNP
# write the passed SNPIDs into IDsToInclude.
IDsToIncludeFile = paste0(tempDir, "/IDsToInclude.txt")
data.table::fwrite(data.table::data.table(GenoInfoMat$SNP), IDsToIncludeFile,
row.names = F, col.names = F, quote = F, sep = "\t")
edges = t(SparseGRMData[, c("ID1", "ID2")])
graph_GRM = make_graph(edges, directed = F)
graph_list_all = graph_GRM %>% decompose()
graph_length = lapply(graph_list_all, length)
graph_list = graph_list_all[graph_length > 1]
graph_length = lapply(graph_list, length) %>% unlist
# initialize parameters
PairwiseIBD = c();
tSampleNums = 0;
tSampleIDs = c();
nParts = 1;
for(i in 1:250)
{
tSampleNums = tSampleNums + graph_length[i];
tSampleIDs = c(tSampleIDs, V(graph_list[[i]])$name);
if(tSampleNums >= maxSampleNums | i == length(graph_list))
{
cat("\nProcessing the", nParts, "block(s) of Samples.\n")
GenoList = GRAB.ReadGeno(bedFile,
SampleIDs = tSampleIDs,
control = list(IDsToIncludeFile = IDsToIncludeFile,
ImputeMethod = "mean"))
tempGRM = SparseGRMData %>%
filter(ID1 %in% tSampleIDs & ID2 %in% tSampleIDs) %>%
filter(ID1 != ID2) %>%
mutate(idxID1 = match(ID1, rownames(GenoList$GenoMat))) %>%
mutate(idxID2 = match(ID2, rownames(GenoList$GenoMat)))
for(j in 1:nrow(tempGRM))
{
tempmetrics = GenoList$GenoMat[tempGRM$idxID1[j],] - GenoList$GenoMat[tempGRM$idxID2[j],]
pc = 0.5 * weighted.mean(((abs(tempmetrics - 1) + abs(tempmetrics + 1)- 2)/pro_var), wi, na.rm = T)
pc = ifelse(pc > (1-tempGRM$Value[j])^2, (1-tempGRM$Value[j])^2-1e-10, ifelse(pc < 1-2*tempGRM$Value[j], 1-2*tempGRM$Value[j], pc))
pb = 2 - 2*pc - 2*tempGRM$Value[j]
pa = 2*tempGRM$Value[j] + pc - 1
PairwiseIBD = rbind(PairwiseIBD,
c(ID1 = tempGRM$ID1[j], ID2 = tempGRM$ID2[j], pa = pa, pb = pb, pc = pc))
}
cat("Completed analyzing the", nParts, "block(s) of Samples.\n")
tSampleNums = 0;
tSampleIDs = c();
nParts = nParts + 1;
}
}
PairwiseIBD->test2
head(test1)
head(test2)
all(test[,5]==test2[,5])
which(test[,5]!=test2[,5])
test1[,3:5]=as.numeric(test1[,3:5])
test2[,3:5]=as.numeric(test2[,3:5])
head(test1)
test2[,5]=as.numeric(test2[,5])
test1[,5]=as.numeric(test1[,5])
head(test1)
test1=as.data.frame(test1)
test2=as.data.frame(test2)
head(test1)
class(test1$pa)
test1 = test1%>%mutate(across(pa:pc, as.numeric))
head(test1)
test2 = test2%>%mutate(across(pa:pc, as.numeric))
all(test1$pa==test2$pa)
all(abs(test1$pa-test2$pa)<1e-6)
all(abs(test1$pb-test2$pb)<1e-6)
library(GRAB)
PlinkFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK"
PairwiseIBDFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/PairwiseIBD.txt"
SparseGRMFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/SparseGRM.txt"
ResidMatFile = "C:/Users/XH/Desktop/ResidMat.txt"
GenoFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK.bed"
OutputFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/Output.txt"
getPairwiseIBD(PlinkFile,SparseGRMFile,PairwiseIBDFile,rm.tempFile = T)
SPAGRM = SPAGRM.NullModel(ResidMatFile,SparseGRMFile,PairwiseIBDFile)
GRAB.Marker(objNull = SPAGRM,GenoFile = GenoFile, OutputFile = OutputFile)
library(GRAB)
library(GRAB)
PlinkFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK"
PairwiseIBDFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/PairwiseIBD.txt"
SparseGRMFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/SparseGRM.txt"
ResidMatFile = "C:/Users/XH/Desktop/ResidMat.txt"
GenoFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK.bed"
OutputFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/Output.txt"
getPairwiseIBD(PlinkFile,SparseGRMFile,PairwiseIBDFile,rm.tempFile = T)
SPAGRM = SPAGRM.NullModel(ResidMatFile,SparseGRMFile,PairwiseIBDFile)
GRAB.Marker(objNull = SPAGRM,GenoFile = GenoFile, OutputFile = OutputFile)
PlinkFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK"
PairwiseIBDFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/PairwiseIBD.txt"
SparseGRMFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/SparseGRM.txt"
ResidMatFile = "C:/Users/XH/Desktop/ResidMat.txt"
GenoFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK.bed"
OutputFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/Output.txt"
getPairwiseIBD(PlinkFile,SparseGRMFile,PairwiseIBDFile,rm.tempFile = T)
SPAGRM = SPAGRM.NullModel(ResidMatFile,SparseGRMFile,PairwiseIBDFile)
GRAB.Marker(objNull = SPAGRM,GenoFile = GenoFile, OutputFile = OutputFile)
library(GRAB)
PlinkFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK"
PairwiseIBDFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/PairwiseIBD.txt"
SparseGRMFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/SparseGRM.txt"
ResidMatFile = "C:/Users/XH/Desktop/ResidMat.txt"
GenoFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK.bed"
OutputFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/Output.txt"
getPairwiseIBD(PlinkFile,SparseGRMFile,PairwiseIBDFile,rm.tempFile = T)
SPAGRM = SPAGRM.NullModel(ResidMatFile,SparseGRMFile,PairwiseIBDFile)
GRAB.Marker(objNull = SPAGRM,GenoFile = GenoFile, OutputFile = OutputFile)
library(GRAB)
PlinkFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK"
PairwiseIBDFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/PairwiseIBD.txt"
SparseGRMFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/SparseGRM.txt"
ResidMatFile = "C:/Users/XH/Desktop/ResidMat.txt"
GenoFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK.bed"
OutputFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/Output.txt"
getPairwiseIBD(PlinkFile,SparseGRMFile,PairwiseIBDFile,rm.tempFile = T)
SPAGRM = SPAGRM.NullModel(ResidMatFile,SparseGRMFile,PairwiseIBDFile)
GRAB.Marker(objNull = SPAGRM,GenoFile = GenoFile, OutputFile = OutputFile)
library(GRAB)
PlinkFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK"
PairwiseIBDFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/PairwiseIBD.txt"
SparseGRMFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/SparseGRM.txt"
ResidMatFile = "C:/Users/XH/Desktop/ResidMat.txt"
GenoFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/extdata/simuPLINK.bed"
OutputFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/Output.txt"
getPairwiseIBD(PlinkFile,SparseGRMFile,PairwiseIBDFile,rm.tempFile = T)
SPAGRM = SPAGRM.NullModel(ResidMatFile,SparseGRMFile,PairwiseIBDFile)
GRAB.Marker(objNull = SPAGRM,GenoFile = GenoFile, OutputFile = OutputFile)
PlinkFile = "C:/Users/XH/Desktop/test/nSub_25000_nFam_2500"
PairwiseIBDFile = "C:/Users/XH/Desktop/test/PairwiseIBD.txt"
SparseGRMFile = "C:/Users/XH/Desktop/test/SparseGRM_0.05.txt"
ResidMatFile = "C:/Users/XH/Desktop/test/ResidMat.txt"
GenoFile = "C:/Users/XH/Desktop/test/nSub_25000_nFam_2500.bed"
OutputFile = "C:/Users/XH/Desktop/test/Output.txt"
resid=data.table::fread(ResidMatFile)
resid=resid%>%select(SubjID,R_tau)%>%rename(Resid=R_tau)
resid=data.table::fread("C:/Users/XH/Desktop/test/ResidB-1.txt")
resid=resid%>%select(SubjID,R_tau)%>%rename(Resid=R_tau)
write.table(resid,ResidMatFile,col.names = T,row.names = F,quote = F,sep="\t")
SPAGRM = SPAGRM.NullModel(ResidMatFile,SparseGRMFile,PairwiseIBDFile)
GRAB.Marker(objNull = SPAGRM,GenoFile = GenoFile, OutputFile = OutputFile)
GRAB.Marker(objNull = SPAGRM,GenoFile = GenoFile, OutputFile = OutputFile)
test1=data.table::fread(OutputFile)
test2=data.table::fread("C:/Users/XH/Desktop/test/taucommonpvalB-1.txt")
test=full_join(test1,test2,by=c('Marker' = 'SNPID'))
head(test)
SPAGRM$R_GRM_R
5209.0007/sqrt(2*0.22475876*(1-0.22475876)*57521219)
plot(-log10(test$Pvalue),-og10(test$p.value.spa.G.GRM))+abline(0,1)
plot(-log10(test$Pvalue),-log10(test$p.value.spa.G.GRM))+abline(0,1)
test%>%filter(AltFreq>0.5)
test%>%filter(AltFreq>=0.5)
test%>%filter(MAF>=0.5)
all(test$AltFreq==test$MAF)
test1
test2
OutputFile = "C:/Users/XH/AppData/Local/R/win-library/4.2/GRAB/SparseGRM/temp/Output.txt"
test3=data.table::fread(OutputFile)
test3
test3%>%filter(AltFreq>=0.5)
library(remotes)  # remotes library requires less dependency packages than devtools
install_github("GeneticAnalysisinBiobanks/GRAB", INSTALL_opts=c("--no-multiarch"), ref="main")  # The INSTALL_opts is required in Windows OS.
warnings()
library(GRAB)
library(GRAB)
PlinkFile = "C:/Users/XH/Desktop/test/nSub_25000_nFam_2500"
PairwiseIBDFile = "C:/Users/XH/Desktop/test/PairwiseIBD.txt"
SparseGRMFile = "C:/Users/XH/Desktop/test/SparseGRM_0.05.txt"
ResidMatFile = "C:/Users/XH/Desktop/test/ResidMat.txt"
GenoFile = "C:/Users/XH/Desktop/test/nSub_25000_nFam_2500.bed"
OutputFile = "C:/Users/XH/Desktop/test/Output.txt"
SPAGRM = SPAGRM.NullModel(ResidMatFile,SparseGRMFile,PairwiseIBDFile)
GRAB.Marker(objNull = SPAGRM,GenoFile = GenoFile, OutputFile = OutputFile,control=list(min_maf_marker=0.0001))
GRAB.Marker(objNull = SPAGRM,GenoFile = GenoFile, OutputFile = OutputFile,control=list(min_maf_marker=0.00001))
GRAB.Marker(objNull = SPAGRM,GenoFile = GenoFile, OutputFile = OutputFile,control=list(min_maf_marker=0.001))
