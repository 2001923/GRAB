for(i in 1:500){
print(i)
network = data.table::fread("D:/DepNet/HotNet2/consensus/subnetworks.tsv",
nrows = 1, skip = i+1, sep=" ", header = F)
network = gsub("\t", "", network)
merged1 = subset(merged, GENE %in% network)
p = ggplot(merged1, aes(Score.benchmark, -log10(Pvalue.benchmark), label=GENE)) + geom_point() + geom_label_repel()
# ggsave(paste0("network-",i,".jpeg"), p, width = 5, height = 5)
if(length(network) > 5)
ggsave(paste0("../figures-more-than-5/network-",i,".jpeg"), p, width = 5, height = 5)
}
head(benchmark)
plot(benchmark$Score.benchmark, -log10(benchmark$Pvalue.benchmark))
dev.off()
plot(benchmark$Score.benchmark, -log10(benchmark$Pvalue.benchmark))
table(benchmark$Score.benchmark > 0)
# FALSE  TRUE
# 6472 11596
subset(benchmark, GENE %in% c("TP53","PIK3CA","NOTCH"))
head(benchmark)
HotNet2Mentha = read.table("D:/DepNet/HotNet2/mentha")
dim(HotNet2Mentha)
head(HotNet2Mentha)
plot(merged$zScore.benchmark, merged$Score.HotNet2Mentha)
merged = merged[order(merged$ORDER),]
write.csv(merged, "merged.csv", row.names = F)
getwd()
library(devtools)  # author version: 0.0.9
install_github("YZ-Ma/EmpSPA")
sessionInfo()
library(EmpSPA)
?EmpSPA  # manual of EmpSPA package
?EmpSPA::EmpSPA_R_Null_Model
library(GRAB)
?GRAB.control
?getSparseGRM
SparseGRMFile = gsub("temp", "SparseGRM.txt", tempDir)
tempDir = system.file("SparseGRM", "temp", package = "GRAB")
SparseGRMFile = gsub("temp", "SparseGRM.txt", tempDir)
SparseGRMFile
data.table::fread(SparseGRMFile)
?GRAB.NullModel
?getSparseGRM
?GRAB.NullModel
?getSparseGRM
?GRAB.NullModel
library(GRAB)
?GRAB.NullModel
?GRAB.NullModel
n=10
rbinom(n, 3, 0.3)
FamFile = system.file("extdata", "simuPLINK.fam", package = "GRAB")
FamData = read.table(FamFile)
IID = FamData$V2  # Individual ID
n = length(IID)
set.seed(678910)
## The below is just to demonstrate the functions of GRAB package
Pheno = data.frame(IID = IID, Cova1 = rnorm(n), Cova2 = rbinom(n, 1, 0.5),
binary = rbinom(n, 1, 0.5),
ordinal = rbinom(n, 3, 0.3),
quantitative = rnorm(n),
time = runif(n),
event = rbinom(n, 1, 0.2))
dim(Pheno)
head(Pheno)
PhenoFile = "C:/Users/wenjianb/Documents/R/win-library/4.1/GRAB/extdata/simuPHENO.txt"
### Replicate the phenotype simulation in the package
```{r}
FamFile = system.file("extdata", "simuPLINK.fam", package = "GRAB")
FamData = read.table(FamFile)
IID = FamData$V2  # Individual ID
n = length(IID)
set.seed(678910)
## The below is just to demonstrate the functions of GRAB package
Pheno = data.frame(IID = IID, Cova1 = rnorm(n), Cova2 = rbinom(n, 1, 0.5),
binary = rbinom(n, 1, 0.5),
ordinal = rbinom(n, 3, 0.3),
quantitative = rnorm(n),
time = runif(n),
event = rbinom(n, 1, 0.2))
PhenoFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
write.table(Pheno, PhenoFile, row.names = F, quote = F, sep = "\t")
```
head(Pheno)
?write.ftable
?write.table
PhenoFile
PhenoFile = "C:/Users/wenjianb/Documents/R/win-library/4.1/GRAB/extdata/simuPHENO.txt"
### Replicate the phenotype simulation in the package
```{r}
FamFile = system.file("extdata", "simuPLINK.fam", package = "GRAB")
FamData = read.table(FamFile)
IID = FamData$V2  # Individual ID
n = length(IID)
set.seed(678910)
## The below is just to demonstrate the functions of GRAB package
Pheno = data.frame(IID = IID, Cova1 = rnorm(n), Cova2 = rbinom(n, 1, 0.5),
binary = rbinom(n, 1, 0.5),
ordinal = rbinom(n, 3, 0.3),
quantitative = rnorm(n),
time = runif(n),
event = rbinom(n, 1, 0.2))
PhenoFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
write.table(Pheno, PhenoFile, row.names = F, quote = F, sep = "\t")
```
PhenoFile = "C:/Users/wenjianb/Documents/R/win-library/4.1/GRAB/extdata/simuPHENO.txt"
write.table(Pheno, PhenoFile, row.names = F, quote = F, sep = "\t")
head(Pheno)
?glm
PhenoFile = "D:/Github/GRAB/inst/extdata/simuPHENO.txt"
write.table(Pheno, PhenoFile, row.names = F, quote = F, sep = "\t")
?GRAB.Marker
?GRAB.NullModel
?save
?load
library(GRAB)
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
PhenoFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
Pheno = read.table(PhenoFile, header = T)
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
objNull = GRAB.NullModel(as.factor(ordinal) ~ Cova1 + Cova2,
data = Pheno,
subset = (event==0),
subjData = Pheno$IID,
method = "POLMM",
traitType = "ordinal",
GenoFile = GenoFile,
SparseGRMFile = SparseGRMFile)
objNull$tau
save(objNull, file="D:/Github/GRAB/inst/results/objNull.RData")
35*50
### Step 2: Perform a genome-wide analysis for marker-level and region-level
```{r}
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNull)
### Step 2: Perform a genome-wide analysis for marker-level and region-level
```{r}
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
objNullFile
?GRAB.makePlink
?GRAB.NullModel
library(GRAB)
?GRAB.Marker
?GRAB.Region
?GRAB.Marker
?GRAB.Region
?GRAB.Marker
library(GRAB)
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
?GRAB.Marker
library(GRAB)
a=c(1/3)
a
a=c(1/3,1/300000)
a
Rcpp::sourceCpp("C:/Users/wenjianb/Desktop/testNaN.cpp")
Rcpp::sourceCpp("C:/Users/wenjianb/Desktop/testNaN.cpp")
Rcpp::sourceCpp("C:/Users/wenjianb/Desktop/testNaN.cpp")
Rcpp::sourceCpp("C:/Users/wenjianb/Desktop/testNaN.cpp")
Rcpp::sourceCpp("C:/Users/wenjianb/Desktop/testNaN.cpp")
Rcpp::sourceCpp("C:/Users/wenjianb/Desktop/testNaN.cpp")
Rcpp::sourceCpp("C:/Users/wenjianb/Desktop/testNaN.cpp")
intersect
a=c("a")
b=c("b")
intersect(a,b)
sdfsd=intersect(a,b)
for(i in sdfsd) print(i)
a=data.frame(a=1:3,b=4:6)
a
cbind.data.frame(a, d=7:9)
cbind.data.frame(a, 7:9)
library(GRAB)
?GRAB.Marker
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
library(GRAB)
?GRAB.Marker
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
## make sure the output file does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
data.table::fread("C:/Users/wenjianb/Documents/R/win-library/4.1/GRAB/results/simuOUTPUT.txt")
library(GRAB)
?GRAB.Marker
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
cat("sdfs","sfsd")
library(GRAB)
?GRAB.Marker
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
data.table::fread(OutputFile)
a1=data.frame()
a2=1:10
cbind.data.frame(a1, a2)
a = list(a1=1:10, a2=2:11)
a
a = list(a1=1:10, a2=2:11, a3=3:12)
a
a[[c("a1","a2")]]
a[[c("a1")]]
a[[c("a1","a2")]]
a[[c("a2")]]
as.data.frame(a)
as.data.frame(a[c("a1","a2")])
as.data.frame(a[c("a1")])
library(GRAB)
?GRAB.Marker
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
data.table::fread(OutputFile)
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta","zScore")))
data.table::fread(OutputFile)
library(GRAB)
?GRAB.Marker
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
data.table::fread(OutputFile)
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore")))
data.table::fread(OutputFile)
?GRAB.Marker
?GRAB.Marker
574 / 0.38317757
671 / 0.45522388
671 / 0.45522388 / (1-0.05633803)
objNull$N
FamFile = system.file("extdata", "simuPLINK.fam", package = "GRAB")
FamData = read.table(FamFile)
IID = FamData$V2  # Individual ID
n = length(IID)
set.seed(678910)
## The below is just to demonstrate the functions of GRAB package
Pheno = data.frame(IID = IID, Cova1 = rnorm(n), Cova2 = rbinom(n, 1, 0.5),
binary = rbinom(n, 1, 0.5),
ordinal = rbinom(n, 3, 0.3),
quantitative = rnorm(n),
time = runif(n),
event = rbinom(n, 1, 0.2))
dim(Pheno)
objNull$yVec
table(objNull$yVec)
names(objNull)
objNull$time
?sessionInfo
?Call
?match.call
length(objNull$yVec)
length(objNull$subjData)
yVec=rnorm(100)
plot(yVec, rank(yVec))
plot(yVec, rank(yVec)/length(yVec))
plot(yVec, floor(rank(yVec) / length(yVec) * 10))
plot(yVec, floor((rank(yVec)-1) / length(yVec) * 10))
?rank
?rank
rank(rep(1,10))
rank(rep(1,10), ties.method = "last")
rank(rep(1,10), ties.method = "max")
?GRAB.Marker
yVec=rnorm(20)
floor((rank(yVec, ties.method = "max")-1) / length(yVec) * 10)
table(floor((rank(yVec, ties.method = "max")-1) / length(yVec) * 10))
order(yVec)
yVec = rbinom(20, 1, 0.3)
yVec
factor(yVec)
as.numeric(factor(yVec))
as.factor(yVec)
as.numeric(as.factor(yVec))
as.numeric(as.factor(yVec))-1
yVec
2.0 _= 2
2.0 != 2
Rcpp::sourceCpp("src/testMat.cpp")
Rcpp::sourceCpp("src/testMat.cpp")
getwd()
Rcpp::sourceCpp("C:/Users/wenjianb/Desktop/testMat.cpp")
OutList=list(a1=1:10,a2=2:11,a3=matrix(rnorm(20,10,2)))
OutList
OutList=list(a1=1:10,a2=2:11,a3=matrix(rnorm(20),10,2))
OutList
as.data.frame(OutList[c("a1","a2"."a3")])
as.data.frame(OutList[c("a1","a2","a3")])
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
library(POLMM)
library(GRAB)
library(GRAB)
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore")))
data.table::fread(OutputFile)
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore")))
data.table::fread(OutputFile)
OutputFile
pause(1)
?rest
Sys.sleep(1)
library(GRAB)
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore","AltCountsInGroup","AltFreqInGroup")))
data.table::fread(OutputFile)
library(GRAB)
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore","AltCountsInGroup","AltFreqInGroup")))
data.table::fread(OutputFile)
system.file("results", package = "GRAB")
library(GRAB)
?GRAB.Marker
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuOUTPUT.txt")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore","AltCountsInGroup","AltFreqInGroup")))
data.table::fread(OutputFile)
library(GRAB)
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuOUTPUT.txt")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore","AltCountsInGroup","AltFreqInGroup")))
data.table::fread(OutputFile)
library(GRAB)
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuOUTPUT.txt")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore","AltCountsInGroup","AltFreqInGroup")))
data.table::fread(OutputFile)
library(GRAB)
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuOUTPUT.txt")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore","AltCountsInGroup","AltFreqInGroup")))
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuOUTPUT.txt")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
library(GRAB)
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuOUTPUT.txt")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore","AltCountsInGroup","AltFreqInGroup")))
library(GRAB)
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuOUTPUT.txt")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore","AltCountsInGroup","AltFreqInGroup")))
data.table::fread(OutputFile)
library(GRAB)
?GRAB.Marker
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuOUTPUT.txt")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
data.table::fread(OutputFile)
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore","nSamplesInGroup","AltCountsInGroup","AltFreqInGroup")))
data.table::fread(OutputFile)
?group
?group
