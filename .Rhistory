# data0 = data.table::data.table(objPlink = objPlink, objBgen = objBgen) %>% mutate(index = 1:length(objBgen))
data0 = data.table::data.table(objBgen1 = objBgen1, objBgen = objBgen, objBgen2 = objBgen2) %>% mutate(index = 1:length(objBgen))
data0 %>% group_by(objBgen) %>% count()
data0 %>% group_by(objBgen2) %>% count()
Rcpp::sourceCpp("C:/Users/wenjianb/Dropbox/EmpSPA/Rcpp/test_fseek_2.cpp")
Rcpp::sourceCpp("C:/Users/wenjianb/Dropbox/EmpSPA/Rcpp/test_fseek_2.cpp")
Rcpp::sourceCpp("C:/Users/wenjianb/Dropbox/EmpSPA/Rcpp/test_fseek_seekg.cpp")
Rcpp::sourceCpp("C:/Users/wenjianb/Dropbox/EmpSPA/Rcpp/test_fseek_seekg.cpp")
length(objseekg)
setFile(GenoFile, N0)
objseekg = test_seekg(gIndex)
data0 = data.table::data.table(objseekg = objseekg) %>% mutate(index = 1:length(objseekg))
data0 %>% group_by(objseekg) %>% count()
gIndex = 85899 + 60400
setFile(GenoFile, N0)
objseekg = test_seekg(gIndex)
data0 = data.table::data.table(objseekg = objseekg) %>% mutate(index = 1:length(objseekg))
data0 %>% group_by(objseekg) %>% count()
gIndex = 85899 + 6
setFile(GenoFile, N0)
objseekg = test_seekg(gIndex)
data0 = data.table::data.table(objseekg = objseekg) %>% mutate(index = 1:length(objseekg))
data0 %>% group_by(objseekg) %>% count()
gIndex = 6
setFile(GenoFile, N0)
objseekg = test_seekg(gIndex)
data0 = data.table::data.table(objseekg = objseekg) %>% mutate(index = 1:length(objseekg))
data0 %>% group_by(objseekg) %>% count()
gIndex = 1
setFile(GenoFile, N0)
objseekg = test_seekg(gIndex)
data0 = data.table::data.table(objseekg = objseekg) %>% mutate(index = 1:length(objseekg))
data0 %>% group_by(objseekg) %>% count()
gIndex = 0
setFile(GenoFile, N0)
objseekg = test_seekg(gIndex)
data0 = data.table::data.table(objseekg = objseekg) %>% mutate(index = 1:length(objseekg))
data0 %>% group_by(objseekg) %>% count()
gIndex = 0
setFile(GenoFile, N0)
objseekg = test_seekg(gIndex)
data0 = data.table::data.table(objseekg = objseekg) %>% mutate(index = 1:length(objseekg))
data0 %>% group_by(objseekg) %>% count()
Rcpp::sourceCpp("C:/Users/wenjianb/Dropbox/EmpSPA/Rcpp/test_fseek_seekg.cpp")
data0 %>% filter(objseekg != objseekg1) %>% group_by(objseekg) %>% count()
gIndex = 85899
setFile(GenoFile, N0)
objseekg = test_seekg(gIndex)
objseekg1 = test_seekg1(gIndex)
data0 = data.table::data.table(objseekg = objseekg, objseekg1 = objseekg1) %>% mutate(index = 1:length(objseekg))
data0 %>% group_by(objseekg) %>% count()
data0 %>% filter(objseekg != objseekg1) %>% group_by(objseekg) %>% count()
gIndex = 85899 + 1
setFile(GenoFile, N0)
objseekg = test_seekg(gIndex)
objseekg1 = test_seekg1(gIndex)
data0 = data.table::data.table(objseekg = objseekg, objseekg1 = objseekg1) %>% mutate(index = 1:length(objseekg))
data0 %>% group_by(objseekg) %>% count()
data0 %>% filter(objseekg != objseekg1) %>% group_by(objseekg) %>% count()
gIndex = 85899 + 10
setFile(GenoFile, N0)
objseekg = test_seekg(gIndex)
objseekg1 = test_seekg1(gIndex)
data0 = data.table::data.table(objseekg = objseekg, objseekg1 = objseekg1) %>% mutate(index = 1:length(objseekg))
data0 %>% group_by(objseekg) %>% count()
data0 %>% filter(objseekg != objseekg1) %>% group_by(objseekg) %>% count()
gIndex = 0
setFile(GenoFile, N0)
objseekg = test_seekg(gIndex)
objseekg1 = test_seekg1(gIndex)
data0 = data.table::data.table(objseekg = objseekg, objseekg1 = objseekg1) %>% mutate(index = 1:length(objseekg))
data0 %>% group_by(objseekg) %>% count()
data0 %>% filter(objseekg != objseekg1) %>% group_by(objseekg) %>% count()
Rcpp::sourceCpp("C:/Users/wenjianb/Dropbox/EmpSPA/Rcpp/test_fseek.cpp")
gIndex = 33
# gIndex = 85899 - 300
# test_fseek(GenoFile, gIndex, N0)
objPlink = test_fseek(gIndex, TRUE, 0)
objBgen = test_fseek_bgen(gIndex)
data0 = data.table::data.table(objPlink = objPlink, objBgen = objBgen) %>% mutate(index = 1:length(objBgen))
# data0 %>% filter(objPlink != objBgen) %>% head()
# data0 %>% filter(objPlink != objBgen) %>% tail()
data0 %>% group_by(objPlink) %>% count()
data0 %>% group_by(objBgen) %>% count()
data0 %>% filter(objPlink != objBgen) %>% group_by(objPlink) %>% count()
data0 %>% filter(objPlink != objBgen) %>% group_by(objBgen) %>% count()
gIndex = 85899 + 300
# test_fseek(GenoFile, gIndex, N0)
objPlink = test_fseek(gIndex, TRUE, 0)
objBgen = test_fseek_bgen(gIndex)
data0 = data.table::data.table(objPlink = objPlink, objBgen = objBgen) %>% mutate(index = 1:length(objBgen))
# data0 %>% filter(objPlink != objBgen) %>% head()
# data0 %>% filter(objPlink != objBgen) %>% tail()
data0 %>% group_by(objPlink) %>% count()
data0 %>% group_by(objBgen) %>% count()
data0 %>% filter(objPlink != objBgen) %>% group_by(objPlink) %>% count()
data0 %>% filter(objPlink != objBgen) %>% group_by(objBgen) %>% count()
Sys.time()
library(GRAB)
help("GRAB.ReadGeno")
?GRAB.ReadGeno
RawFile = system.file("extdata", "simuRAW.raw", package = "GRAB")
print(RawFile)
586/4
?GRAB.ReadGeno
?list
?GRAB.ReadGeno
?data.table::fwrite
?data.table::as.data.table
?GRAB.ReadGeno
?load
?getTempFilesFullGRM
MaxMAFVec="0.05,0.01,0.005"
as.numeric(strsplit(MaxMAFVec, split = ",")[[1]])
MaxMAFVec
MaxMAFVec %>% strsplit(split = ",")
library(tidyr)
MaxMAFVec %>% strsplit(split = ",")
MaxMAFVec %>% strsplit(split = ",") %>% unlist()
MaxMAFVec %>% strsplit(split = ",") %>% unlist() %>% as.numeric()
annoVec = "lof,lof:missense,lof:missense:synonymous"
annoVec %>% strsplit(split = ",")
annoVec %>% strsplit(split = ",") %>% unlist()
annoVec = annoVec %>% strsplit(split = ",") %>% unlist()
annoVec
annoVec %>% strsplit(split = ":") %>% unlist() %>% unique()
regionList=list()
regionList[[0]]=1:2
regionList[[1]]=1:2
regionList
?stop
library(GRAB)
?GRAB.NullModel
SampleInfo = data.table::data.table(x1=1:10,x2=2:11)
SampleInfo
col="x1"
SampleInfo[[col]]
SampleInfo[col]
SampleInfo[[col]]
SampleInfo[[col]][1:2]
control = list(SampleGroupCol = "BinaryPheno")
SampleFile = system.file("extdata", "example.pheno", package = "GRAB")
control
SampleFile
SampleInfo = data.table::fread(SampleFile)
colnames(SampleInfo)[1]
subjData=SampleInfo[2:10]
SampleInfo
subjData=SampleInfo$IID[2:10]
subjData
pos = which(!subjData %in% SampleInfo$IID)
pos
control$SampleGroupCol
!is.null(control$SampleGroupCol)
SampleGroupColName = control$SampleGroupCol
SampleGroupColName
!SampleGroupColName %in% colnames(SampleInfo)
SampleGroupColName
colnames(SampleInfo)
SampleInfo
SampleInfo = data.table::fread(SampleFile, sep = "\t")
colnames(SampleInfo)
SampleFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")  # control = list(SampleGroupCol = "BinaryPheno")
control = list(SampleGroupCol = "BinaryPheno")
SampleInfo = data.table::fread(SampleFile)
!SampleGroupColName %in% colnames(SampleInfo)
posInSampleInfo = match(subjData, SampleInfo$IID)
posInSampleInfo
SampleInfo[[SampleGroupColName]]
SampleGroup = SampleInfo[[SampleGroupColName]][posInSampleInfo]
SampleGroup
SampleGroup = as.character(SampleGroup)
SampleGroup
SampleGroup = sample(10,2,replace = T)
SampleGroup
SampleGroup = sample(2,20,replace = T)
SampleGroup
as.factor(SampleGroup)
as.numeric(as.factor(SampleGroup))
control=list()
!is.null(control$SampleGroupCol)
SampleLabel = sample(letters[1:3], 20, replace = T)
SampleLabel
as.factor(SampleLabel)
as.numeric(as.factor(SampleLabel))
level = as.numeric(as.factor(SampleLabel))
level
SampleLabelFactor = as.factor(SampleLabel)
SampleLabelFactor
level(SampleLabelFactor)
levels(SampleLabelFactor)
annoVec = "lof,lof:missense,lof:missense:synonymous"
annoVec = annoVec %>% strsplit(split = ",") %>% unlist()
allAnno = annoVec %>% strsplit(split = ":") %>% unlist() %>% unique()
annoVec
allAnno
annoVec %>% strsplit(split=":")
annoVec
?rename
a=data.table::data.table(a1=1:2,a2=2:3)
a
a %>% rename(c("b1","b2"))
a %>% rename(b1, b2)
a %>% colnames()
?colnames
library(GRAB)
?GRAB.Region
cat("aa","bb")
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
class(objNull)    # "POLMM_NULL_Model", that indicates an object from POLMM method.
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuRegionOutput.txt")
GenoFile = system.file("extdata", "simuPLINK_RV.bed", package = "GRAB")
RegionFile = system.file("extdata", "simuRegion.txt", package = "GRAB")
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
RegionFile
data.table::fread(SparseGRMFile)
data.table::fread(RegionFile)
nRegion = 100
region = rep(paste0("Region_", nRegion), 2)
region
nRegion = 100
region = rep(paste0("Region_", 1:nRegion), 2)
region
nRegion = 100
region = rep(paste0("Region_", 1:nRegion), each = 2)
region
nRegion = 100
region = rep(paste0("Region_", 1:nRegion), each = 2)
RegionInfo = cbind(region, rep(c("var","anno")))
head(RegionInfo)
matrix(paste0("SNP_",1:10000), 100, 100)
nRegion = 100
region = rep(paste0("Region_", 1:nRegion), each = 2)
SNPMat = matrix(paste0("SNP_",1:10000), 100, 100)
RegionInfo = cbind(region, rep(c("var","anno")), SNPMat)
head(RegionInfo)
dim(RegionInfo)
data.table::fwrite(RegionInfo, "D:/Github/GRAB/inst/extdata/example.GroupFile.txt",
row.names = F, col.names = F, quote = F, sep = "\t")
nRegion = 100
region = rep(paste0("Region_", 1:nRegion), each = 2)
length(region)
nRegion = 100
region = rep(paste0("Region_", 1:nRegion), each = 2)
varMat = matrix(paste0("SNP_",1:10000), 100, 100)
annoMat = matrix(sample(c("lof", "missense", "synonymous"), 10000, replace = T),
100, 100)
varMat
annoMat
varAnnoMat = matrix(NA, 200, 100)
varAnnoMat[seq(1,200,2),] = varMat
varAnnoMat[seq(2,200,2),] = annoMat
RegionInfo = cbind(region, rep(c("var","anno")), SNPMat)
dim(RegionInfo)
RegionInfo = cbind(region, rep(c("var","anno")), varAnnoMat)
dim(RegionInfo)
data.table::fwrite(RegionInfo, "D:/Github/GRAB/inst/extdata/example.GroupFile.txt",
row.names = F, col.names = F, quote = F, sep = "\t")
library(GRAB)
?GRAB.Region
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
class(objNull)    # "POLMM_NULL_Model", that indicates an object from POLMM method.
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuRegionOutput.txt")
GenoFile = system.file("extdata", "simuPLINK_RV.bed", package = "GRAB")
GroupFile = system.file("extdata", "example.GroupFile.txt", package = "GRAB")
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".markerInfo"))
file.remove(paste0(OutputFile, ".index"))
ls()
GRAB.Region(objNull = objNull,
GenoFile = GenoFile,
GenoFileIndex = NULL,
OutputFile = OutputFile,
OutputFileIndex = NULL,
GroupFile = GenoFile,
GroupFile = GroupFile)
#'
GRAB.Region(objNull = objNull,
GenoFile = GenoFile,
GenoFileIndex = NULL,
OutputFile = OutputFile,
OutputFileIndex = NULL,
GroupFile = GroupFile)
SparseGRMFile
SparseGRM = data.table::fread(SparseGRMFile)
SparseGRM
library(GRAB)
?GRAB.Region
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
class(objNull)    # "POLMM_NULL_Model", that indicates an object from POLMM method.
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuRegionOutput.txt")
GenoFile = system.file("extdata", "simuPLINK_RV.bed", package = "GRAB")
GroupFile = system.file("extdata", "example.GroupFile.txt", package = "GRAB")
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".markerInfo"))
file.remove(paste0(OutputFile, ".index"))
GRAB.Region(objNull = objNull,
GenoFile = GenoFile,
GenoFileIndex = NULL,
OutputFile = OutputFile,
OutputFileIndex = NULL,
GroupFile = GroupFile)
setRegion.POLMM
?GRAB.Region
GRAB.Region(objNull = objNull,
GenoFile = GenoFile,
GenoFileIndex = NULL,
OutputFile = OutputFile,
OutputFileIndex = NULL,
GroupFile = GroupFile,SparseGRMFile = SparseGRMFile)
library(GRAB)
?GRAB.Region
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
class(objNull)    # "POLMM_NULL_Model", that indicates an object from POLMM method.
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuRegionOutput.txt")
GenoFile = system.file("extdata", "simuPLINK_RV.bed", package = "GRAB")
GroupFile = system.file("extdata", "example.GroupFile.txt", package = "GRAB")
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".markerInfo"))
file.remove(paste0(OutputFile, ".index"))
GRAB.Region(objNull = objNull,
GenoFile = GenoFile,
GenoFileIndex = NULL,
OutputFile = OutputFile,
OutputFileIndex = NULL,
GroupFile = GroupFile,
SparseGRMFile = SparseGRMFile)
data.table::fread(OutputFile)
data.table::fread(paste0(OutputFile,".index"))
?data.table::fread
data.table::fread(paste0(OutputFile,".index"), sep="\t")
data.table::fread(paste0(OutputFile,".index"), sep="\t", header=F)
data.table::fread(paste0(OutputFile,".markerInfo"))
data.table::fread(paste0(OutputFile,".otherMarkerInfo"))
library(GRAB)
?GRAB.Region
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
class(objNull)    # "POLMM_NULL_Model", that indicates an object from POLMM method.
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuRegionOutput.txt")
GenoFile = system.file("extdata", "simuPLINK_RV.bed", package = "GRAB")
GroupFile = system.file("extdata", "example.GroupFile.txt", package = "GRAB")
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".markerInfo"))
file.remove(paste0(OutputFile, ".index"))
GRAB.Region(objNull = objNull,
GenoFile = GenoFile,
GenoFileIndex = NULL,
OutputFile = OutputFile,
OutputFileIndex = NULL,
GroupFile = GroupFile,
SparseGRMFile = SparseGRMFile)
library(GRAB)
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
class(objNull)    # "POLMM_NULL_Model", that indicates an object from POLMM method.
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuRegionOutput.txt")
GenoFile = system.file("extdata", "simuPLINK_RV.bed", package = "GRAB")
GroupFile = system.file("extdata", "example.GroupFile.txt", package = "GRAB")
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".markerInfo"))
file.remove(paste0(OutputFile, ".index"))
GRAB.Region(objNull = objNull,
GenoFile = GenoFile,
GenoFileIndex = NULL,
OutputFile = OutputFile,
OutputFileIndex = NULL,
GroupFile = GroupFile,
SparseGRMFile = SparseGRMFile)
data.table::fread(OutputFile)
data.table::fread(paste0(OutputFile,".index"), sep="\t", header=F)
data.table::fread(paste0(OutputFile,".markerInfo"))
data.table::fread(paste0(OutputFile,".otherMarkerInfo"))
objNull$subjData
head(objNull$subjData)
?GRAB.NullModel
read.table(system.file("extdata", "example.pheno", package = "GRAB"), header = T)
library(GRAB)
?GRAB.Region
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
class(objNull)    # "POLMM_NULL_Model", that indicates an object from POLMM method.
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuRegionOutput.txt")
GenoFile = system.file("extdata", "simuPLINK_RV.bed", package = "GRAB")
GroupFile = system.file("extdata", "example.GroupFile.txt", package = "GRAB")
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".markerInfo"))
file.remove(paste0(OutputFile, ".index"))
SampleFile = system.file("extdata", "example.pheno", package = "GRAB")
GRAB.Region(objNull = objNull,
GenoFile = GenoFile,
GenoFileIndex = NULL,
OutputFile = OutputFile,
OutputFileIndex = NULL,
GroupFile = GroupFile,
SparseGRMFile = SparseGRMFile,
SampleFile = SampleFile,
control = list(SampleLabelCol = "Ordinal"))
data.table::fread(SampleFile)
SampleFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
data.table::fread(SampleFile)
GRAB.Region(objNull = objNull,
GenoFile = GenoFile,
GenoFileIndex = NULL,
OutputFile = OutputFile,
OutputFileIndex = NULL,
GroupFile = GroupFile,
SparseGRMFile = SparseGRMFile,
SampleFile = SampleFile,
control = list(SampleLabelCol = "Ordinal"))
data.table::fread(SampleFile)
GRAB.Region(objNull = objNull,
GenoFile = GenoFile,
GenoFileIndex = NULL,
OutputFile = OutputFile,
OutputFileIndex = NULL,
GroupFile = GroupFile,
SparseGRMFile = SparseGRMFile,
SampleFile = SampleFile,
control = list(SampleLabelCol = "OrdinalPheno"))
data.table::fread(OutputFile)
data.table::fread(paste0(OutputFile,".markerInfo"))
data.table::fread(SampleFile)
data0 = data.table::fread(SampleFile)
data0 %>% group_by(OrdinalPheno) %>% count()
library(GRAB)
?GRAB.Region
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
class(objNull)    # "POLMM_NULL_Model", that indicates an object from POLMM method.
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuRegionOutput.txt")
GenoFile = system.file("extdata", "simuPLINK_RV.bed", package = "GRAB")
GroupFile = system.file("extdata", "example.GroupFile.txt", package = "GRAB")
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".markerInfo"))
file.remove(paste0(OutputFile, ".index"))
SampleFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
GRAB.Region(objNull = objNull,
GenoFile = GenoFile,
GenoFileIndex = NULL,
OutputFile = OutputFile,
OutputFileIndex = NULL,
GroupFile = GroupFile,
SparseGRMFile = SparseGRMFile,
SampleFile = SampleFile,
control = list(SampleLabelCol = "OrdinalPheno"))
data.table::fread(OutputFile)
data.table::fread(paste0(OutputFile,".markerInfo"))
library(GRAB)
?GRAB.Region
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
class(objNull)    # "POLMM_NULL_Model", that indicates an object from POLMM method.
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuRegionOutput.txt")
GenoFile = system.file("extdata", "simuPLINK_RV.bed", package = "GRAB")
GroupFile = system.file("extdata", "example.GroupFile.txt", package = "GRAB")
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
class(objNull)    # "POLMM_NULL_Model", that indicates an object from POLMM method.
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuRegionOutput.txt")
GenoFile = system.file("extdata", "simuPLINK_RV.bed", package = "GRAB")
GroupFile = system.file("extdata", "example.GroupFile.txt", package = "GRAB")
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
class(objNull)    # "POLMM_NULL_Model", that indicates an object from POLMM method.
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuRegionOutput.txt")
GenoFile = system.file("extdata", "simuPLINK_RV.bed", package = "GRAB")
GroupFile = system.file("extdata", "example.GroupFile.txt", package = "GRAB")
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
SampleFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
GRAB.Region(objNull = objNull,
GenoFile = GenoFile,
GenoFileIndex = NULL,
OutputFile = OutputFile,
OutputFileIndex = NULL,
GroupFile = GroupFile,
SparseGRMFile = SparseGRMFile,
SampleFile = SampleFile,
control = list(SampleLabelCol = "OrdinalPheno"))
data.table::fread(OutputFile)
data.table::fread(paste0(OutputFile,".markerInfo"))
?GRAB.Region
