?GRAB.makePlink
?GRAB.NullModel
library(GRAB)
?GRAB.Marker
?GRAB.Region
?GRAB.Marker
?GRAB.Region
?GRAB.Marker
library(GRAB)
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
?GRAB.Marker
library(GRAB)
a=c(1/3)
a
a=c(1/3,1/300000)
a
Rcpp::sourceCpp("C:/Users/wenjianb/Desktop/testNaN.cpp")
Rcpp::sourceCpp("C:/Users/wenjianb/Desktop/testNaN.cpp")
Rcpp::sourceCpp("C:/Users/wenjianb/Desktop/testNaN.cpp")
Rcpp::sourceCpp("C:/Users/wenjianb/Desktop/testNaN.cpp")
Rcpp::sourceCpp("C:/Users/wenjianb/Desktop/testNaN.cpp")
Rcpp::sourceCpp("C:/Users/wenjianb/Desktop/testNaN.cpp")
Rcpp::sourceCpp("C:/Users/wenjianb/Desktop/testNaN.cpp")
intersect
a=c("a")
b=c("b")
intersect(a,b)
sdfsd=intersect(a,b)
for(i in sdfsd) print(i)
a=data.frame(a=1:3,b=4:6)
a
cbind.data.frame(a, d=7:9)
cbind.data.frame(a, 7:9)
library(GRAB)
?GRAB.Marker
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
library(GRAB)
?GRAB.Marker
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
## make sure the output file does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
data.table::fread("C:/Users/wenjianb/Documents/R/win-library/4.1/GRAB/results/simuOUTPUT.txt")
library(GRAB)
?GRAB.Marker
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
cat("sdfs","sfsd")
library(GRAB)
?GRAB.Marker
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
data.table::fread(OutputFile)
a1=data.frame()
a2=1:10
cbind.data.frame(a1, a2)
a = list(a1=1:10, a2=2:11)
a
a = list(a1=1:10, a2=2:11, a3=3:12)
a
a[[c("a1","a2")]]
a[[c("a1")]]
a[[c("a1","a2")]]
a[[c("a2")]]
as.data.frame(a)
as.data.frame(a[c("a1","a2")])
as.data.frame(a[c("a1")])
library(GRAB)
?GRAB.Marker
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
data.table::fread(OutputFile)
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta","zScore")))
data.table::fread(OutputFile)
library(GRAB)
?GRAB.Marker
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
data.table::fread(OutputFile)
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore")))
data.table::fread(OutputFile)
?GRAB.Marker
?GRAB.Marker
574 / 0.38317757
671 / 0.45522388
671 / 0.45522388 / (1-0.05633803)
objNull$N
FamFile = system.file("extdata", "simuPLINK.fam", package = "GRAB")
FamData = read.table(FamFile)
IID = FamData$V2  # Individual ID
n = length(IID)
set.seed(678910)
## The below is just to demonstrate the functions of GRAB package
Pheno = data.frame(IID = IID, Cova1 = rnorm(n), Cova2 = rbinom(n, 1, 0.5),
binary = rbinom(n, 1, 0.5),
ordinal = rbinom(n, 3, 0.3),
quantitative = rnorm(n),
time = runif(n),
event = rbinom(n, 1, 0.2))
dim(Pheno)
objNull$yVec
table(objNull$yVec)
names(objNull)
objNull$time
?sessionInfo
?Call
?match.call
length(objNull$yVec)
length(objNull$subjData)
yVec=rnorm(100)
plot(yVec, rank(yVec))
plot(yVec, rank(yVec)/length(yVec))
plot(yVec, floor(rank(yVec) / length(yVec) * 10))
plot(yVec, floor((rank(yVec)-1) / length(yVec) * 10))
?rank
?rank
rank(rep(1,10))
rank(rep(1,10), ties.method = "last")
rank(rep(1,10), ties.method = "max")
?GRAB.Marker
yVec=rnorm(20)
floor((rank(yVec, ties.method = "max")-1) / length(yVec) * 10)
table(floor((rank(yVec, ties.method = "max")-1) / length(yVec) * 10))
order(yVec)
yVec = rbinom(20, 1, 0.3)
yVec
factor(yVec)
as.numeric(factor(yVec))
as.factor(yVec)
as.numeric(as.factor(yVec))
as.numeric(as.factor(yVec))-1
yVec
2.0 _= 2
2.0 != 2
Rcpp::sourceCpp("src/testMat.cpp")
Rcpp::sourceCpp("src/testMat.cpp")
getwd()
Rcpp::sourceCpp("C:/Users/wenjianb/Desktop/testMat.cpp")
OutList=list(a1=1:10,a2=2:11,a3=matrix(rnorm(20,10,2)))
OutList
OutList=list(a1=1:10,a2=2:11,a3=matrix(rnorm(20),10,2))
OutList
as.data.frame(OutList[c("a1","a2"."a3")])
as.data.frame(OutList[c("a1","a2","a3")])
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
library(POLMM)
library(GRAB)
library(GRAB)
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore")))
data.table::fread(OutputFile)
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore")))
data.table::fread(OutputFile)
OutputFile
pause(1)
?rest
Sys.sleep(1)
library(GRAB)
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore","AltCountsInGroup","AltFreqInGroup")))
data.table::fread(OutputFile)
library(GRAB)
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputFile = system.file("results", "simuOUTPUT.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore","AltCountsInGroup","AltFreqInGroup")))
data.table::fread(OutputFile)
system.file("results", package = "GRAB")
library(GRAB)
?GRAB.Marker
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuOUTPUT.txt")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore","AltCountsInGroup","AltFreqInGroup")))
data.table::fread(OutputFile)
library(GRAB)
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuOUTPUT.txt")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore","AltCountsInGroup","AltFreqInGroup")))
data.table::fread(OutputFile)
library(GRAB)
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuOUTPUT.txt")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore","AltCountsInGroup","AltFreqInGroup")))
data.table::fread(OutputFile)
library(GRAB)
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuOUTPUT.txt")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore","AltCountsInGroup","AltFreqInGroup")))
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuOUTPUT.txt")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
library(GRAB)
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuOUTPUT.txt")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore","AltCountsInGroup","AltFreqInGroup")))
library(GRAB)
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuOUTPUT.txt")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore","AltCountsInGroup","AltFreqInGroup")))
data.table::fread(OutputFile)
library(GRAB)
?GRAB.Marker
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuOUTPUT.txt")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
data.table::fread(OutputFile)
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore","nSamplesInGroup","AltCountsInGroup","AltFreqInGroup")))
data.table::fread(OutputFile)
?group
?group
library(GRAB)
?GRAB.Marker
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuOUTPUT.txt")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile)
data.table::fread(OutputFile)
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".index"))
GRAB.Marker(objNull,
GenoFile = GenoFile,
OutputFile = OutputFile,
control = list(outputColumns = c("beta", "seBeta", "zScore","nSamplesInGroup","AltCountsInGroup","AltFreqInGroup")))
data.table::fread(OutputFile)
c(224               363               149                13)
sum(c(224, 363, 149, 13))
?GRAB.NullModel
?GRAB.Marker
?GRAB.Marker
?GRAB.Region
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
class(objNull)
?GRAB.Region
getwd()
devtools::build_manual()
library(devtools)
build_manual()
?build_manual
build_manual(GRAB)
build_manual("GRAB")
build_manual()
build_manual()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::build_manual()
devtools::build_manual()
library(GRAB)
library(GRAB)
devtools::build_manual()
?devtools
devtools::build_manual
as.package(".")
pkg = devtools::as.package(".")
pku
pkg
devtools::build()
devtools::build(manual = T)
Sys.getenv("PATH")
Sys.getenv("PATH")
devtools::build(manual = T)
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"C:\Users\wenjianb\AppData\Local\Programs\MiKTeX\miktex\bin\x64",sep=";"))
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"C:/Users/wenjianb/AppData/Local/Programs/MiKTeX/miktex/bin/x64",sep=";"))
Sys.getenv("PATH")
devtools::build(manual = T)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
Sys.getenv("PATH")
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"C:\\Users\\wenjianb\\AppData\\Local\\Programs\\MiKTeX\\miktex\\bin\\x64",sep=";"))
devtools::build_manual()
devtools::build(manual = TRUE)
?devtools::build
devtools::build(manual = TRUE)
devtools::build_manual()
devtools::build_manual
?callr::rcmd
pkg="."
path=NULL
pkg <- as.package(pkg)
path <- path %||% path_dir(pkg$path)
name <- paste0(pkg$package, "_", pkg$version, ".pdf",
collapse = " ")
library(devtools)
pkg <- as.package(pkg)
path <- path %||% path_dir(pkg$path)
name <- paste0(pkg$package, "_", pkg$version, ".pdf",
collapse = " ")
path = path_dir(pkg$path)
?path_dir
library(fs)
path = path_dir(pkg$path)
callr::rcmd("Rd2pdf", cmdargs = c("--force",
paste0("--output=", path, "/", name), pkg$path))
msg = callr::rcmd("Rd2pdf", cmdargs = c("--force",
paste0("--output=", path, "/", name), pkg$path))
cat(msg$stderr)
library(GRAB)
msg = callr::rcmd("Rd2pdf", cmdargs = c("--force",
paste0("--output=", path, "/", name), pkg$path))
cat(msg$stderr)
Sys.getenv("PATH")
Sys.getenv("PATH")
devtools::build_manual()
devtools::build_manual
pkg="."
library(devtools)
pkg <- as.package(pkg)
path <- path_dir(pkg$path)
library(fs)
path <- path_dir(pkg$path)
msg <- callr::rcmd("Rd2pdf", cmdargs = c("--force",
paste0("--output=", path, "/", name), pkg$path))
name <- paste0(pkg$package, "_", pkg$version, ".pdf",
collapse = " ")
name
msg <- callr::rcmd("Rd2pdf", cmdargs = c("--force",
paste0("--output=", path, "/", name), pkg$path))
cat(msg$stderr)
msg
library(GRAB)
msg <- callr::rcmd("Rd2pdf", cmdargs = c("--force", "--help",
paste0("--output=", path, "/", name), pkg$path))
msg$stderr
?tools::texi2pdf
library(GRAB)
library(GRAB)
library(GRAB)
library(GRAB)
library(GRAB)
library(devtools)
build_manual()
a=build_manual()
a
?build_manual
?GRAB
??GRAB
library(GRAB)
Sys.getlocale()
??GRAB
library(GRAB)
??GRAB
?GRAB.Marker
??GRAB
?GRAB.Marker
