remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
fam.file = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.fam", package = "GRAB")
fam.data = read.table(fam.file)
set.seed(1)
N = 1000
Pheno = data.frame(ID = fam.data$V2,
event=rbinom(N,1,0.5),
time=runif(N),
Cov1=rnorm(N),
Cov2=rbinom(N,1,0.5))
# Step 1: fit a null model
obj.SPACox = GRAB.NullModel(survival::Surv(time,event) ~ Cov1 + Cov2,
data = Pheno, subjData = Pheno$ID,
method = "SPACox", traitType = "time-to-event")
# Step 2: run score test
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/SPACoxMarkers.txt")
IDsToIncludeFile = paste0(OutputDir, "/IDsToIncludeFile.txt")
write.table(c("rs1276"), IDsToIncludeFile, row.names = F, col.names = F, quote = F)
GRAB.Marker(obj.SPACox, GenoFile = GenoFile,
OutputFile = OutputFile)
# control = list(IDsToIncludeFile=IDsToIncludeFile))
Results = data.table::fread(OutputFile)
head(Results)
library(SPACox)
fam.file = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.fam", package = "GRAB")
fam.data = read.table(fam.file)
obj.null = SPACox_Null_Model(survival::Surv(time,event)~Cov1+Cov2, data=Pheno,
pIDs=Pheno$ID, gIDs=fam.data$V2)
## output is written in output.file
plink.file = gsub("-ext.fam","-ext",fam.file)
output.file = paste0(OutputDir, "/SPACoxMarkers1.txt")
SPACox.plink(obj.null, plink.file, output.file)
Results1 = data.table::fread(output.file)
plot(Results$Pval, Results1$p.value.spa)
head(Results)
head(Results1)
data.table::getDTthreads()
?data.table::getDTthreads
data.table::getDTthreads()
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
fam.file = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.fam", package = "GRAB")
fam.data = read.table(fam.file)
set.seed(1)
N = 1000
Pheno = data.frame(ID = fam.data$V2,
event=rbinom(N,1,0.5),
time=runif(N),
Cov1=rnorm(N),
Cov2=rbinom(N,1,0.5))
# Step 1: fit a null model
obj.SPACox = GRAB.NullModel(survival::Surv(time,event) ~ Cov1 + Cov2,
data = Pheno, subjData = Pheno$ID,
method = "SPACox", traitType = "time-to-event")
# Step 2: run score test
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/SPACoxMarkers.txt")
IDsToIncludeFile = paste0(OutputDir, "/IDsToIncludeFile.txt")
write.table(c("rs1276"), IDsToIncludeFile, row.names = F, col.names = F, quote = F)
GRAB.Marker(obj.SPACox, GenoFile = GenoFile,
OutputFile = OutputFile)
Results = data.table::fread(OutputFile)
head(Results)
Rcpp::sourceCpp('src/test_openmp.cpp')
a = squares(1:10000)
head(a)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
?GRAB.SPACox
set.seed(1)
N = 100
Pheno = data.frame(ID = paste0("f",1:N,"_1"),
event=rbinom(N,1,0.5),
time=runif(N),
Cov1=rnorm(N),
Cov2=rbinom(N,1,0.5))
# Step 1: fit a null model
obj.SPACox = GRAB.NullModel(survival::Surv(time,event) ~ Cov1 + Cov2,
data = Pheno, subjData = Pheno$ID,
method = "SPACox", traitType = "time-to-event")
# Step 2: run score test
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/SPACoxMarkers.txt")
GRAB.Marker(obj.SPACox, GenoFile = GenoFile,
OutputFile = OutputFile)
?GRAB.SPACox
?GRAB.POLMM
?GRAB.control
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
?GRAB.control
?GRAB.ReadGeno
?GRAB.ReadGeno
PlinkFile = system.file("extdata", "example.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PlinkFile)
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
head(GenoMat)
markerInfo
?GRAB.control
IDs = matrix(c("rs38","rs39","rs85","rs87"), ncol=1)
write.table(IDs,
"C:/Users/wenji/OneDrive/Documents/Github/GRAB/inst/extdata/IDsToInclude.txt",
row.names=F, col.names=F, quote=F)
Ranges = rbind(c(1,30,100),
c(2,30,100))
Ranges
Ranges = rbind(c(1,30,100),
c(2,30,100))
write.table(Ranges,
"C:/Users/wenji/OneDrive/Documents/Github/GRAB/inst/extdata/RangesToInclude.txt",
row.names=F, col.names=F, quote=F)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
?GRAB.control
system.file("extdata", "IDsToInclude.txt", package = "GRAB")
system.file("extdata", "RangessToInclude.txt", package = "GRAB")
system.file("extdata", "RangesToInclude.txt", package = "GRAB")
?GRAB.SPACox
?GRAB.ReadGeno
?GRAB.ReadGeno
?GRAB::GRAB.control
GRAB.control()
GRAB::GRAB.control()
library(GRAB)
?GRAB.SPACox
?GRAB.POLMM
pheno = data.table::fread("C:/Users/wenji/OneDrive/Documents/Github/GRAB/inst/extdata/POLMM_data.csv")
pheno
setwd("C:/Users/wenji/OneDrive/Documents/Github/GRAB/inst/extdata")
pheno = data.table::fread("POLMM_data.csv")
pheno = as.data.frame(pheno)
head(pheno)
pheno = pheno[,c("IID","Cova1","Cova2")]
pheno
head(pheno)
n = nrow(pheno)
pheno$Envn1 = rnorm(n)
pheno$Envn2 = rbinom(n, 1, 0.5)
head(pheno)
?GRAB.NullModel
pheno$Binary = rbinom(n, 1, 0.5)
pheno$Quantitative = rnorm(n)
pheno$Ordinal = sample(1:5, n, replace = T)
head(pheno)
pheno$time = runif(n)
pheno$event = rbinom(n, 1, 0.5)
head(pheno)
getwd()
write.table(pheno, "example.pheno", row.names = F, col.names = F, quote = F)
write.table(pheno, "example.pheno", row.names = F, quote = F)
?GRAB.SPACox
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
famData = read.table(gsub("bed","fam", GenoFile))
head(famData)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
?setDenseGRM
?getDenseGRM
?setDenseGRM
?getDenseGRM
library(GRAB)
?getDenseGRM
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
setDenseGRM(GenoFile, subjData = subjData)
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
setDenseGRM(GenoFile, subjData = subjData)
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
?getDenseGRM
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
setDenseGRM(GenoFile, subjData = subjData)
genoList = setDenseGRM(GenoFile, subjData = subjData)
genoList = setDenseGRM(GenoFile, subjData = subjData)
genoList = setDenseGRM(GenoFile, subjData = subjData)
genoList = setDenseGRM(GenoFile, subjData = subjData)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoFileIndex = NULL
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
genoList = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
memoryChunk = 2 # (GB)
minMafGRM = 0.01
maxMissingGRM = 0.1
print("test0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoFileIndex = NULL
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
genoList = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
memoryChunk = 2 # (GB)
minMafGRM = 0.01
maxMissingGRM = 0.1
print("test0")
GRAB:::setDenseGRMInCPP(memoryChunk, minMafGRM, maxMissingGRM)
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoFileIndex = NULL
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
genoList = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
memoryChunk = 2 # (GB)
minMafGRM = 0.01
maxMissingGRM = 0.1
print("test0")
sleep(1)
sleep
Sys.sleep(10)
Sys.sleep(1)
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
install.packages("devtools")
install.package("rlang")
install.packages("rlang")
install.packages("magrittr")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoFileIndex = NULL
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
genoList = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
memoryChunk = 2 # (GB)
minMafGRM = 0.01
maxMissingGRM = 0.1
print("test0")
Sys.sleep(1)
if(genoList$genoType != "PLINK")
stop("Only PLINK format is supported")
GRAB:::setDenseGRMInCPP(memoryChunk, minMafGRM, maxMissingGRM,
gsub("bed","bim", GenoFile), gsub("bed","fam", GenoFile), GenoFile,
genoList$SampleIDs,
genoList$AlleleOrder)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoFileIndex = NULL
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
genoList = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
memoryChunk = 2 # (GB)
minMafGRM = 0.01
maxMissingGRM = 0.1
print("test0")
Sys.sleep(1)
if(genoList$genoType != "PLINK")
stop("Only PLINK format is supported")
GRAB:::setDenseGRMInCPP(memoryChunk, minMafGRM, maxMissingGRM,
gsub("bed","bim", GenoFile), gsub("bed","fam", GenoFile), GenoFile,
genoList$SampleIDs,
genoList$AlleleOrder)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoFileIndex = NULL
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
genoList = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
memoryChunk = 2 # (GB)
minMafGRM = 0.01
maxMissingGRM = 0.1
print("test0")
Sys.sleep(1)
if(genoList$genoType != "PLINK")
stop("Only PLINK format is supported")
GRAB:::setDenseGRMInCPP(memoryChunk, minMafGRM, maxMissingGRM,
gsub("bed","bim", GenoFile), gsub("bed","fam", GenoFile), GenoFile,
genoList$SampleIDs,
genoList$AlleleOrder)
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoFileIndex = NULL
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
genoList = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
memoryChunk = 2 # (GB)
minMafGRM = 0.01
maxMissingGRM = 0.1
print("test0")
Sys.sleep(1)
if(genoList$genoType != "PLINK")
stop("Only PLINK format is supported")
GRAB:::setDenseGRMInCPP(memoryChunk, minMafGRM, maxMissingGRM,
gsub("bed","bim", GenoFile), gsub("bed","fam", GenoFile), GenoFile,
genoList$SampleIDs,
genoList$AlleleOrder)
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoFileIndex = NULL
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
genoList = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
memoryChunk = 2 # (GB)
minMafGRM = 0.01
maxMissingGRM = 0.1
print("test0")
Sys.sleep(1)
if(genoList$genoType != "PLINK")
stop("Only PLINK format is supported")
GRAB:::setDenseGRMInCPP(memoryChunk, minMafGRM, maxMissingGRM,
gsub("bed","bim", GenoFile), gsub("bed","fam", GenoFile), GenoFile,
genoList$SampleIDs,
genoList$AlleleOrder)
set.seed(1)
bVec = rnorm(1000)
excludeChr = "none"
grainSize = 1
GRAB:::getDenseGRMInCPP(bVec, excludeChr, grainSize)
KinbVec = GRAB:::getDenseGRMInCPP(bVec, excludeChr, grainSize)
length(KinbVec)
head(KinbVec)
GMat = GRAB.ReadGeno(GenoFile, SampleIDs = subjData)
GMat = GMat$GenoMat
dim(GMat)
?GRAB.ReadGeno
RawFile = system.file("extdata", "example.raw", package = "GRAB")
GenoMat = data.table::fread(RawFile)
head(GenoMat[,1:15])
dim(GenoMat)
class(GenoMat)
GMat = as.matrix(GMat[,7:10006])
GMat = GMat$GenoMat
GMat = as.matrix(GMat[,7:10006])
GenoMat = as.matrix(GenoMat[,7:10006])
dim(GenoMat)
GenoMat[1:10,1:10]
MAF = apply(GenoMat, 2, mean)/2
stdGenoMat = (t(GenoMat) - 2*MAF) / sqrt(2*MAF*(1-MAF))
dim(stdGenoMat)
KinMat = t(stdGenoMat) %*% stdGenoMat
dim(KinMat)
KinMat[1:10,1:10]
dim(GenoMat)
stdGenoMat = (t(GenoMat) - 2*MAF) / sqrt(2*MAF*(1-MAF) / sqrt(ncol(GenoMat)))
KinMat = t(stdGenoMat) %*% stdGenoMat
KinMat[1:10,1:10]
stdGenoMat = (t(GenoMat) - 2*MAF) / sqrt(2*MAF*(1-MAF)) / sqrt(ncol(GenoMat))
KinMat = t(stdGenoMat) %*% stdGenoMat
KinMat[1:10,1:10]
KinbVec1 = KinMat %*% bVec
plot(KinbVec, KinbVec1)
head(cbind(KinbVec, KinbVec1))
excludeChr = "none1"
KinbVec = GRAB:::getDenseGRMInCPP(bVec, excludeChr, grainSize)
excludeChr = "1"
KinbVec = GRAB:::getDenseGRMInCPP(bVec, excludeChr, grainSize)
head(KinbVec)
GenoMat = data.table::fread(RawFile)
GenoMat[1:10,1:5]
GenoMat[1:10,1:10]
?GRAB.ReadGeno
PlinkFile = system.file("extdata", "example.bed", package = "GRAB")
IDsToIncludeFile = system.file("extdata", "example.IDsToIncludeFile.txt", package = "GRAB")
GenoList = GRAB.ReadGeno(PlinkFile,
control = list(IDsToExcludeFile = IDsToIncludeFile))
GenoMat = GenoList$GenoMat
dim(GenoMat)
markerInfo = GenoList$markerInfo
dim(markerInfo)
head(markerInfo)
pos = which(markerInfo$CHROM != 1)
GenoMat = GenoMat[pos,]
GenoMat = GenoMat[,pos]
dim(GenoMat)
MAF = apply(GenoMat, 2, mean)/2
stdGenoMat = (t(GenoMat) - 2*MAF) / sqrt(2*MAF*(1-MAF)) / sqrt(ncol(GenoMat))
KinMat = t(stdGenoMat) %*% stdGenoMat
KinbVec1 = KinMat %*% bVec
plot(KinbVec, KinbVec1)
head(cbind(KinbVec, KinbVec1))
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoFileIndex = NULL
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
genoList = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
memoryChunk = 2 # (GB)
minMafGRM = 0.01
maxMissingGRM = 0.1
print("test0")
Sys.sleep(1)
if(genoList$genoType != "PLINK")
stop("Only PLINK format is supported")
GRAB:::setDenseGRMInCPP(memoryChunk, minMafGRM, maxMissingGRM,
gsub("bed","bim", GenoFile), gsub("bed","fam", GenoFile), GenoFile,
genoList$SampleIDs,
genoList$AlleleOrder)
set.seed(1)
bVec = rnorm(1000)
excludeChr = "1"
grainSize = 1
KinbVec = GRAB:::getDenseGRMInCPP(bVec, excludeChr, grainSize)
# GMat = GRAB.ReadGeno(GenoFile, SampleIDs = subjData)
# GMat = GMat$GenoMat
# GMat = as.matrix(GMat[,7:10006])
PlinkFile = system.file("extdata", "example.bed", package = "GRAB")
IDsToIncludeFile = system.file("extdata", "example.IDsToIncludeFile.txt", package = "GRAB")
GenoList = GRAB.ReadGeno(PlinkFile,
control = list(IDsToExcludeFile = IDsToIncludeFile))
GenoMat = GenoList$GenoMat
dim(GenoMat)
markerInfo = GenoList$markerInfo
pos = which(markerInfo$CHROM != 1)
GenoMat = GenoMat[,pos]
# RawFile = system.file("extdata", "example.raw", package = "GRAB")
# GenoMat = data.table::fread(RawFile)
# GenoMat[1:10,1:10]
MAF = apply(GenoMat, 2, mean)/2
stdGenoMat = (t(GenoMat) - 2*MAF) / sqrt(2*MAF*(1-MAF)) / sqrt(ncol(GenoMat))
KinMat = t(stdGenoMat) %*% stdGenoMat
KinbVec1 = KinMat %*% bVec
plot(KinbVec, KinbVec1)
head(cbind(KinbVec, KinbVec1))
remove.packages("GRAB", lib="~/R/win-library/4.0")
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoFileIndex = NULL
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
genoList = GRAB:::setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
memoryChunk = 2 # (GB)
minMafGRM = 0.01
maxMissingGRM = 0.1
print("test0")
Sys.sleep(1)
if(genoList$genoType != "PLINK")
stop("Only PLINK format is supported")
GRAB:::setDenseGRMInCPP(memoryChunk, minMafGRM, maxMissingGRM)
set.seed(1)
bVec = rnorm(1000)
excludeChr = "1"
grainSize = 1
KinbVec = GRAB:::getDenseGRMInCPP(bVec, excludeChr, grainSize)
PlinkFile = system.file("extdata", "example.bed", package = "GRAB")
IDsToIncludeFile = system.file("extdata", "example.IDsToIncludeFile.txt", package = "GRAB")
GenoList = GRAB.ReadGeno(PlinkFile,
control = list(IDsToExcludeFile = IDsToIncludeFile))
GenoMat = GenoList$GenoMat
dim(GenoMat)
markerInfo = GenoList$markerInfo
pos = which(markerInfo$CHROM != 1)
GenoMat = GenoMat[,pos]
# RawFile = system.file("extdata", "example.raw", package = "GRAB")
# GenoMat = data.table::fread(RawFile)
# GenoMat[1:10,1:10]
MAF = apply(GenoMat, 2, mean)/2
stdGenoMat = (t(GenoMat) - 2*MAF) / sqrt(2*MAF*(1-MAF)) / sqrt(ncol(GenoMat))
KinMat = t(stdGenoMat) %*% stdGenoMat
KinbVec1 = KinMat %*% bVec
plot(KinbVec, KinbVec1)
head(cbind(KinbVec, KinbVec1))
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoFileIndex = NULL
famData = read.table(gsub("bed","fam", GenoFile))
subjData = famData$V2
genoList = GRAB:::setGenoInput(GenoFile, GenoFileIndex)
dim(genoList$markerInfo)
remove.packages("GRAB", lib="~/R/win-library/4.0")
