?GRAB.SimubVec
nSub = 10
nFam = 1
FamMode = "10-members"
tau = 2
bVec = GRAB.SimubVec(nSub, nFam, FamMode, tau)
library(GRAB)
nSub = 10
nFam = 1
FamMode = "10-members"
tau = 2
bVec = GRAB.SimubVec(nSub, nFam, FamMode, tau)
source("D:/Github/GRAB/R/GRAB_Simu.R", echo=TRUE)
inputList = checkInput(nSub, nFam, FamMode)
nSubInEachFam = inputList$nSubInEachFam
nSub = inputList$nSub
nFam = inputList$nFam
FamMode = inputList$FamMode
fam.mat = inputList$fam.mat
n = nSub + nFam * nSubInEachFam
if(n == 0){
stop("Please give at least one of 'nSub' and 'nFam'.")
}
cat("Number of unrelated subjects:\t", nSub, "\n")
cat("Number of families:\t", nFam, "\n")
cat("Number of subjects in each family:\t", nSubInEachFam, "\n")
cat("Number of all subjects:\t", n, "\n")
if(FamMode == "Unrelated"){
bVec.Related = data.table::data.table()
}else{
if(FamMode == "4-members")
fam.kin.file = system.file("extdata", "example_4-members.kin.txt", package = "GRAB")
if(FamMode == "10-members")
fam.kin.file = system.file("extdata", "example_10-members.kin.txt", package = "GRAB")
if(FamMode == "20-members")
fam.kin.file = system.file("extdata", "example_20-members.kin.txt", package = "GRAB")
fam.kin = data.table::fread(fam.kin.file)
fam.kin = as.matrix(fam.kin)
n = nFam * nrow(fam.kin)
out.eigen = eigen(fam.kin)
factor = t(out.eigen$vectors) * sqrt(out.eigen$values)
kin.chol = diag(nFam) %x% factor
b.true = t(kin.chol) %*% rnorm(n) * sqrt(tau)
bVec.Related = data.table::data.table(IID = fam.mat$IID,
bVec = b.true)
}
if(nSub != 0){
bVec.Unrelated = data.table::data.table(IID = paste0("Subj-",1:nSub),
bVec = rnorm(nSub, sd = tau))
}
bVec.Related
bVec.Unrelated
b.true
data.table::data.table(IID = fam.mat$IID,
bVec = b.true)
b.true
bVec.Related = data.table::data.table(IID = fam.mat$IID,
bVec = unlist(b.true))
bVec.Related
bVec.Related = data.table::data.table(IID = fam.mat$IID,
bVe = unlist(b.true))
bVec.Related
unlist(b.true)
bVec.Related = data.table::data.table(IID = fam.mat$IID,
bVec = as.numeric(b.true))
bVec.Related
nSub = 10
nFam = 1
FamMode = "10-members"
tau = 2
bVec = GRAB.SimubVec(nSub, nFam, FamMode, tau)
library(GRAB)
nSub = 10
nFam = 1
FamMode = "10-members"
tau = 2
bVec = GRAB.SimubVec(nSub, nFam, FamMode, tau)
source("D:/Github/GRAB/R/GRAB_Simu.R", echo=TRUE)
inputList = checkInput(nSub, nFam, FamMode)
nSubInEachFam = inputList$nSubInEachFam
nSub = inputList$nSub
nFam = inputList$nFam
FamMode = inputList$FamMode
fam.mat = inputList$fam.mat
n = nSub + nFam * nSubInEachFam
if(n == 0){
stop("Please give at least one of 'nSub' and 'nFam'.")
}
cat("Number of unrelated subjects:\t", nSub, "\n")
cat("Number of families:\t", nFam, "\n")
cat("Number of subjects in each family:\t", nSubInEachFam, "\n")
cat("Number of all subjects:\t", n, "\n")
if(FamMode == "Unrelated"){
bVec.Related = data.table::data.table()
}else{
if(FamMode == "4-members")
fam.kin.file = system.file("extdata", "example_4-members.kin.txt", package = "GRAB")
if(FamMode == "10-members")
fam.kin.file = system.file("extdata", "example_10-members.kin.txt", package = "GRAB")
if(FamMode == "20-members")
fam.kin.file = system.file("extdata", "example_20-members.kin.txt", package = "GRAB")
fam.kin = data.table::fread(fam.kin.file)
fam.kin = as.matrix(fam.kin)
n = nFam * nrow(fam.kin)
out.eigen = eigen(fam.kin)
factor = t(out.eigen$vectors) * sqrt(out.eigen$values)
kin.chol = diag(nFam) %x% factor
b.true = t(kin.chol) %*% rnorm(n) * sqrt(tau)
bVec.Related = data.table::data.table(IID = fam.mat$IID,
bVec = as.numeric(b.true))
}
if(nSub != 0){
bVec.Unrelated = data.table::data.table(IID = paste0("Subj-",1:nSub),
bVec = rnorm(nSub, sd = tau))
}
bVec = rbind(bVec.Related, bVec.Unrelated)
bVec
library(GRAB)
rm(list=ls())
?GRAB.SimuGMatFromGenoFile
library(GRAB)
```
nFam = 50
nSub = 500
FamMode = "10-members"
PLINKFile = system.file("extdata", "example_n1000_m240.bed", package = "GRAB")
IDsToIncludeFile = system.file("extdata", "example.IDsToIncludeFile.txt", package = "GRAB")
RangesToIncludeFile = system.file("extdata", "example.RangesToIncludeFile.txt", package = "GRAB")
data.table::fread(IDsToIncludeFile)
data.table::fread(IDsToIncludeFile, header = F)
BimFile = system.file("extdata", "example_n1000_m240.bim", package = "GRAB")
data.table::fread(BimFile)
BimData = data.table::fread(BimFile)
sample(BimData$V2, 200)
write.table(sample(BimData$V2, 200), system.file("extdata", "example.IDsToIncludeFile.txt", package = "GRAB"), col.names = F, row.names = F, quote = F)
system.file("extdata", "example.IDsToIncludeFile.txt"
)
system.file("extdata", "example.IDsToIncludeFile.txt", package = "GRAB")
write.table(sample(BimData$V2, 200), "C:/Users/wenjianb/Documents/R/win-library/4.1/GRAB/extdata/example_n1000_m240.IDsToInclude", col.names = F, row.names = F, quote = F)
library(GRAB)
library(GRAB)
nFam = 50
nSub = 500
FamMode = "10-members"
# PLINK data format
PLINKFile = system.file("extdata", "example_n1000_m240.bed", package = "GRAB")
IDsToIncludeFile = system.file("extdata", "example_n1000_m240.IDsToInclude", package = "GRAB")
GenoList = GRAB.SimuGMatFromGenoFile(nFam, nSub, FamMode, PLINKFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
PLINKFile
system.file("extdata", "example_n1000_m240.bed", package = "GRAB")
library(GRAB)
?GRAB.SimuGMat
?GRAB.SimuGMatFromGenoFile
nFam = 50
nSub = 500
FamMode = "10-members"
# PLINK data format
PLINKFile = system.file("extdata", "example_n1000_m240.bed", package = "GRAB")
IDsToIncludeFile = system.file("extdata", "example_n1000_m240.IDsToInclude", package = "GRAB")
PLINKFile
library(GRAB)
nFam = 50
nSub = 500
FamMode = "10-members"
# PLINK data format
PLINKFile = system.file("extdata", "example_n1000_m240.bed", package = "GRAB")
IDsToIncludeFile = system.file("extdata", "example_n1000_m240.IDsToInclude", package = "GRAB")
PLINKFile
GenoList = GRAB.SimuGMatFromGenoFile(nFam, nSub, FamMode, PLINKFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
GenoList$GenoMat
GenoList$GenoMat[995:1000,1:10]
GenoList$GenoMat[1:10,1:10]
GenoList$GenoMat[1:20,1:10]
table(GenoList$GenoMat[,10])
library(GRAB)
library(GRAB)
nFam = 50
nSub = 500
FamMode = "10-members"
# PLINK data format
PLINKFile = system.file("extdata", "example_n1000_m236.bed", package = "GRAB")
IDsToIncludeFile = system.file("extdata", "example_n1000_m236.IDsToInclude", package = "GRAB")
GenoList = GRAB.SimuGMatFromGenoFile(nFam, nSub, FamMode, PLINKFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
GenoList$GenoMat
apply(GenoList$GenoMat, 2, mean)
BGENFile = system.file("extdata", "example_n1000_m240.bgen", package = "GRAB")
IDsToIncludeFile = system.file("extdata", "example_n1000_m240.IDsToInclude", package = "GRAB")
GenoList = GRAB.SimuGMatFromGenoFile(nFam, nSub, FamMode, BGENFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
library(GRAB)
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
PLINKFile
bimFile = data.table::fread("C:/Users/wenjianb/Documents/R/win-library/4.1/GRAB/extdata/simuPLINK.bim")
bimFile
bimFile$V2[1:10]
write.table(bimFile$V2[1:10], "C:/Users/wenjianb/Documents/R/win-library/4.1/GRAB/extdata/simuPLINK.IDsToInclude", row.names = F, col.names = F, quote = F)
library(GRAB)
IDsToIncludeFile = system.file("extdata", "simuGENO.IDsToInclude", package = "GRAB")
## PLINK files
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
head(GenoMat[,1:6])
head(markerInfo)
BGENFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
library(GRAB)
IDsToIncludeFile = system.file("extdata", "simuGENO.IDsToInclude", package = "GRAB")
BGENFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
install.packages("cli")
install.packages("cli")
dbplyrinstall.packages("tidyverse")
install.packages("tidyverse")
IDsToIncludeFile = system.file("extdata", "simuGENO.IDsToInclude", package = "GRAB")
## PLINK files
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
head(GenoMat[,1:6])
head(markerInfo)
## BGEN files (Note the different REF/ALT order for BGEN and PLINK formats)
BGENFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
head(GenoMat[,1:6])
head(markerInfo)
library(GRAB)
IDsToIncludeFile = system.file("extdata", "simuGENO.IDsToInclude", package = "GRAB")
## PLINK files
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
head(GenoMat[,1:6])
head(markerInfo)
BGENFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
library(GRAB)
library(GRAB)
IDsToIncludeFile = system.file("extdata", "simuGENO.IDsToInclude", package = "GRAB")
## PLINK files
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
head(GenoMat[,1:6])
head(markerInfo)
## BGEN files (Note the different REF/ALT order for BGEN and PLINK formats)
BGENFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
install.packages("dbplyr")
install.packages("dbplyr")
install.packages("dbplyr")
library(dbplyr)
intall.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
IDsToIncludeFile = system.file("extdata", "simuGENO.IDsToInclude", package = "GRAB")
## PLINK files
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
head(GenoMat[,1:6])
head(markerInfo)
## BGEN files (Note the different REF/ALT order for BGEN and PLINK formats)
BGENFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
head(GenoMat[,1:6])
head(markerInfo)
library(GRAB)
IDsToIncludeFile = system.file("extdata", "simuGENO.IDsToInclude", package = "GRAB")
## PLINK files
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
head(GenoMat[,1:6])
head(markerInfo)
## BGEN files (Note the different REF/ALT order for BGEN and PLINK formats)
BGENFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
sessionInfo()
library(dbplyr)
library(cli)
sessionInfo()
remove.packages("cli", lib="~/R/win-library/4.1")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
library(cli)
sessionInfo()
IDsToIncludeFile = system.file("extdata", "simuGENO.IDsToInclude", package = "GRAB")
## PLINK files
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
head(GenoMat[,1:6])
head(markerInfo)
## BGEN files (Note the different REF/ALT order for BGEN and PLINK formats)
BGENFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
head(GenoMat[,1:6])
head(markerInfo)
library(GRAB)
IDsToIncludeFile = system.file("extdata", "simuGENO.IDsToInclude", package = "GRAB")
## PLINK files
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
head(GenoMat[,1:6])
head(markerInfo)
## BGEN files (Note the different REF/ALT order for BGEN and PLINK formats)
BGENFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile,
control = list(IDsToIncludeFile = IDsToIncludeFile))
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
head(GenoMat[,1:6])
head(markerInfo)
library(GRAB)
PhenoFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
PhenoData = data.table::fread(PhenoFile, header = T)
PhenoData = PhenoData %>% mutate(OrdinalPheno = factor(OrdinalPheno,
levels = c(0, 1, 2)))
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(factor(OrdinalPheno) ~ AGE + GENDER,
data = PhenoData,
subjData = PhenoData$IID,
method = "POLMM",
traitType = "ordinal",
GenoFile = GenoFile,
control = list(showInfo = FALSE,
LOCO = FALSE,
tolTau = 0.2,
tolBeta = 0.1))
SparseGRMFile =  system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(formula = OrdinalPheno ~ AGE + GENDER,
data = PhenoData,
subjData = PhenoData$IID,
method = "POLMM",
traitType = "ordinal",
GenoFile = GenoFile,
SparseGRMFile =  SparseGRMFile,
control = list(showInfo = FALSE,
LOCO = FALSE,
tolTau = 0.2,
tolBeta = 0.1))
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/POLMMMarkers.txt")
GRAB.Marker(obj.POLMM, GenoFile = GenoFile,
OutputFile = OutputFile)
results = data.table::fread("C:/Users/wenjianb/Documents/R/win-library/4.1/GRAB/results/POLMMMarkers.txt")
results
hist(results$Pvalue)
?GRAB.Region
?GRAB.Region
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
load(objNullFile)
class(objNull)    # "POLMM_NULL_Model", that indicates an object from POLMM method.
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuRegionOutput.txt")
GenoFile = system.file("extdata", "simuPLINK_RV.bed", package = "GRAB")
GroupFile = system.file("extdata", "example.GroupFile.txt", package = "GRAB")
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".markerInfo"))
file.remove(paste0(OutputFile, ".index"))
GRAB.Region(objNull = objNull,
GenoFile = GenoFile,
GenoFileIndex = NULL,
OutputFile = OutputFile,
OutputFileIndex = NULL,
GroupFile = GroupFile,
SparseGRMFile = SparseGRMFile,
MaxMAFVec = "0.01,0.005")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuRegionOutput.txt")
GenoFile = system.file("extdata", "simuPLINK_RV.bed", package = "GRAB")
GroupFile = system.file("extdata", "example.GroupFile.txt", package = "GRAB")
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
GroupFile
data.table::fread(GroupFile)
data.table::fread(paste0(OutputFile,".markerInfo"))
GRAB.Region(objNull = objNull,
GenoFile = GenoFile,
GenoFileIndex = NULL,
OutputFile = OutputFile,
OutputFileIndex = NULL,
GroupFile = GroupFile,
SparseGRMFile = SparseGRMFile,
MaxMAFVec = "0.01,0.005")
GenoFile
bimData = data.table::fread("C:/Users/wenjianb/Documents/R/win-library/4.1/GRAB/extdata/simuPLINK_RV.bim")
bimData
data.table::fread(GroupFile)
data.table::fread(GroupFile, header = F)
sample(c("synonymous", "lof", "missense"), 100, replace = T)
groupData = rbind(c("Group_1", "var", bimData$V2[1:100]),
c("Group_1", "anno", sample(c("synonymous", "lof", "missense"), 100, replace = T),
c("Group_2", "var", bimData$V2[101:200]),
c("Group_2", "anno", sample(c("synonymous", "lof", "missense"), 100, replace = T))
groupData
groupData
groupData = rbind(c("Group_1", "var", bimData$V2[1:100]),
c("Group_1", "anno", sample(c("synonymous", "lof", "missense"), 100, replace = T)),
c("Group_2", "var", bimData$V2[101:200]),
c("Group_2", "anno", sample(c("synonymous", "lof", "missense"), 100, replace = T)))
groupData
getwd()
write.table(groupData, "simuPLINK_RV.group", row.names = F, col.names = F, quote = F)
library(GRAB)
PhenoFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
PhenoData = data.table::fread(PhenoFile, header = T)
PhenoData = PhenoData %>% mutate(OrdinalPheno = factor(OrdinalPheno,
levels = c(0, 1, 2)))
library(GRAB)
library(GRAB)
PhenoFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
PhenoData = data.table::fread(PhenoFile, header = T)
PhenoData = PhenoData %>% mutate(OrdinalPheno = factor(OrdinalPheno,
levels = c(0, 1, 2)))
SparseGRMFile =  system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
obj.POLMM = GRAB.NullModel(formula = OrdinalPheno ~ AGE + GENDER,
data = PhenoData,
subjData = PhenoData$IID,
method = "POLMM",
traitType = "ordinal",
GenoFile = GenoFile,
SparseGRMFile =  SparseGRMFile,
control = list(showInfo = FALSE,
LOCO = FALSE,
tolTau = 0.2,
tolBeta = 0.1))
GenoFile = system.file("extdata", "simuPLINK_RV.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/simuRegionOutput.txt")
GroupFile = system.file("extdata", "simuPLINK_RV.group", package = "GRAB")
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
## make sure the output files does not exist at first
file.remove(OutputFile)
file.remove(paste0(OutputFile, ".markerInfo"))
file.remove(paste0(OutputFile, ".index"))
GRAB.Region(objNull = objNull,
GenoFile = GenoFile,
GenoFileIndex = NULL,
OutputFile = OutputFile,
OutputFileIndex = NULL,
GroupFile = GroupFile,
SparseGRMFile = SparseGRMFile,
MaxMAFVec = "0.01,0.005")
PhenoData
data.table::fread(PhenoFile, header = T)
?GRAB.Region
GRAB.Region(objNull = obj.POLMM,
GenoFile = GenoFile,
GenoFileIndex = NULL,
OutputFile = OutputFile,
OutputFileIndex = NULL,
GroupFile = GroupFile,
SparseGRMFile = SparseGRMFile,
MaxMAFVec = "0.01,0.005")
bimFile = system.file("extdata", "simuPLINK_RV.bim", package = "GRAB")
bimData = data.table::fread(bimFile)
groupData = rbind(c("Group_1", "var", bimData$V2[1:100]),
c("Group_1", "anno", sample(c("synonymous", "lof", "missense"), 100, replace = T)),
c("Group_2", "var", bimData$V2[101:200]),
c("Group_2", "anno", sample(c("synonymous", "lof", "missense"), 100, replace = T)))
write.table(groupData, "simuPLINK_RV.group", row.names = F, col.names = F, quote = F, sep="\t")
getwd()
groupData
