covdata$Tar[(n0 + 1):nrow(covdata)] = NA
}
obj.SARPA = SARPA.NullModel(PhenoFile = PhenoFile,
ResidMatFile = ResidMatFile,
SparseGRMFile = SparseGRMFile,
PairwiseIBDFile = PairwiseIBDFile,
control = list(CovarColList = c('X1', 'X2')))
GRAB.Marker(objNull = obj.SARPA,
GenoFile = Com.genofile,
OutputFile = Com.outputfile)
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
MAF = mean(t_Gvec) / 2
MAF
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
result <- fit_full_wrapper(t_Gvec = t_Gvec,
t_Tarvec = objNull$Tarvec,
t_Riskvec = objNull$Riskvec,
t_designMat = objNull$designMat,
t_GRM = objNull$GRM,
t_gammas = objNull$gammas,
t_inv_tX_X = objNull$inv_tX_X,
t_inv_tX_X_tX = objNull$inv_tX_X_tX,
t_resid = objNull$Resid,
t_resid_unrelated_outliers = objNull$Resid.unrelated.outliers,
t_sum_R_nonOutlier = objNull$sum_R_nonOutlier,
t_R_GRM_R_nonOutlier = objNull$R_GRM_R_nonOutlier,
t_R_GRM_R_TwoSubjOutlier = objNull$R_GRM_R_TwoSubjOutlier,
t_R_GRM_R = objNull$R_GRM_R,
t_MAF_interval = objNull$MAF_interval,
t_TwoSubj_list = objNull$TwoSubj_list,
t_ThreeSubj_list = objNull$ThreeSubj_list,
t_SPA_Cutoff = t_SPA_Cutoff,
t_zeta = t_zeta,
t_tol = t_tol)
result
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
result <- fit_full_wrapper(t_Gvec = t_Gvec,
t_Tarvec = objNull$Tarvec,
t_Riskvec = objNull$Riskvec,
t_designMat = objNull$designMat,
t_GRM = objNull$GRM,
t_gammas = objNull$gammas,
t_inv_tX_X = objNull$inv_tX_X,
t_inv_tX_X_tX = objNull$inv_tX_X_tX,
t_resid = objNull$Resid,
t_resid_unrelated_outliers = objNull$Resid.unrelated.outliers,
t_sum_R_nonOutlier = objNull$sum_R_nonOutlier,
t_R_GRM_R_nonOutlier = objNull$R_GRM_R_nonOutlier,
t_R_GRM_R_TwoSubjOutlier = objNull$R_GRM_R_TwoSubjOutlier,
t_R_GRM_R = objNull$R_GRM_R,
t_MAF_interval = objNull$MAF_interval,
t_TwoSubj_list = objNull$TwoSubj_list,
t_ThreeSubj_list = objNull$ThreeSubj_list,
t_SPA_Cutoff = t_SPA_Cutoff,
t_zeta = t_zeta,
t_tol = t_tol)
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
result <- fit_full_wrapper(t_Gvec = t_Gvec,
t_Tarvec = objNull$Tarvec,
t_Riskvec = objNull$Riskvec,
t_designMat = objNull$designMat,
t_GRM = objNull$GRM,
t_gammas = objNull$gammas,
t_inv_tX_X = objNull$inv_tX_X,
t_inv_tX_X_tX = objNull$inv_tX_X_tX,
t_resid = objNull$Resid,
t_resid_unrelated_outliers = objNull$Resid.unrelated.outliers,
t_sum_R_nonOutlier = objNull$sum_R_nonOutlier,
t_R_GRM_R_nonOutlier = objNull$R_GRM_R_nonOutlier,
t_R_GRM_R_TwoSubjOutlier = objNull$R_GRM_R_TwoSubjOutlier,
t_R_GRM_R = objNull$R_GRM_R,
t_MAF_interval = objNull$MAF_interval,
t_TwoSubj_list = objNull$TwoSubj_list,
t_ThreeSubj_list = objNull$ThreeSubj_list,
t_SPA_Cutoff = t_SPA_Cutoff,
t_zeta = t_zeta,
t_tol = t_tol)
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
result <- fit_full_wrapper(t_Gvec = t_Gvec,
t_Tarvec = objNull$Tarvec,
t_Riskvec = objNull$Riskvec,
t_designMat = objNull$designMat,
t_GRM = objNull$GRM,
t_gammas = objNull$gammas,
t_inv_tX_X = objNull$inv_tX_X,
t_inv_tX_X_tX = objNull$inv_tX_X_tX,
t_resid = objNull$Resid,
t_resid_unrelated_outliers = objNull$Resid.unrelated.outliers,
t_sum_R_nonOutlier = objNull$sum_R_nonOutlier,
t_R_GRM_R_nonOutlier = objNull$R_GRM_R_nonOutlier,
t_R_GRM_R_TwoSubjOutlier = objNull$R_GRM_R_TwoSubjOutlier,
t_R_GRM_R = objNull$R_GRM_R,
t_MAF_interval = objNull$MAF_interval,
t_TwoSubj_list = objNull$TwoSubj_list,
t_ThreeSubj_list = objNull$ThreeSubj_list,
t_SPA_Cutoff = t_SPA_Cutoff,
t_zeta = t_zeta,
t_tol = t_tol)
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
result <- fit_full_wrapper(t_Gvec = t_Gvec,
t_Tarvec = objNull$Tarvec,
t_Riskvec = objNull$Riskvec,
t_designMat = objNull$designMat,
t_GRM = objNull$GRM,
t_gammas = objNull$gammas,
t_inv_tX_X = objNull$inv_tX_X,
t_inv_tX_X_tX = objNull$inv_tX_X_tX,
t_resid = objNull$Resid,
t_resid_unrelated_outliers = objNull$Resid.unrelated.outliers,
t_sum_R_nonOutlier = objNull$sum_R_nonOutlier,
t_R_GRM_R_nonOutlier = objNull$R_GRM_R_nonOutlier,
t_R_GRM_R_TwoSubjOutlier = objNull$R_GRM_R_TwoSubjOutlier,
t_R_GRM_R = objNull$R_GRM_R,
t_MAF_interval = objNull$MAF_interval,
t_TwoSubj_list = objNull$TwoSubj_list,
t_ThreeSubj_list = objNull$ThreeSubj_list,
t_SPA_Cutoff = t_SPA_Cutoff,
t_zeta = t_zeta,
t_tol = t_tol)
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
result <- fit_full_wrapper(t_Gvec = t_Gvec,
t_Tarvec = objNull$Tarvec,
t_Riskvec = objNull$Riskvec,
t_designMat = objNull$designMat,
t_GRM = objNull$GRM,
t_gammas = objNull$gammas,
t_inv_tX_X = objNull$inv_tX_X,
t_inv_tX_X_tX = objNull$inv_tX_X_tX,
t_resid = objNull$Resid,
t_resid_unrelated_outliers = objNull$Resid.unrelated.outliers,
t_sum_R_nonOutlier = objNull$sum_R_nonOutlier,
t_R_GRM_R_nonOutlier = objNull$R_GRM_R_nonOutlier,
t_R_GRM_R_TwoSubjOutlier = objNull$R_GRM_R_TwoSubjOutlier,
t_R_GRM_R = objNull$R_GRM_R,
t_MAF_interval = objNull$MAF_interval,
t_TwoSubj_list = objNull$TwoSubj_list,
t_ThreeSubj_list = objNull$ThreeSubj_list,
t_SPA_Cutoff = t_SPA_Cutoff,
t_zeta = t_zeta,
t_tol = t_tol)
input_dir = "~/Desktop/phd/SARPA_GRAB/test_results/"
pheno_dir = "~/Desktop/phd/SARPA_GRAB/pheno/"
input_geno_dir = "~/Desktop/phd/SARPA_GRAB/geno_info/"
output_dir = "~/Desktop/phd/SARPA_GRAB/test_results/"
if (!dir.exists(output_dir)){
dir.create(output_dir, recursive = TRUE)
}
# Test in scenario2
SparseGRMFile = paste0(input_dir, "/nSub_50e3_SparseGRM.txt")
PairwiseIBDFile = paste0(input_dir, "/nSub_50e3_pairwiseIBD.txt")
Com.genofile = "/Users/liuyufei/Desktop/phd/SARPA_GRAB/geno_info/common_variants_scenario2.bed"
Rar.genofile = "/Users/liuyufei/Desktop/phd/SARPA_GRAB/geno_info/MACth20_scenario2.bed"
load(paste0(input_geno_dir, "common_variants_scenario2.RData"))
test.commonGeno = GenoMat2
load(paste0(input_geno_dir, "MACth20_scenario2.RData"))
test.rareGeno = extract_GenoMat
Com.outputfile = paste0(output_dir, "com_SARPA_SPA_scenario2.txt")
Rar.outputfile = paste0(output_dir, "rar_SARPA_SPA_scenario2.txt")
ResidMatFile = paste0(input_dir, "resid_common_rho_", rho, "_beta_G_", beta_G, "_prev_", prev, "_IP_", ip, ".txt")
ResidMat = data.table::fread(ResidMatFile)
SparseGRM = data.table::fread(SparseGRMFile)
GRM1 = SparseGRM %>% filter(ID1 %in% ResidMat$SubjID & ID2 %in% ResidMat$SubjID)
PhenoFile = paste0(pheno_dir, "/ncausal_com_20_rare_20_rho_", rho, "_beta_G_", beta_G, "_prev_", prev, ".csv")
covdata = data.table::fread(PhenoFile)
covdata = covdata %>% filter(SubjID %in% ResidMat$SubjID)
n0 = 5e3
if (nrow(covdata) != n0){
covdata$Tar[(n0 + 1):nrow(covdata)] = NA
}
obj.SARPA = SARPA.NullModel(PhenoFile = PhenoFile,
ResidMatFile = ResidMatFile,
SparseGRMFile = SparseGRMFile,
PairwiseIBDFile = PairwiseIBDFile,
control = list(CovarColList = c('X1', 'X2')))
GRAB.Marker(objNull = obj.SARPA,
GenoFile = Com.genofile,
OutputFile = Com.outputfile)
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
result <- fit_full_wrapper(t_Gvec = t_Gvec,
t_Tarvec = objNull$Tarvec,
t_Riskvec = objNull$Riskvec,
t_designMat = objNull$designMat,
t_GRM = objNull$GRM,
t_gammas = objNull$gammas,
t_inv_tX_X = objNull$inv_tX_X,
t_inv_tX_X_tX = objNull$inv_tX_X_tX,
t_resid = objNull$Resid,
t_resid_unrelated_outliers = objNull$Resid.unrelated.outliers,
t_sum_R_nonOutlier = objNull$sum_R_nonOutlier,
t_R_GRM_R_nonOutlier = objNull$R_GRM_R_nonOutlier,
t_R_GRM_R_TwoSubjOutlier = objNull$R_GRM_R_TwoSubjOutlier,
t_R_GRM_R = objNull$R_GRM_R,
t_MAF_interval = objNull$MAF_interval,
t_TwoSubj_list = objNull$TwoSubj_list,
t_ThreeSubj_list = objNull$ThreeSubj_list,
t_SPA_Cutoff = t_SPA_Cutoff,
t_zeta = t_zeta,
t_tol = t_tol)
result
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
source("~/Desktop/phd/SARPA_GRAB/try.R")
source("~/Desktop/phd/SARPA_GRAB/try.R")
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
result <- fit_full_wrapper(t_Gvec = t_Gvec,
t_Tarvec = objNull$Tarvec,
t_Riskvec = objNull$Riskvec,
t_designMat = objNull$designMat,
t_GRM = objNull$GRM,
t_gammas = objNull$gammas,
t_inv_tX_X = objNull$inv_tX_X,
t_inv_tX_X_tX = objNull$inv_tX_X_tX,
t_resid = objNull$Resid,
t_resid_unrelated_outliers = objNull$Resid.unrelated.outliers,
t_sum_R_nonOutlier = objNull$sum_R_nonOutlier,
t_R_GRM_R_nonOutlier = objNull$R_GRM_R_nonOutlier,
t_R_GRM_R_TwoSubjOutlier = objNull$R_GRM_R_TwoSubjOutlier,
t_R_GRM_R = objNull$R_GRM_R,
t_MAF_interval = objNull$MAF_interval,
t_TwoSubj_list = objNull$TwoSubj_list,
t_ThreeSubj_list = objNull$ThreeSubj_list,
t_SPA_Cutoff = t_SPA_Cutoff,
t_zeta = t_zeta,
t_tol = t_tol)
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
result <- fit_full_wrapper(t_Gvec = t_Gvec,
t_Tarvec = objNull$Tarvec,
t_Riskvec = objNull$Riskvec,
t_designMat = objNull$designMat,
t_GRM = objNull$GRM,
t_gammas = objNull$gammas,
t_inv_tX_X = objNull$inv_tX_X,
t_inv_tX_X_tX = objNull$inv_tX_X_tX,
t_resid = objNull$Resid,
t_resid_unrelated_outliers = objNull$Resid.unrelated.outliers,
t_sum_R_nonOutlier = objNull$sum_R_nonOutlier,
t_R_GRM_R_nonOutlier = objNull$R_GRM_R_nonOutlier,
t_R_GRM_R_TwoSubjOutlier = objNull$R_GRM_R_TwoSubjOutlier,
t_R_GRM_R = objNull$R_GRM_R,
t_MAF_interval = objNull$MAF_interval,
t_TwoSubj_list = objNull$TwoSubj_list,
t_ThreeSubj_list = objNull$ThreeSubj_list,
t_SPA_Cutoff = t_SPA_Cutoff,
t_zeta = t_zeta,
t_tol = t_tol)
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
result <- fit_full_wrapper(t_Gvec = t_Gvec,
t_Tarvec = objNull$Tarvec,
t_Riskvec = objNull$Riskvec,
t_designMat = objNull$designMat,
t_GRM = objNull$GRM,
t_gammas = objNull$gammas,
t_inv_tX_X = objNull$inv_tX_X,
t_inv_tX_X_tX = objNull$inv_tX_X_tX,
t_resid = objNull$Resid,
t_resid_unrelated_outliers = objNull$Resid.unrelated.outliers,
t_sum_R_nonOutlier = objNull$sum_R_nonOutlier,
t_R_GRM_R_nonOutlier = objNull$R_GRM_R_nonOutlier,
t_R_GRM_R_TwoSubjOutlier = objNull$R_GRM_R_TwoSubjOutlier,
t_R_GRM_R = objNull$R_GRM_R,
t_MAF_interval = objNull$MAF_interval,
t_TwoSubj_list = objNull$TwoSubj_list,
t_ThreeSubj_list = objNull$ThreeSubj_list,
t_SPA_Cutoff = t_SPA_Cutoff,
t_zeta = t_zeta,
t_tol = t_tol)
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
result <- fit_full_wrapper(t_Gvec = t_Gvec,
t_Tarvec = objNull$Tarvec,
t_Riskvec = objNull$Riskvec,
t_designMat = objNull$designMat,
t_GRM = objNull$GRM,
t_gammas = objNull$gammas,
t_inv_tX_X = objNull$inv_tX_X,
t_inv_tX_X_tX = objNull$inv_tX_X_tX,
t_resid = objNull$Resid,
t_resid_unrelated_outliers = objNull$Resid.unrelated.outliers,
t_sum_R_nonOutlier = objNull$sum_R_nonOutlier,
t_R_GRM_R_nonOutlier = objNull$R_GRM_R_nonOutlier,
t_R_GRM_R_TwoSubjOutlier = objNull$R_GRM_R_TwoSubjOutlier,
t_R_GRM_R = objNull$R_GRM_R,
t_MAF_interval = objNull$MAF_interval,
t_TwoSubj_list = objNull$TwoSubj_list,
t_ThreeSubj_list = objNull$ThreeSubj_list,
t_SPA_Cutoff = t_SPA_Cutoff,
t_zeta = t_zeta,
t_tol = t_tol)
Rcpp::sourceCpp("~/Desktop/phd/SARPA_GRAB/try.cpp")
result <- fit_full_wrapper(t_Gvec = t_Gvec,
t_Tarvec = objNull$Tarvec,
t_Riskvec = objNull$Riskvec,
t_designMat = objNull$designMat,
t_GRM = objNull$GRM,
t_gammas = objNull$gammas,
t_inv_tX_X = objNull$inv_tX_X,
t_inv_tX_X_tX = objNull$inv_tX_X_tX,
t_resid = objNull$Resid,
t_resid_unrelated_outliers = objNull$Resid.unrelated.outliers,
t_sum_R_nonOutlier = objNull$sum_R_nonOutlier,
t_R_GRM_R_nonOutlier = objNull$R_GRM_R_nonOutlier,
t_R_GRM_R_TwoSubjOutlier = objNull$R_GRM_R_TwoSubjOutlier,
t_R_GRM_R = objNull$R_GRM_R,
t_MAF_interval = objNull$MAF_interval,
t_TwoSubj_list = objNull$TwoSubj_list,
t_ThreeSubj_list = objNull$ThreeSubj_list,
t_SPA_Cutoff = t_SPA_Cutoff,
t_zeta = t_zeta,
t_tol = t_tol)
results
result
input_dir = "~/Desktop/phd/SARPA_GRAB/test_results/"
pheno_dir = "~/Desktop/phd/SARPA_GRAB/pheno/"
input_geno_dir = "~/Desktop/phd/SARPA_GRAB/geno_info/"
output_dir = "~/Desktop/phd/SARPA_GRAB/test_results/"
if (!dir.exists(output_dir)){
dir.create(output_dir, recursive = TRUE)
}
# Test in scenario2
SparseGRMFile = paste0(input_dir, "/nSub_50e3_SparseGRM.txt")
PairwiseIBDFile = paste0(input_dir, "/nSub_50e3_pairwiseIBD.txt")
Com.genofile = "/Users/liuyufei/Desktop/phd/SARPA_GRAB/geno_info/common_variants_scenario2.bed"
Rar.genofile = "/Users/liuyufei/Desktop/phd/SARPA_GRAB/geno_info/MACth20_scenario2.bed"
load(paste0(input_geno_dir, "common_variants_scenario2.RData"))
test.commonGeno = GenoMat2
load(paste0(input_geno_dir, "MACth20_scenario2.RData"))
test.rareGeno = extract_GenoMat
Com.outputfile = paste0(output_dir, "com_SARPA_SPA_scenario2.txt")
Rar.outputfile = paste0(output_dir, "rar_SARPA_SPA_scenario2.txt")
ResidMatFile = paste0(input_dir, "resid_common_rho_", rho, "_beta_G_", beta_G, "_prev_", prev, "_IP_", ip, ".txt")
rho = 0
beta_G = 0.01
prev = 0.01
ip = 0
ResidMatFile = paste0(input_dir, "resid_common_rho_", rho, "_beta_G_", beta_G, "_prev_", prev, "_IP_", ip, ".txt")
ResidMat = data.table::fread(ResidMatFile)
SparseGRM = data.table::fread(SparseGRMFile)
GRM1 = SparseGRM %>% filter(ID1 %in% ResidMat$SubjID & ID2 %in% ResidMat$SubjID)
PhenoFile = paste0(pheno_dir, "/ncausal_com_20_rare_20_rho_", rho, "_beta_G_", beta_G, "_prev_", prev, ".csv")
covdata = data.table::fread(PhenoFile)
covdata = covdata %>% filter(SubjID %in% ResidMat$SubjID)
n0 = 5e3
if (nrow(covdata) != n0){
covdata$Tar[(n0 + 1):nrow(covdata)] = NA
}
obj.SARPA = SARPA.NullModel(PhenoFile = PhenoFile,
ResidMatFile = ResidMatFile,
SparseGRMFile = SparseGRMFile,
PairwiseIBDFile = PairwiseIBDFile,
control = list(CovarColList = c('X1', 'X2')))
GRAB.Marker(objNull = obj.SARPA,
GenoFile = Com.genofile,
OutputFile = Com.outputfile)
input_dir = "~/Desktop/phd/SARPA_GRAB/test_results/"
pheno_dir = "~/Desktop/phd/SARPA_GRAB/pheno/"
input_geno_dir = "~/Desktop/phd/SARPA_GRAB/geno_info/"
output_dir = "~/Desktop/phd/SARPA_GRAB/test_results/"
if (!dir.exists(output_dir)){
dir.create(output_dir, recursive = TRUE)
}
# Test in scenario2
SparseGRMFile = paste0(input_dir, "/nSub_50e3_SparseGRM.txt")
PairwiseIBDFile = paste0(input_dir, "/nSub_50e3_pairwiseIBD.txt")
Com.genofile = "/Users/liuyufei/Desktop/phd/SARPA_GRAB/geno_info/common_variants_scenario2.bed"
Rar.genofile = "/Users/liuyufei/Desktop/phd/SARPA_GRAB/geno_info/MACth20_scenario2.bed"
load(paste0(input_geno_dir, "common_variants_scenario2.RData"))
test.commonGeno = GenoMat2
load(paste0(input_geno_dir, "MACth20_scenario2.RData"))
test.rareGeno = extract_GenoMat
Com.outputfile = paste0(output_dir, "com_SARPA_SPA_scenario2.txt")
Rar.outputfile = paste0(output_dir, "rar_SARPA_SPA_scenario2.txt")
input_dir = "~/Desktop/phd/SARPA_GRAB/test_results/"
pheno_dir = "~/Desktop/phd/SARPA_GRAB/pheno/"
input_geno_dir = "~/Desktop/phd/SARPA_GRAB/geno_info/"
output_dir = "~/Desktop/phd/SARPA_GRAB/test_results/"
if (!dir.exists(output_dir)){
dir.create(output_dir, recursive = TRUE)
}
# Test in scenario2
SparseGRMFile = paste0(input_dir, "/nSub_50e3_SparseGRM.txt")
PairwiseIBDFile = paste0(input_dir, "/nSub_50e3_pairwiseIBD.txt")
Com.genofile = "/Users/liuyufei/Desktop/phd/SARPA_GRAB/geno_info/common_variants_scenario2.bed"
Rar.genofile = "/Users/liuyufei/Desktop/phd/SARPA_GRAB/geno_info/MACth20_scenario2.bed"
load(paste0(input_geno_dir, "common_variants_scenario2.RData"))
test.commonGeno = GenoMat2
load(paste0(input_geno_dir, "MACth20_scenario2.RData"))
test.rareGeno = extract_GenoMat
Com.outputfile = paste0(output_dir, "com_SARPA_SPA_scenario2.txt")
Rar.outputfile = paste0(output_dir, "rar_SARPA_SPA_scenario2.txt")
ResidMatFile = paste0(input_dir, "resid_common_rho_", rho, "_beta_G_", beta_G, "_prev_", prev, "_IP_", ip, ".txt")
ResidMat = data.table::fread(ResidMatFile)
SparseGRM = data.table::fread(SparseGRMFile)
GRM1 = SparseGRM %>% filter(ID1 %in% ResidMat$SubjID & ID2 %in% ResidMat$SubjID)
PhenoFile = paste0(pheno_dir, "/ncausal_com_20_rare_20_rho_", rho, "_beta_G_", beta_G, "_prev_", prev, ".csv")
covdata = data.table::fread(PhenoFile)
covdata = covdata %>% filter(SubjID %in% ResidMat$SubjID)
n0 = 5e3
if (nrow(covdata) != n0){
covdata$Tar[(n0 + 1):nrow(covdata)] = NA
}
obj.SARPA = SARPA.NullModel(PhenoFile = PhenoFile,
ResidMatFile = ResidMatFile,
SparseGRMFile = SparseGRMFile,
PairwiseIBDFile = PairwiseIBDFile,
control = list(CovarColList = c('X1', 'X2')))
GRAB.Marker(objNull = obj.SARPA,
GenoFile = Com.genofile,
OutputFile = Com.outputfile)
library(GRAB)
source("~/Desktop/phd/SARPA_GRAB/SARPA_SPA_test.R")
input_dir = "~/Desktop/phd/SARPA_GRAB/test_results/"
pheno_dir = "~/Desktop/phd/SARPA_GRAB/pheno/"
input_geno_dir = "~/Desktop/phd/SARPA_GRAB/geno_info/"
output_dir = "~/Desktop/phd/SARPA_GRAB/test_results/"
if (!dir.exists(output_dir)){
dir.create(output_dir, recursive = TRUE)
}
# Test in scenario2
SparseGRMFile = paste0(input_dir, "/nSub_50e3_SparseGRM.txt")
PairwiseIBDFile = paste0(input_dir, "/nSub_50e3_pairwiseIBD.txt")
Com.genofile = "/Users/liuyufei/Desktop/phd/SARPA_GRAB/geno_info/common_variants_scenario2.bed"
Rar.genofile = "/Users/liuyufei/Desktop/phd/SARPA_GRAB/geno_info/MACth20_scenario2.bed"
load(paste0(input_geno_dir, "common_variants_scenario2.RData"))
test.commonGeno = GenoMat2
load(paste0(input_geno_dir, "MACth20_scenario2.RData"))
test.rareGeno = extract_GenoMat
Com.outputfile = paste0(output_dir, "com_SARPA_SPA_scenario2.txt")
Rar.outputfile = paste0(output_dir, "rar_SARPA_SPA_scenario2.txt")
ResidMatFile = paste0(input_dir, "resid_common_rho_", rho, "_beta_G_", beta_G, "_prev_", prev, "_IP_", ip, ".txt")
ResidMat = data.table::fread(ResidMatFile)
SparseGRM = data.table::fread(SparseGRMFile)
GRM1 = SparseGRM %>% filter(ID1 %in% ResidMat$SubjID & ID2 %in% ResidMat$SubjID)
PhenoFile = paste0(pheno_dir, "/ncausal_com_20_rare_20_rho_", rho, "_beta_G_", beta_G, "_prev_", prev, ".csv")
covdata = data.table::fread(PhenoFile)
covdata = covdata %>% filter(SubjID %in% ResidMat$SubjID)
n0 = 5e3
if (nrow(covdata) != n0){
covdata$Tar[(n0 + 1):nrow(covdata)] = NA
}
obj.SARPA = SARPA.NullModel(PhenoFile = PhenoFile,
ResidMatFile = ResidMatFile,
SparseGRMFile = SparseGRMFile,
PairwiseIBDFile = PairwiseIBDFile,
control = list(CovarColList = c('X1', 'X2')))
GRAB.Marker(objNull = obj.SARPA,
GenoFile = Com.genofile,
OutputFile = Com.outputfile)
obj.SPAGRM = SPAGRM.NullModel(ResidMatFile = ResidMatFile,
SparseGRMFile = SparseGRMFile,
PairwiseIBDFile = PairwiseIBDFile)
GRAB.Marker(objNull = obj.SPAGRM,
GenoFile = Com.genofile,
OutputFile = Com.outputfile)
ResidMatFile = paste0(input_dir, "resid_common_rho_", rho, "_beta_G_", beta_G, "_prev_", prev, "_IP_", ip, ".txt")
ResidMat = data.table::fread(ResidMatFile)
SparseGRM = data.table::fread(SparseGRMFile)
GRM1 = SparseGRM %>% filter(ID1 %in% ResidMat$SubjID & ID2 %in% ResidMat$SubjID)
PhenoFile = paste0(pheno_dir, "/ncausal_com_20_rare_20_rho_", rho, "_beta_G_", beta_G, "_prev_", prev, ".csv")
covdata = data.table::fread(PhenoFile)
covdata = covdata %>% filter(SubjID %in% ResidMat$SubjID)
ResidMatFile = paste0(input_dir, "resid_common_rho_", rho, "_beta_G_", beta_G, "_prev_", prev, "_IP_", ip, ".txt")
ResidMat = data.table::fread(ResidMatFile)
SparseGRM = data.table::fread(SparseGRMFile)
GRM1 = SparseGRM %>% filter(ID1 %in% ResidMat$SubjID & ID2 %in% ResidMat$SubjID)
PhenoFile = paste0(pheno_dir, "/ncausal_com_20_rare_20_rho_", rho, "_beta_G_", beta_G, "_prev_", prev, ".csv")
covdata = data.table::fread(PhenoFile)
covdata = covdata %>% filter(SubjID %in% ResidMat$SubjID)
n0 = 5e3
if (nrow(covdata) != n0){
covdata$Tar[(n0 + 1):nrow(covdata)] = NA
}
obj.SARPA = SARPA.NullModel(PhenoFile = PhenoFile,
ResidMatFile = ResidMatFile,
SparseGRMFile = SparseGRMFile,
PairwiseIBDFile = PairwiseIBDFile,
control = list(CovarColList = c('X1', 'X2')))
GRAB.Marker(objNull = obj.SARPA,
GenoFile = Com.genofile,
OutputFile = Com.outputfile)
ResidMatFile = paste0(input_dir, "resid_common_rho_", rho, "_beta_G_", beta_G, "_prev_", prev, "_IP_", ip, ".txt")
ResidMat = data.table::fread(ResidMatFile)
SparseGRM = data.table::fread(SparseGRMFile)
GRM1 = SparseGRM %>% filter(ID1 %in% ResidMat$SubjID & ID2 %in% ResidMat$SubjID)
PhenoFile = paste0(pheno_dir, "/ncausal_com_20_rare_20_rho_", rho, "_beta_G_", beta_G, "_prev_", prev, ".csv")
covdata = data.table::fread(PhenoFile)
covdata = covdata %>% filter(SubjID %in% ResidMat$SubjID)
n0 = 5e3
if (nrow(covdata) != n0){
covdata$Tar[(n0 + 1):nrow(covdata)] = NA
}
obj.SARPA = SARPA.NullModel(PhenoFile = PhenoFile,
ResidMatFile = ResidMatFile,
SparseGRMFile = SparseGRMFile,
PairwiseIBDFile = PairwiseIBDFile,
control = list(CovarColList = c('X1', 'X2')))
GRAB.Marker(objNull = obj.SARPA,
GenoFile = Com.genofile,
OutputFile = Com.outputfile)
