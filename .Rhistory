ggsave(paste(name,".jpeg"), p, width = 4, height = 4)
}
give.n <- function(x){
return(c(y = max(x)*0.8, label = length(x)))
# experiment with the multiplier to find the perfect position
}
immuneTrait_clinical_mutation$KEAP1 = as.factor(immuneTrait_clinical_mutation$KEAP1)
for(i in headerSelected){
print(i)
name = gsub(" \\(%\\)", "", i)
p = ggplot(immuneTrait_clinical_mutation, aes(KEAP1, .data[[i]])) +
geom_boxplot() +
stat_summary(fun.data = give.n, geom = "text",
position = position_dodge(width = 0.75))
ggsave(paste(name,".jpeg"), p, width = 4, height = 4)
}
give.n <- function(x){
return(c(y = max(x)*1.1, label = length(x)))
# experiment with the multiplier to find the perfect position
}
immuneTrait_clinical_mutation$KEAP1 = as.factor(immuneTrait_clinical_mutation$KEAP1)
for(i in headerSelected){
print(i)
name = gsub(" \\(%\\)", "", i)
p = ggplot(immuneTrait_clinical_mutation, aes(KEAP1, .data[[i]])) +
geom_boxplot() +
stat_summary(fun.data = give.n, geom = "text",
position = position_dodge(width = 0.75))
ggsave(paste(name,".jpeg"), p, width = 4, height = 4)
}
library(dplyr)
library(tidyr)
library(data.table)
MedCoding = c(1141182800, 1140871542)
a = matrix(20, 4,5)
a = as.data.table(a)
sessionInfo()
colnames(a) = c("v1",paste0("sss",1:4))
a
select(a, starts_with("ss"))
select(a, starts_with('ss'))
?select
sessionInfo()
dplyr::select(a, starts_with('ss'))
setwd("C:/Users/wenjianb/Dropbox/Wenjian-Tianyun/code")
load("SNPInfoAll.RData")
ls()
rm(list=ls())
# rm(list=ls())
setwd("C:/Users/wenjianb/Dropbox/Wenjian-Tianyun/code")
load("SNPInfoAll.RData")
ls()
summary(SNPInfoAll)
SNPInfoAll[[1]]
names(SNPInfoAll)
library(tidyr)
library(dplyr)
library(data.table)
# rm(list=ls())
setwd("C:/Users/wenjianb/Dropbox/Wenjian-Tianyun/code")
load("SNPInfoAll.RData")
ls()
summary(SNPInfoAll)
SNPInfo = data.table()
for(i in 1:length(SNPInfoAll)){
temp = SNPInfoAll[[i]]
temp = temp %>% mutate(source = paste0("Sigma",i))
SNPInfo = rbind(SNPInfo, temp)
}
SNPInfo
library(ggplot2)
ggplot(SNPInfo, aes(beta_1, beta_2)) + geom_point()
ggplot(SNPInfo, aes(beta_1, beta_2)) + geom_point() + facet_wrap(.~source)
SNPInfo
ggplot(SNPInfo, aes(beta_1, estbeta1)) + geom_point() + facet_wrap(.~source)
library(tidyr)
library(dplyr)
library(data.table)
library(ggplot2)
# rm(list=ls())
setwd("C:/Users/wenjianb/Dropbox/Wenjian-Tianyun/code/test-BWJ-2022-03-28")
load("../SNPInfoAll.RData")
ls()
summary(SNPInfoAll)
SNPInfo = data.table()
for(i in 1:length(SNPInfoAll)){
temp = SNPInfoAll[[i]]
temp = temp %>% mutate(source = paste0("Sigma",i))
SNPInfo = rbind(SNPInfo, temp)
}
p1 = ggplot(SNPInfo, aes(beta_1, beta_2)) + geom_point() + facet_wrap(.~source)
p2 = ggplot(SNPInfo, aes(beta_1, estbeta1)) + geom_point() + facet_wrap(.~source)
p3 = ggplot(SNPInfo, aes(beta_2, estbeta2)) + geom_point() + facet_wrap(.~source)
p4 = ggplot(SNPInfo, aes(estbeta1, estbeta2)) + geom_point() + facet_wrap(.~source)
ggsave("p1.jpeg", p1, width=6, height = 6)
ggsave("p2.jpeg", p2, width=6, height = 6)
ggsave("p3.jpeg", p3, width=6, height = 6)
ggsave("p4.jpeg", p4, width=6, height = 6)
SNPInfo
SNPInfo %>% group_by(source) %>% summarise(cor(beta_1, estbeta1))
SNPInfo %>% group_by(source) %>% summarise(cor(beta_2, estbeta2))
SNPInfo %>% group_by(source) %>% summarise(cor(estbeta1, estbeta2))
SNPInfo %>% group_by(source) %>% summarise(cor(beta_1, beta_2))
SNPInfo %>% group_by(source) %>% summarise(cor(beta_1, estbeta1))
SNPInfo %>% group_by(source) %>% summarise(cor(beta_2, estbeta2))
SNPInfo %>% group_by(source) %>% summarise(cor(estbeta1, estbeta2))
SNPInfo %>% group_by(source) %>% summarise(cor(beta_1, beta_2))
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
library(ggrepel)
setwd("Y:/TME_GWAS/BRCA_SNV_2022-03-28/SomaticMutation")
csvFiles = list.files(pattern=".csv")
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
library(ggrepel)
setwd("Y:/TME_GWAS/BRCA_SNV_2022-03-28/SomaticMutation")
csvFiles = list.files(pattern=".csv")
for(i in csvFiles){
print(i)
name = gsub(".csv", "", i)
name = gsub("%", "percentage", name)
data1 = data.table::fread(i)
n.valid = with(data1, sum(!is.na(`Pr(>|t|)`)))
p.valid = 0.05 / n.valid
data2 = data1 %>%
mutate(rank.valid = rank(`Pr(>|t|)`, na.last = "keep")) %>%
mutate(estPvalue = rank.valid/(n.valid+1)) %>%
mutate(label = ifelse(`Pr(>|t|)` < p.valid | rank.valid <= 3, V1, NA))
p = ggplot(data2, aes(-log10(estPvalue), -log10(`Pr(>|t|)`), label = label)) +
geom_point() + geom_abline(slope = 1, intercept = 0) + geom_label_repel()
ggsave(paste0("../SomaticMutationFigure/",name,".jpeg"),p, width = 5, height = 5)
}
data1
dim(data1)
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
library(ggrepel)
setwd("Y:/TME_GWAS/BRCA_SNV_2022-03-28/SomaticMutation")
csvFiles = list.files(pattern=".csv")
for(i in csvFiles){
print(i)
name = gsub(".csv", "", i)
name = gsub("%", "percentage", name)
data1 = data.table::fread(i)
colnames(data1)[8] = "pvalue"
n.valid = with(data1, sum(!is.na(pvalue)))
p.valid = 0.05 / n.valid
data2 = data1 %>%
mutate(rank.valid = rank(pvalue, na.last = "keep")) %>%
mutate(estPvalue = rank.valid/(n.valid+1)) %>%
mutate(label = ifelse(pvalue < p.valid | rank.valid <= 3, V1, NA))
p = ggplot(data2, aes(-log10(estPvalue), -log10(pvalue), label = label)) +
geom_point() + geom_abline(slope = 1, intercept = 0) + geom_label_repel()
ggsave(paste0("../SomaticMutationFigure/",name,".jpeg"),p, width = 5, height = 5)
}
library(tidyr)
library(dplyr)
library(data.table)
rm(list=ls())
library(GRAB)
?GRAB.ReadGeno
help(checkIfSampleIDsExist)
ï¼ŸGRAB.ReadGeno
?GRAB.ReadGeno
EnvNameVec = c("CTQ_sum", "CTQ_bina", "CTQ_binaSum",
"LES_sum", "LES_bina", "LES_binaSum",
"PTSD_sum", "PTSD_bina", "PTSD_binaSum",
"LA_sum")
?fwrite
1000 %/% 1000
999 %/% 1000
?GRAB.ReadGeno
n = 10000
data1 = data.table::data.table(AGE = rnorm(n, 60),
GENDER = rbinom(n, 1, 0.5))
n = 10000
prob = 0.1
data1 = data.table::data.table(AGE = rnorm(n, 60),
GENDER = rbinom(n, 1, 0.5),
Y = rbinom(n, 1, prob))
obj.glm = glm(Y ~ AGE + GENDER, family = binomial)
n = 10000
prob = 0.1
data1 = data.table::data.table(AGE = rnorm(n, 60),
GENDER = rbinom(n, 1, 0.5),
Y = rbinom(n, 1, prob))
obj.glm = glm(Y ~ AGE + GENDER, data = data1, family = binomial)
library(rbenchmark)
require(rbenchmark)
install.packages("rbenchmark")
require(rbenchmark)
require(rbenchmark)
n = 10000
prob = 0.1
data1 = data.table::data.table(AGE = rnorm(n, 60),
GENDER = rbinom(n, 1, 0.5),
Y = rbinom(n, 1, prob))
benchmark(obj.glm = glm(Y ~ AGE + GENDER, data = data1, family = binomial),replications = 100)
time1 = benchmark(obj.glm = glm(Y ~ AGE + GENDER, data = data1, family = binomial),replications = 100)
time1
time1$elapsed
time1$elapsed * 1e6 / 100
# install.packages("rbenchmark")
library(rbenchmark)
n = 10000
prob = 0.1
data1 = data.table::data.table(AGE = rnorm(n, 60),
GENDER = rbinom(n, 1, 0.5),
Y = rbinom(n, 1, prob))
n.rep = 100
time1 = benchmark(obj.glm = glm(Y ~ AGE + GENDER, data = data1, family = binomial),replications = n.rep)
time1$elapsed * 1e6 / n.rep / 3600  # unit is hours
527615 / 94
527615 / 94 / 1024
4.1 * 94 * 1024
GeneInfo = data.table::fread("Z:/UK_Biobank/ukb23155_b0_v1_s200604/SimulationUsingWES/SimplifiedMarkerAnnoInfo/gene_count_simplified.csv")
GeneInfo
library(ggplot2)
ggplot(GeneInfo, aes(n)) + geom_histogram()
summary(GeneInfo$n)
278e3*6.5
GeneInfo1 = GeneInfo %>% filter(n > 50)
GeneInfo1
GeneInfo
dim(GeneInfo)
dim(GeneInfo1)
GeneInfo
head(GeneInfo1)
library(tibble)
library(tidyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(dplyr)
GeneInfo1 = GeneInfo %>% filter(n > 50)
GeneInfo1
GeneInfo
GeneInfo1 = GeneInfo %>% filter(n > 10)
GeneInfo1
GeneInfo1 = GeneInfo %>% filter(n > 100)
GeneInfo1
GeneInfo %>% filter(n > 100) %>%   # 21221 -> 16727
filter(grepl(",",Gene.refGene)
)
GeneInfo %>% filter(n > 100) %>%   # 21221 -> 16727
filter(grepl(";",Gene.refGene))
GeneInfo1 = GeneInfo %>% filter(n > 100) %>%   # 21221 -> 16727
filter(!grepl(";",Gene.refGene))  # 16727 ->
GeneInfo1
n = nrow(GeneInfo1)
GeneInfo2 = GeneInfo1[sample(n, 10000),]
set.seed(1)
n = nrow(GeneInfo1)
GeneInfo2 = GeneInfo1[sample(n, 10000),]
GeneInfo2
ggplot(GeneInfo2, aes(n)) + geom_histogram()
summary(GeneInfo2$n)
set.seed(1)
n = nrow(GeneInfo1)
GeneInfo2 = GeneInfo1[sample(n, 1000),]
ggplot(GeneInfo, aes(n)) + geom_histogram()
ggplot(GeneInfo2, aes(n)) + geom_histogram()
summary(GeneInfo2$n)
set.seed(12)
n = nrow(GeneInfo1)
GeneInfo2 = GeneInfo1[sample(n, 1000),]
ggplot(GeneInfo2, aes(n)) + geom_histogram()
summary(GeneInfo2$n)
2.5e6/1e3
set.seed(123)
n = nrow(GeneInfo1)
GeneInfo2 = GeneInfo1[sample(n, 1000),]
ggplot(GeneInfo2, aes(n)) + geom_histogram()
summary(GeneInfo2$n)
GeneInfo2
GeneSelected = GeneInfo$Gene.refGene
GeneSelected
GeneSelected = GeneInfo2$Gene.refGene
GeneSelected
GeneInfo
GeneInfo2
GeneInfo2
data.table::fwrite(GeneInfo2,
"Z:/UK_Biobank/ukb23155_b0_v1_s200604/SimulationUsingWES/SimplifiedMarkerAnnoInfo/gene_selected.csv",
row.names = F, col.names = T, sep = ",", quote = F)
GeneInfo2
GeneInfo2 %>% filter(chr == 1)
GeneInfo2 %>% filter(chr == 2)
GeneInfo2 %>% filter(chr == 3)
GeneInfo = data.table::fread("Z:/UK_Biobank/ukb23155_b0_v1_s200604/SimulationUsingWES/SimplifiedMarkerAnnoInfo/gene_count_simplified.csv")
GeneInfo1 = GeneInfo %>% filter(n > 100) %>%   # 21221 -> 16727
filter(!grepl(";",Gene.refGene))  # 16727 -> 16584
GeneInfo1
set.seed(123)
n = nrow(GeneInfo1)
GeneInfo2 = GeneInfo1[sample(n, 1000),]
GeneInfo2
n
sample(n, 1000)
GeneInfo1
GeneInfo1 %>% group_by(chr) %>% count()
GeneInfo2 %>% group_by(chr) %>% count()
GeneInfo1
sample(n, 2)
GeneInfo1[c(3632, 5258), ]
set.seed(123)
n = nrow(GeneInfo1)
pos = sample(n, 1000)
GeneInfo2 = GeneInfo1[pos,]
GeneInfo2
ggplot(GeneInfo2, aes(n)) + geom_histogram()
summary(GeneInfo2$n)
GeneInfo = data.table::fread("Z:/UK_Biobank/ukb23155_b0_v1_s200604/SimulationUsingWES/SimplifiedMarkerAnnoInfo/gene_count_simplified.csv")
GeneInfo1 = GeneInfo %>% filter(n > 100) %>%   # 21221 -> 16727
filter(!grepl(";",Gene.refGene))  # 16727 -> 16584
set.seed(123)
n = nrow(GeneInfo1)
pos = sample(n, 1000)
GeneInfo2 = GeneInfo1[pos,]
# ggplot(GeneInfo2, aes(n)) + geom_histogram()
summary(GeneInfo2$n)
GeneSelected = GeneInfo2$Gene.refGene
data.table::fwrite(GeneInfo2,
"Z:/UK_Biobank/ukb23155_b0_v1_s200604/SimulationUsingWES/SimplifiedMarkerAnnoInfo/gene_selected.csv",
row.names = F, col.names = T, sep = ",", quote = F)
GeneSelected
GeneInfo2
GeneInfo2
GeneInfo2 %>% filter(chr == chr)
chr
c=1
tempGeneInfo2 = GeneInfo2 %>% filter(chr == c)
tempGeneInfo2
GeneInfo2
SimpleInfo = data.table::fread(SimpleFile)
tempGeneInfo2$Gene.refGene
SimpleInfo
SimpleFile = paste0("/data1/UK_Biobank/ukb23155_b0_v1_s200604/SimulationUsingWES/SimplifiedMarkerAnnoInfo/UKBexomeOQFE_chr",
c,".avoutput.hg38_multianno_simplied.csv")
SimpleInfo = data.table::fread(SimpleFile)
library(ggplot2)
library(tidyr)
library(dplyr)
GeneInfo = data.table::fread("Z:/UK_Biobank/ukb23155_b0_v1_s200604/SimulationUsingWES/SimplifiedMarkerAnnoInfo/gene_count_simplified.csv")
GeneInfo1 = GeneInfo %>% filter(n > 100) %>%   # 21221 -> 16727
filter(!grepl(";",Gene.refGene))  # 16727 -> 16584
set.seed(123)
n = nrow(GeneInfo1)
pos = sample(n, 1000)
GeneInfo2 = GeneInfo1[pos,]
ggplot(GeneInfo2, aes(n)) + geom_histogram()
summary(GeneInfo2$n)
GeneSelected = GeneInfo2$Gene.refGene
data.table::fwrite(GeneInfo2,
"Z:/UK_Biobank/ukb23155_b0_v1_s200604/SimulationUsingWES/SimplifiedMarkerAnnoInfo/gene_selected.csv",
row.names = F, col.names = T, sep = ",", quote = F)
library(ggplot2)
library(tidyr)
library(dplyr)
GeneInfo = data.table::fread("Z:/UK_Biobank/ukb23155_b0_v1_s200604/SimulationUsingWES/SimplifiedMarkerAnnoInfo/gene_count_simplified.csv")
GeneInfo1 = GeneInfo %>% filter(n > 100) %>%   # 21221 -> 16727
filter(!grepl(";",Gene.refGene))  # 16727 -> 16584
set.seed(123)
n = nrow(GeneInfo1)
pos = sample(n, 1000)
GeneInfo2 = GeneInfo1[pos,]
ggplot(GeneInfo2, aes(n)) + geom_histogram()
summary(GeneInfo2$n)
GeneSelected = GeneInfo2$Gene.refGene
data.table::fwrite(GeneInfo2,
"Z:/UK_Biobank/ukb23155_b0_v1_s200604/SimulationUsingWES/SimplifiedMarkerAnnoInfo/gene_selected.csv",
row.names = F, col.names = T, sep = ",", quote = F)
GRAB.SimuGMat()
?GRAB.SimuGMat
?GRAB.SimuGMatSKAT
fam.kin.10.members = read.table(system.file("extdata", "example_10members.kin.txt", package = "GRAB"))
fam.kin.10.members = as.matrix(fam.kin.10.members)
n.fam = 500
n.subj = 5000
fam.kin.mode = "10-members"  # "10-members" corresponds to fam.kin.10.members
min.MAF = 0
max.MAF = 0.3
seedNum = 1234
region.length = 2000
n.region = 2
GMat = GRAB.SimuGMatSKAT(n.fam, n.subj, fam.kin.mode, min.MAF, max.MAF, seedNum, region.length, n.region)
GMat
?GRAB.ReadGeno
?GRAB.SimuGMat
?GRAB.ReadGeno
?set.seed
?GRAB.ReadGeno
?GRAB.ReadGeno
PLINKFile = system.file("extdata", "example.bed", package = "GRAB")
IDsToIncludeFile = system.file("extdata", "example.IDsToIncludeFile.txt", package = "GRAB")
RangesToIncludeFile = system.file("extdata", "example.RangesToIncludeFile.txt", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile,
control = list(IDsToIncludeFile = IDsToIncludeFile,
RangesToIncludeFile = RangesToIncludeFile,
AlleleOrder = "ref-first"))
GenoMat = GenoList$GenoMat
head(GenoMat)
markerInfo = GenoList$markerInfo
head(markerInfo)
?GRAB.SimuGMat
nSub = 100
nFam = 10
FamMode = "10-members"
nSNP = 10000
OutList = GRAB.SimuGMat(nSub, nFam, FamMode, nSNP)
GenoMat = OutList$GenoMat
markerInfo = OutList$markerInfo
GenoMat[1:10,1:10]
markerInfo
head(GenoMat)
PLINKFile = system.file("extdata", "example.bed", package = "GRAB")
IDsToIncludeFile = system.file("extdata", "example.IDsToIncludeFile.txt", package = "GRAB")
RangesToIncludeFile = system.file("extdata", "example.RangesToIncludeFile.txt", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile,
control = list(IDsToIncludeFile = IDsToIncludeFile,
RangesToIncludeFile = RangesToIncludeFile,
AlleleOrder = "ref-first"))
GenoMat = GenoList$GenoMat
head(GenoMat)
?GRAB.ReadGeno
gc()
GenoMat
?GRAB.ReadGeno
library(GRAB)
?GRAB.SimuGMat
nSub = 100
nFam = 10
FamMode = "10-members"
nSNP = 10000
OutList = GRAB.SimuGMat(nSub, nFam, FamMode, nSNP)
GenoMat = OutList$GenoMat
markerInfo = OutList$markerInfo
GenoMat[1:10,1:10]
head(markerInfo)
?GRAB.SimuGMatFromGenoFile
?GRAB.SimuGMat
nFam = 2
nSub = 3
FamMode = "10-members"
PLINKFile = system.file("extdata", "example.bed", package = "GRAB")
IDsToIncludeFile = system.file("extdata", "example.IDsToIncludeFile.txt", package = "GRAB")
RangesToIncludeFile = system.file("extdata", "example.RangesToIncludeFile.txt", package = "GRAB")
GenoList = GRAB.SimuGMatFromGenoFile(nFam,
nSub,
FamMode,
PLINKFile,
control = list(IDsToIncludeFile = IDsToIncludeFile,
RangesToIncludeFile = RangesToIncludeFile,
AlleleOrder = "ref-first"))
library(GRAB)
?GRAB.SimuGMatFromGenoFile
nFam = 2
nSub = 3
FamMode = "10-members"
PLINKFile = system.file("extdata", "example.bed", package = "GRAB")
IDsToIncludeFile = system.file("extdata", "example.IDsToIncludeFile.txt", package = "GRAB")
RangesToIncludeFile = system.file("extdata", "example.RangesToIncludeFile.txt", package = "GRAB")
GenoList = GRAB.SimuGMatFromGenoFile(nFam, nSub, FamMode, PLINKFile,
control = list(IDsToIncludeFile = IDsToIncludeFile,
RangesToIncludeFile = RangesToIncludeFile,
AlleleOrder = "ref-first"))
GenoList
library(GRAB)
?GRAB.SimuGMatFromGenoFile
nFam = 2
nSub = 3
FamMode = "10-members"
PLINKFile = system.file("extdata", "example.bed", package = "GRAB")
IDsToIncludeFile = system.file("extdata", "example.IDsToIncludeFile.txt", package = "GRAB")
RangesToIncludeFile = system.file("extdata", "example.RangesToIncludeFile.txt", package = "GRAB")
GenoList = GRAB.SimuGMatFromGenoFile(nFam, nSub, FamMode, PLINKFile,
control = list(IDsToIncludeFile = IDsToIncludeFile,
RangesToIncludeFile = RangesToIncludeFile,
AlleleOrder = "ref-first"))
GenoList
?GRAB.ReadGeno
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE)) # If include/exclude files are not specified, then control$AllMarker should be TRUE
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
head(GenoMat[,1:6])
head(markerInfo)
PLINKFile = system.file("extdata", "example.bed", package = "GRAB")
IDsToIncludeFile = system.file("extdata", "example.IDsToIncludeFile.txt", package = "GRAB")
RangesToIncludeFile = system.file("extdata", "example.RangesToIncludeFile.txt", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile,
control = list(IDsToIncludeFile = IDsToIncludeFile,
RangesToIncludeFile = RangesToIncludeFile,
AlleleOrder = "ref-first"))
GenoMat = GenoList$GenoMat
head(GenoMat)
markerInfo = GenoList$markerInfo
head(markerInfo)
?GRAB.SimuGMatFromGenoFile
G=matrix(1, 3, 3)
G
G[G==1]=rbinom(9, 1, 0.5)
G
which(G == 1)
G[which(G == 1)]=2
G
