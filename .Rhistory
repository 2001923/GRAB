markerInfo = GenoList$markerInfo
Q
BGENFile = system.file("extdata", "example_bgen_1.2_8bits.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile)
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
markerInfo
PLINKFile = system.file("extdata", "example.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile)
GenoFile = PLINKFile
GenoFileIndex
GenoFileIndex = c(gsub("bed$", "bim", GenoFile),
gsub("bed$", "fam", GenoFile))
bimFile = GenoFileIndex[1]
famFile = GenoFileIndex[2]
sampleInfo = data.table::fread(famFile, header = F, sep = "\t")
samplesInGeno = sampleInfo$V2
samplesInGeno
head(sampleInfo)
bimFile
markerInfo = data.table::fread(bimFile, header = F, sep = "\t")
markerInfo
sampleInfo = data.table::fread(famFile, header = F, sep = " ")
head(sampleInfo)
ncol(markerInfo)
library(GRAB)
?GRAB.ReadGeno
RawFile = system.file("extdata", "example.raw", package = "GRAB")
GenoMat = data.table::fread(RawFile)
head(GenoMat[,1:15])
## The below is from PLINK input
PLINKFile = system.file("extdata", "example.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile)
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
head(GenoMat)
markerInfo
BGENFile = system.file("extdata", "example_bgen_1.2_8bits.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile)
GenoMat = GenoList$GenoMat
markerInfo = GenoList$markerInfo
head(GenoMat)
markerInfo
BGENFile = system.file("extdata", "example_bgen_1.2_8bits.bgen", package = "GRAB")
checkIfSampleIDsExist(BGENFile)
BGENFile = system.file("extdata", "example_bgen_1.2_8bits.bgen", package = "GRAB")
getVersionFromBGEN(BGENFile)
?GRAB.ReadGeno
stop("aa","bb")
stop("aa ","bb")
library(GRAB)
?GRAB.ReadGeno
PLINKFile = system.file("extdata", "example.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile)
print("aaa")
cat("aaa")
cat("aaa","bb")
cat("aaa\t","bb")
cat("aaa\tbb")
bb="cc"
cat("aaa\tbb",bb)
?cat
?data.table::fread
library(GRAB)
?GRAB.ReadGeno
RawFile = system.file("extdata", "example.raw", package = "GRAB")
GenoMat = data.table::fread(RawFile)
head(GenoMat[,1:15])
## The below is from PLINK input
PLINKFile = system.file("extdata", "example.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile)
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarker = TRUE))
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE))
GenoMat = GenoList$GenoMat
dim(GenoMat)
head(GenoMat[,1:15])
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE, AlleleOrder = "ref-first"))
GenoMat = GenoList$GenoMat
head(GenoMat[,1:15])
head(GenoList$markerInfo)
69608*1.05
69608*1.06
8130/0.95
library(GRAB)
?GRAB.ReadGeno
library(SKAT)
?SKAT
?SKAT
?SKAT
SKAT
SKAT_With_NullModel
SKAT:::SKAT_With_NullModel
plot(2*seq(0.1,0.9,0.1))
rbind(2*seq(0.1,0.9,0.1),round(2*seq(0.1,0.9,0.1)))
rbind(seq(0.1,0.9,0.1),round(2*seq(0.1,0.9,0.1)))
Rcpp::sourceCpp("C:/Users/wenjianb/Desktop/testRound.cpp")
Rcpp::sourceCpp("C:/Users/wenjianb/Desktop/testRound.cpp")
library(GRAB)
?GRAB.ReadGeno
library(GRAB)
?GRAB.ReadGeno
?GRAB::plink.make
n = 1000
m = 20
MAF = 0.3
Geno.mat = matrix(rbinom(n*m, 2, MAF), n, m)
rownames(Geno.mat) = paste0("subj-",1:n)
colnames(Geno.mat) = paste0("SNP-",1:m)
work.dir = system.file("results", package = "GRAB")
out.prefix = "test"
mCHRs = FALSE
BP = NULL
plink.make(Geno.mat, work.dir, out.prefix, mCHRs, BP)
Geno.mat = matrix(rbinom(n*m, 2, MAF), n, m)
dim(Geno.mat)
head(Geno.mat)
GRAB::plink.make()
?GRAB::plink.make
n = 1000
m = 20
MAF = 0.3
Geno.mat = matrix(rbinom(n*m, 2, MAF), n, m)
dim(Geno.mat)
head(Geno.mat)
length(Geno.mat)
random(length(Geno.mat), 0.1)
?sample
sample(length(Geno.mat), 0.1)
sample(1:length(Geno.mat), 0.1)
sample(1:length(Geno.mat), prob = 0.1)
sample(length(Geno.mat), prob = 0.1)
sample(length(Geno.mat), size = 0.1 * length(Geno.mat))
sample(length(Geno.mat), size = 0.1 * length(Geno.mat))
unique(Geno.mat)
unique(unlist(Geno.mat))
unique(as.numeric(Geno.mat))
class(Geno.mat)
Geno.mat
is.numeric(Geno.mat)
unique(as.numeric(Geno.mat))
any(!unique(as.numeric(Geno.mat)) %in% c(0, 1, 2, -9))
?matrix
matrix("0", 3,4)
library(GRAB)
?plink.make
n = 1000
m = 20
MAF = 0.3
Geno.mat = matrix(rbinom(n*m, 2, MAF), n, m)
rownames(Geno.mat) = paste0("Subj-",1:n)
colnames(Geno.mat) = paste0("SNP-",1:m)
indexMissing = sample(n*m, 0.1*n*m)
Geno.mat[indexMissing] = -9
head(Geno.mat)
work.dir = system.file("results", package = "GRAB")
out.prefix = "simuPLINK"
mCHRs = FALSE   # if FALSE, chromosomes of all markers are 1
BP = NULL
plink.make(Geno.mat, work.dir, out.prefix, mCHRs, BP)
library(GRAB)
?plink.make
n = 1000
m = 20
MAF = 0.3
Geno.mat = matrix(rbinom(n*m, 2, MAF), n, m)
rownames(Geno.mat) = paste0("Subj-",1:n)
colnames(Geno.mat) = paste0("SNP-",1:m)
indexMissing = sample(n*m, 0.1*n*m)
Geno.mat[indexMissing] = -9
work.dir = system.file("results", package = "GRAB")
out.prefix = "simuPLINK"
mCHRs = FALSE   # if FALSE, chromosomes of all markers are 1
BP = NULL
plink.make(Geno.mat, work.dir, out.prefix, mCHRs, BP)
head(Geno.mat)
library(GRAB)
?GRAB::plink.make
n = 1000
m = 20
MAF = 0.3
Geno.mat = matrix(rbinom(n*m, 2, MAF), n, m)
rownames(Geno.mat) = paste0("Subj-",1:n)
colnames(Geno.mat) = paste0("SNP-",1:m)
indexMissing = sample(n*m, 0.1*n*m)
Geno.mat[indexMissing] = -9
work.dir = system.file("results", package = "GRAB")
out.prefix = "simuPLINK"
mCHRs = FALSE   # if FALSE, chromosomes of all markers are 1
BP = NULL
plink.make(Geno.mat, work.dir, out.prefix, mCHRs, BP)
indexMissing = sample(n*m, 0.1*n*m)
Geno.mat[indexMissing] = -9
work.dir = system.file("results", package = "GRAB")
out.prefix = "simuPLINK"
mCHRs = FALSE   # if FALSE, chromosomes of all markers are 1
BP = NULL
plink.make(Geno.mat, work.dir, out.prefix, mCHRs, BP, Pheno = c(1,2))
indexMissing = sample(n*m, 0.1*n*m)
Geno.mat[indexMissing] = -9
work.dir = system.file("results", package = "GRAB")
out.prefix = "simuPLINK"
mCHRs = FALSE   # if FALSE, chromosomes of all markers are 1
BP = NULL
plink.make(Geno.mat, work.dir, out.prefix, mCHRs, BP, Pheno = rep(1,n))
library(GRAB)
?plink.make
n = 1000
m = 20
MAF = 0.3
Geno.mat = matrix(rbinom(n*m, 2, MAF), n, m)
rownames(Geno.mat) = paste0("Subj-",1:n)
colnames(Geno.mat) = paste0("SNP-",1:m)
indexMissing = sample(n*m, 0.1*n*m)
Geno.mat[indexMissing] = -9
work.dir = system.file("results", package = "GRAB")
out.prefix = "simuPLINK"
mCHRs = FALSE   # if FALSE, chromosomes of all markers are 1
BP = NULL
plink.make(Geno.mat, work.dir, out.prefix, mCHRs, BP)
?GRAB.ReadGeno
?GRAB.ReadGeno
?GRAB.ReadGeno
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
PLINKFile
library(GRAB)
?GRAB.ReadGeno
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
head(GenoList$markerInfo)
?plink.make
BP=NULL
m=10
ifelse(is.null(BP), 1:m, BP)
is.null(BP)
1:m
mCHRs=TRUE
ifelse(mCHRs, sample(1:22, m, replace=T)
ï¼‰
ifelse(mCHRs, sample(1:22, m, replace=T), 1)
m
sample(1:22, m, replace=T)
?ifelse
ifelse(TRUE, 1,0)
ifelse(TRUE, c(1,2), 0)
ifelse(FALSE, c(1,2), c(0,0))
?GRAB.ReadGeno
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE, ImputeMethod = "mean"))
head(GenoList$GenoMat)
library(GRAB)
?GRAB.ReadGeno
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
library(GRAB)
?GRAB.ReadGeno
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE, sparse = TRUE))
head(GenoList$GenoMat)
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE), sparse = TRUE)
head(GenoList$GenoMat)
library(GRAB)
?GRAB.ReadGeno
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
library(GRAB)
?GRAB.ReadGeno
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE, ImputeMethod = "s"))
head(GenoList$GenoMat)
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE, ImputeMethod = "mean"))
head(GenoList$GenoMat)
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE, ImputeMethod = "bestguess"))
head(GenoList$GenoMat)
library(GRAB)
?GRAB.ReadGeno
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
library(GRAB)
?GRAB.ReadGeno
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE, ImputeMethod = "mean"))
library(GRAB)
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE, ImputeMethod = "mean"))
head(GenoList$GenoMat)
PLINKFile
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE, ImputeMethod = "mean"))
head(GenoList$GenoMat)
library(GRAB)
?GRAB.ReadGeno
BGENFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
BGENFile
BGENFile = system.file("extdata", "simuPLINK.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile, control = list(AllMarkers = TRUE))
BGENFile
BGENFile = system.file("extdata", "simuPLINK.bgen", package = "GRAB")
BGENFile
system.file("extdata", package="GRAB")
BGENFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
BGENFile
GenoList = GRAB.ReadGeno(BGENFile, control = list(AllMarkers = TRUE))
library(GRAB)
?GRAB.ReadGeno
BGENFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
GenoList$markerInfo
BGENFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
GenoList$markerInfo
library(GRAB)
?GRAB.ReadGeno
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
BGENFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
getVersionFromBGEN(BGENFile)
?getVersionFromBGEN
?GRAB.ReadGeno
library(GRAB)
?GRAB.ReadGeno
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
BGENFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
library(GRAB)
?GRAB.ReadGeno
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
BGENFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE, ImputeMethod = "mean"))
head(GenoList$GenoMat)
BGENFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile, control = list(AllMarkers = TRUE, ImputeMethod = "mean"))
head(GenoList$GenoMat)
library(GRAB)
?GRAB.ReadGeno
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
BGENFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
\code{system.file("extdata", "simuBGEN.sample", package = "GRAB")
system.file("extdata", "simuBGEN.sample", package = "GRAB")
data.table::fread("C:/Users/wenjianb/Documents/R/win-library/4.1/GRAB/extdata/simuBGEN.sample")
colnames(sampleData)[1:4] != c("ID_1", "ID_2", "missing", "sex")
sampleData = data.table::fread("C:/Users/wenjianb/Documents/R/win-library/4.1/GRAB/extdata/simuBGEN.sample", header=T, sep = " ")
head(sampleData)
colnames(sampleData)[1:4] != c("ID_1", "ID_2", "missing", "sex")
sampleData[1,1:4] != c(0,0,0,"D")
any(colnames(sampleData)[1:4] != c("ID_1", "ID_2", "missing", "sex")) | any(sampleData[1,1:4] != c(0,0,0,"D"))
as.character(sampleData$ID_2[-1])
library(GRAB)
?GRAB.ReadGeno
library(GRAB)
?GRAB.ReadGeno
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE, ImputeMethod = "mean"))
head(GenoList$GenoMat)
BGENFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
library(GRAB)
?plink.make
n = 1000
m = 20
MAF = 0.3
Geno.mat = matrix(rbinom(n*m, 2, MAF), n, m)
rownames(Geno.mat) = paste0("Subj-",1:n)
colnames(Geno.mat) = paste0("SNP-",1:m)
indexMissing = sample(n*m, 0.1*n*m)
Geno.mat[indexMissing] = -9
work.dir = system.file("results", package = "GRAB")
out.prefix = "simuPLINK"
mCHRs = FALSE   # if FALSE, chromosomes of all markers are 1
BP = NULL
plink.make(Geno.mat, work.dir, out.prefix, mCHRs, BP)
data.table::fread("C:/Users/wenjianb/Documents/R/win-library/4.1/GRAB/results/simuPLINK.ped")
data.table::fread("C:/Users/wenjianb/Documents/R/win-library/4.1/GRAB/results/simuPLINK.bim")
data.table::fread("C:/Users/wenjianb/Documents/R/win-library/4.1/GRAB/results/simuPLINK.map")
?GRAB.ReadGeno
library(GRAB)
?GRAB.ReadGeno
PLINKFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
GenoList = GRAB.ReadGeno(PLINKFile, control = list(AllMarkers = TRUE, ImputeMethod = "mean"))
head(GenoList$GenoMat)
BGENFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
GenoList = GRAB.ReadGeno(BGENFile, control = list(AllMarkers = TRUE))
head(GenoList$GenoMat)
GenoList$markerInfo
?GRAB.NullModel
60319 / 0.95
751630.45 * 1.13
60319.5 * 1.13
60319.5 * 1.13
1800 / 68161
(73300 - 68161) / 68161
69608 / 0.95
qnorm(c(0.05))
qnorm(0)
qnorm(0.025)
?GRAB.ReadGeno
library(GRAB)
?GRAB.Region
?GRAB.ReadGeno
?GRAB.NullModel
?GRAB.NullModel
?GRAB.ReadGeno
library(SKAT)
?SKAT_Null_Model
?GRAB.NullModel
?SKAT_Null_Model
?GRAB.NullModel
?model.frame
?GRAB.NullModel
?model.frame
?model.frame
library(GRAB)
?GRAB.NullModel
?model.frame
?GRAB.NullModel
?model.frame
library(GRAB)
?GRAB.NullModel
?.data.frame
?[.data.frame)
?GRAB.NullModel
?data.frame
?model.frame
?data.frame
?data.frame
?model.frame
?subset
?GRAB.POLMM
?GRAB.NullModel
?GRAB.ReadGeno
library(GRAB)
?GRAB.NullModel
library(GRAB)
?GRAB.NullModel
?save
?GRAB.NullModel
?GRAB.POLMM
?GRAB.control
?glm
library(GRAB)
?GRAB.NullModel
?GRAB.POLMM
?GRAB.NullModel
?glm
?GRAB.NullModel
library(GRAB)
?GRAB.NullModel
library(GRAB)
?GRAB.ReadGeno
?GRAB.NullModel
?GRAB::getSparseGRM
library(GRAB)
?GRAB.NullModel
?GRM
?getSparseGRM
?getSparseGRM
?getSparseGRM
help(getSparseGRM)
\code{system.file("SparseGRM","SparseGRM.txt",package="GRAB")}
system.file("SparseGRM","SparseGRM.txt",package="GRAB")
data.table::fread("C:/Users/wenjianb/Documents/R/win-library/4.1/GRAB/SparseGRM/SparseGRM.txt")
PlinkFile = "sdfsd.bdsdf.bed"
basename(PlinkFile)
system.file("SparseGRM", "temp", package = "GRAB")
library(GRAB)
?getSparseGRM
?GRAB.NullModel
?getSparseGRM
?getTempFilesFullGRM
