library(GRAB)
library(GRAB)
?GRAB::readGeno
library(devtools)  # author version: 2.3.0
install_github("GeneticAnalysisinBiobanks/GRAB")
?GRAB
?GRAB::GRAB.Marker
seq(1, 1000, 10)
seq(1, 1000, 1000)
splitMarker = function(markers, nMarkersEachChunk)
{
M = length(markers)
idxStart = seq(1, M, nMarkersEachChunk)
idxEnd = idxStart + nMarkersEachChunk - 1
nChunks = length(idxStart)
idxEnd[nChunks] = min(idxEnd[nChunks], M)
markerList = list()
for(i in 1:nChunks){
idxMarker = idxStart[i]:idxEnd[i]
markerList[[i]] = markers[idxMarker]
}
return(markerList)
}
splitMarker(1:10,2)
splitMarker(1:10, 3)
splitMarker(1:10, 10)
splitMarker(1:10, 11)
splitMarker = function(markers, nMarkersEachChunk)
{
M = length(markers)
idxStart = seq(1, M, nMarkersEachChunk)
idxEnd = idxStart + nMarkersEachChunk - 1
nChunks = length(idxStart)
idxEnd[nChunks] = M
markerList = list()
for(i in 1:nChunks){
idxMarker = idxStart[i]:idxEnd[i]
markerList[[i]] = markers[idxMarker]
}
return(markerList)
}
splitMarker(1:10, 2)
splitMarker(1:10, 3)
splitMarker(1:10, 10)
splitMarker(1:10, 11)
p=runif(1e6)
sum(p<1e-4)
library(GRAB)
?readGeno
?readGeno
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoMat = readGeno(GenoFile)
GenoFile
dim(GenoMat)
head(GenoMat)
library(GRAB)
library(GRAB)
?GRAB::readGeno
library(GRAB)
?CCT
GRAB::CCT()
?GRAB::CCT
library(GRAB)
?GRAB::CCT
??CCT
library(GRAB)
library(GRAB)
library(GRAB)
library(GRAB)
library(GRAB)
library(GRAB)
?CCT
library(GRAB)
?CCT
pvalues <- c(2e-02,4e-04,0.2,0.1,0.8)
CCT(pvals=pvalues)
source('Y:/POLMM-Gene/UKBB/2021-01-04-WES-200k-liking-anno/CCT.R', echo=TRUE)
library(GRAB)
library(GRAB)
sigLevel = 2.5e-6
sigLevel
library(GRAB)
rm(list=ls())
library(SPACox)
SPACox.one.SNP
SPACox:::GetProb_SPA
SPACox::K2
SPACox:::K2
SPACox:::SPACox_Null_Model
?approxfun
x <- 1:10
y <- rnorm(10)
par(mfrow = c(2,1))
plot(x, y, main = "approx(.) and approxfun(.)")
points(approx(x, y), col = 2, pch = "*")
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
rm(list=ls())
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
.x
x
?approxfun
stats::approxfun
C_ApproxTest
.Call(C_ApproxTest)
a=runif(10)
b=rnorm(10)
fun1=approxfun(sort(a),b)
?uniroot
?approxfun
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
f=approxfunInCPP(x, y, a)
f(1)
f(2)
f(0.1)
f(0.4)
f(0.6)
x
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
?uniroot
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
?uniroot
f <- function (x, a) x - a
f(c(2,3,4),2)
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
x
y
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
findRoot(f)
?root
?uniroot
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
?approxfun
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('C:/Users/wenji/Dropbox/software/check-load-R-Code.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
approxfun
xVec=1:10;yVec=rnorm(10);f=approxfun(xVec,yVec)
f
class(f)
View(f)
?approxfun
Rcpp::sourceCpp('src/approxfun.cpp')
Rcpp::sourceCpp('src/approxfun.cpp')
approxfun(2.5, 1:10, 1:10, 1, 10, 10)
approxfun(2.5, 1:10, 1:20, 1, 10, 10)
seq(1,10,0.5)
approxfun(2.5, seq(1,10,0.5), 1:19, 1, 19, 19)
seq(1,10,0.5)
approxfun(2.7, seq(1,10,0.5), 1:19, 1, 19, 19)
Rcpp::sourceCpp('src/temp.cpp')
Rcpp::sourceCpp('src/temp.cpp')
Rcpp::sourceCpp('src/temp.cpp')
mean(c(0.55391765,-0.06191171))
tempFun(2, xVec, yVec)
tempFun(3, xVec, yVec)
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
uniroot
Rcpp::sourceCpp('src/uniroot.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
Rcpp::sourceCpp('src/SPACOX.cpp')
help(SPACox::SPACox)
help(SPACox)
nData=10
nGeno=5
nBoth=3
rprintf("Number of subjects in 'formula':\t%d",nData)
rprintf("Number of subjects in 'GenoFile':\t%d",nGeno)
rprintf("Number of subjects in both 'formula' and 'GenoFile':\t%d",nBoth)
printf("Number of subjects in 'formula':\t%d",nData)
?
cat
print("a\t")
print("a\tb")
cat("a\tb")
cat("Number of subjects in 'formula':\t", nData)
cat("Number of subjects in 'GenoFile':\t", nGeno)
cat("Number of subjects in both 'formula' and 'GenoFile':\t", nBoth)
cat("Number of subjects in 'formula':\t", nData,"\n")
cat("Number of subjects in 'GenoFile':\t", nGeno,"\n")
cat("Number of subjects in both 'formula' and 'GenoFile':\t", nBoth,"\n")
?formula
?coxph
?survival::coxph
?survival::Surv
?survival::coxph
library(survival)
test1 <- list(time=c(4,3,1,1,2,2,3),
status=c(1,1,1,0,1,1,0),
x=c(0,2,1,1,1,0,0),
sex=c(0,0,0,0,1,1,1))
# Fit a stratified model
obj.coxph=coxph(Surv(time, status) ~ x + strata(sex), test1)
obj.coxph$na.action
test1$time[1]=NA
obj.coxph=coxph(Surv(time, status) ~ x + strata(sex), test1, x=T)
obj.coxph$na.action
c(obj.coxph$na.action)
options()\$na.action
a=options()
a$na.action
obj.coxph$n
obj.coxph$nevent
a=model.frame(Surv(time, status) ~ x + strata(sex), test1)
a$`Surv(time, status)`
a$x
a$`strata(sex)`
a
class(a)
rownames(a)
print(c("aa","bb"))
?SPACox
library(SPACox)
?SPACox
source('~/Github/GRAB/R/SPACox.R', echo=TRUE)
library(GRAB)
?GRAB.NullModel
library(GRAB)
?GRAB.NullModel
N = 10000
nSNP = 1000
MAF = 0.1
Pheno = data.frame(ID = paste0("IID-",1:N),
event=rbinom(N,1,0.5),
time=runif(N),
Cov1=rnorm(N),
Cov2=rbinom(N,1,0.5))
Pheno
head(Pheno)
?readGeno
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
GenoMat = readGeno(GenoFile)
head(GenoMat)
dim(GenoMat)
rownames(GenoMat)
N=10
paste0("f",1:N,"_1")
?SPACox::SPACox
library(GRAB)
?GRAB.NullModel
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
N = 100
Pheno = data.frame(ID = paste0("f",1:N,"_1"),
event=rbinom(N,1,0.5),
time=runif(N),
Cov1=rnorm(N),
Cov2=rbinom(N,1,0.5))
obj.SPACox = GRAB.NullModel(survival::Surv(time,event)~Cov1+Cov2,
data=Pheno, subjData = Pheno$ID, method = "SPACox", GenoFile = GenoFile)
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
N = 100
Pheno = data.frame(ID = paste0("f",1:N,"_1"),
event=rbinom(N,1,0.5),
time=runif(N),
Cov1=rnorm(N),
Cov2=rbinom(N,1,0.5))
obj.SPACox = GRAB.NullModel(survival::Surv(time,event)~Cov1+Cov2,
data=Pheno, subjData = Pheno$ID, method = "SPACox", GenoFile = GenoFile)
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
N = 100
Pheno = data.frame(ID = paste0("f",1:N,"_1"),
event=rbinom(N,1,0.5),
time=runif(N),
Cov1=rnorm(N),
Cov2=rbinom(N,1,0.5))
obj.SPACox = GRAB.NullModel(survival::Surv(time,event)~Cov1+Cov2,
data=Pheno, subjData = Pheno$ID, method = "SPACox", GenoFile = GenoFile)
library(GRAB)
?GRAB.NullModel
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
N = 100
Pheno = data.frame(ID = paste0("f",1:N,"_1"),
event=rbinom(N,1,0.5),
time=runif(N),
Cov1=rnorm(N),
Cov2=rbinom(N,1,0.5))
obj.SPACox = GRAB.NullModel(survival::Surv(time,event)~Cov1+Cov2,
data=Pheno, subjData = Pheno$ID, method = "SPACox", GenoFile = GenoFile)
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
N = 100
Pheno = data.frame(ID = paste0("f",1:N,"_1"),
event=rbinom(N,1,0.5),
time=runif(N),
Cov1=rnorm(N),
Cov2=rbinom(N,1,0.5))
obj.SPACox = GRAB.NullModel(survival::Surv(time,event)~Cov1+Cov2,
data=Pheno, subjData = Pheno$ID, method = "SPACox", GenoFile = GenoFile)
GRAB:::checkControl.NullModel.SPACox
library(GRAB)
?GRAB.NullModel
?GRAB::GRAB.NullModel
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
N = 100
Pheno = data.frame(ID = paste0("f",1:N,"_1"),
event=rbinom(N,1,0.5),
time=runif(N),
Cov1=rnorm(N),
Cov2=rbinom(N,1,0.5))
obj.SPACox = GRAB.NullModel(survival::Surv(time,event)~Cov1+Cov2,
data=Pheno, subjData = Pheno$ID, method = "SPACox", GenoFile = GenoFile)
library(GRAB)
?GRAB.NullModel
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
N = 100
Pheno = data.frame(ID = paste0("f",1:N,"_1"),
event=rbinom(N,1,0.5),
time=runif(N),
Cov1=rnorm(N),
Cov2=rbinom(N,1,0.5))
obj.SPACox = GRAB.NullModel(survival::Surv(time,event)~Cov1+Cov2,
data=Pheno, subjData = Pheno$ID, method = "SPACox", GenoFile = GenoFile)
obj.SPACox$Call
obj.SPACox$``
obj.SPACox = list(a=1,b=3)
obj.SPACox
obj.SPACox$csd=3
call()
Call
library(GRAB)
?GRAB.NullModel
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
N = 100
Pheno = data.frame(ID = paste0("f",1:N,"_1"),
event=rbinom(N,1,0.5),
time=runif(N),
Cov1=rnorm(N),
Cov2=rbinom(N,1,0.5))
obj.SPACox = GRAB.NullModel(survival::Surv(time,event)~Cov1+Cov2,
data=Pheno, subjData = Pheno$ID, method = "SPACox", GenoFile = GenoFile)
obj.SPACox
library(GRAB)
GenoFile = system.file("extdata", "nSNPs-10000-nsubj-1000-ext.bed", package = "GRAB")
N = 100
Pheno = data.frame(ID = paste0("f",1:N,"_1"),
event=rbinom(N,1,0.5),
time=runif(N),
Cov1=rnorm(N),
Cov2=rbinom(N,1,0.5))
obj.SPACox = GRAB.NullModel(survival::Surv(time,event)~Cov1+Cov2,
data=Pheno, subjData = Pheno$ID, method = "SPACox", GenoFile = GenoFile)
obj.SPACox
